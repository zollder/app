<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project activeEnvironment="Default" name="customer" resourceRoot="" soapui-version="4.5.1" xmlns:con="http://eviware.com/soapui/config">
  <con:settings/>
  <con:testSuite name="Services">
    <con:settings>
      <con:setting id="IncludeOverview">true</con:setting>
      <con:setting id="IncludeResults">true</con:setting>
      <con:setting id="FlowLayout">false</con:setting>
      <con:setting id="ErrorDetails">true</con:setting>
      <con:setting id="IncludeCoverage">true</con:setting>
      <con:setting id="GeneratableJUnitReport@Style">Multiple Pages</con:setting>
      <con:setting id="GeneratableJUnitReport@Folder"/>
    </con:settings>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="true" maxResults="0" name="CustomerWS_services" searchProperties="true" id="fb808198-5642-4b45-8555-4a8fa6f6b759">
      <con:settings/>
      <con:testStep type="properties" name="properties">
        <con:settings/>
        <con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:properties>
            <con:property>
              <con:name>login.username</con:name>
              <con:value>user1</con:value>
            </con:property>
            <con:property>
              <con:name>login.password</con:name>
              <con:value>Super@234</con:value>
            </con:property>
            <con:property>
              <con:name>ws.api-key</con:name>
              <con:value>qv0oxZd8791Pi5EP6QSwT76Wi1BRMvPM</con:value>
            </con:property>
            <con:property>
              <con:name>content.json</con:name>
              <con:value>application/json</con:value>
            </con:property>
            <con:property>
              <con:name>category</con:name>
              <con:value>ActivationReason</con:value>
            </con:property>
            <con:property>
              <con:name>---------------------------customer WS properties</con:name>
              <con:value/>
            </con:property>
            <con:property>
              <con:name>customer.id</con:name>
              <con:value>1</con:value>
            </con:property>
            <con:property>
              <con:name>customer.new.id</con:name>
              <con:value>245</con:value>
            </con:property>
            <con:property>
              <con:name>customer.firstName</con:name>
              <con:value>fname</con:value>
            </con:property>
            <con:property>
              <con:name>customer.lastName</con:name>
              <con:value>sname</con:value>
            </con:property>
            <con:property>
              <con:name>customer.gender</con:name>
              <con:value>1</con:value>
            </con:property>
            <con:property>
              <con:name>customer.dateOfBirth</con:name>
              <con:value>1980-01-01</con:value>
            </con:property>
            <con:property>
              <con:name>customer.autoRenew</con:name>
              <con:value>false</con:value>
            </con:property>
            <con:property>
              <con:name>customer.username</con:name>
              <con:value>username11</con:value>
            </con:property>
            <con:property>
              <con:name>customer.password</con:name>
              <con:value>Super@234</con:value>
            </con:property>
            <con:property>
              <con:name>customer.enabled</con:name>
              <con:value>1</con:value>
            </con:property>
            <con:property>
              <con:name>customer.usertype</con:name>
              <con:value>Subscriber</con:value>
            </con:property>
            <con:property>
              <con:name>customer.address1</con:name>
              <con:value>add1</con:value>
            </con:property>
            <con:property>
              <con:name>customer.address2</con:name>
              <con:value>add2</con:value>
            </con:property>
            <con:property>
              <con:name>customer.address3</con:name>
              <con:value>add3</con:value>
            </con:property>
            <con:property>
              <con:name>customer.city</con:name>
              <con:value>city</con:value>
            </con:property>
            <con:property>
              <con:name>customer.state</con:name>
              <con:value>362</con:value>
            </con:property>
            <con:property>
              <con:name>customer.country</con:name>
              <con:value>92</con:value>
            </con:property>
            <con:property>
              <con:name>customer.primarycutomerid</con:name>
              <con:value/>
            </con:property>
            <con:property>
              <con:name>customer.language</con:name>
              <con:value>1</con:value>
            </con:property>
            <con:property>
              <con:name>customer.phone1</con:name>
              <con:value>5147892494</con:value>
            </con:property>
            <con:property>
              <con:name>customer.phone2</con:name>
              <con:value>5551000001</con:value>
            </con:property>
            <con:property>
              <con:name>customer.email</con:name>
              <con:value>test@test.com</con:value>
            </con:property>
            <con:property>
              <con:name>customer.zipcode</con:name>
              <con:value>22222</con:value>
            </con:property>
            <con:property>
              <con:name>customer.cardOwner</con:name>
              <con:value>test owner</con:value>
            </con:property>
            <con:property>
              <con:name>customer.cardNumber</con:name>
              <con:value>4200101001000001</con:value>
            </con:property>
            <con:property>
              <con:name>customer.expirationDate</con:name>
              <con:value>2015-01</con:value>
            </con:property>
            <con:property>
              <con:name>customer.cvv</con:name>
              <con:value>000</con:value>
            </con:property>
            <con:property>
              <con:name>customer.ownerAddress</con:name>
              <con:value>add1</con:value>
            </con:property>
            <con:property>
              <con:name>customer.ownerCity</con:name>
              <con:value>city</con:value>
            </con:property>
            <con:property>
              <con:name>customer.ownerState</con:name>
              <con:value>362</con:value>
            </con:property>
            <con:property>
              <con:name>customer.ownerCountry</con:name>
              <con:value>92</con:value>
            </con:property>
            <con:property>
              <con:name>customer.ownerZipCode</con:name>
              <con:value>22222</con:value>
            </con:property>
            <con:property>
              <con:name>customer.planType</con:name>
              <con:value>178</con:value>
            </con:property>
            <con:property>
              <con:name>customer.cardType</con:name>
              <con:value>1</con:value>
            </con:property>
            <con:property>
              <con:name>customer.redemptionNo_1</con:name>
              <con:value/>
            </con:property>
            <con:property>
              <con:name>customer.alternatePhoneNumberType</con:name>
              <con:value>1</con:value>
            </con:property>
            <con:property>
              <con:name>customer.phoneNumberType</con:name>
              <con:value>2</con:value>
            </con:property>
            <con:property>
              <con:name>customer.securityQuestionId</con:name>
              <con:value>3</con:value>
            </con:property>
            <con:property>
              <con:name>customer.answer</con:name>
              <con:value>12</con:value>
            </con:property>
            <con:property>
              <con:name>customer.datesince</con:name>
              <con:value>2012-04-10</con:value>
            </con:property>
            <con:property>
              <con:name>customer.dateuntil</con:name>
              <con:value>2013-04-10</con:value>
            </con:property>
            <con:property>
              <con:name>customer.autorenew.flag</con:name>
              <con:value>true</con:value>
            </con:property>
            <con:property>
              <con:name>customer.invoice.id</con:name>
              <con:value>1</con:value>
            </con:property>
            <con:property>
              <con:name>customer.favoriteStation.id</con:name>
              <con:value>5</con:value>
            </con:property>
            <con:property>
              <con:name>customer.redemptionNo_2</con:name>
              <con:value>10000001</con:value>
            </con:property>
            <con:property>
              <con:name>customer.newPassword</con:name>
              <con:value>newPassword1</con:value>
            </con:property>
            <con:property>
              <con:name>customer.key.locationStatus</con:name>
              <con:value>1</con:value>
            </con:property>
            <con:property>
              <con:name>customer.uaid</con:name>
              <con:value xsi:nil="true"/>
            </con:property>
            <con:property>
              <con:name>--------------------kiosk service properties  (data setup)</con:name>
              <con:value/>
            </con:property>
            <con:property>
              <con:name>bike.startTime</con:name>
              <con:value>2013-04-09 07:32:53</con:value>
            </con:property>
            <con:property>
              <con:name>bike.stopTime</con:name>
              <con:value>2013-04-10 12:32:53</con:value>
            </con:property>
            <con:property>
              <con:name>kiosk.newKey.msnbc</con:name>
              <con:value>msnbc-newKey2</con:value>
            </con:property>
            <con:property>
              <con:name>kiosk.newKey.msnemb</con:name>
              <con:value>msnemb-newKey2</con:value>
            </con:property>
            <con:property>
              <con:name>kiosk.newKey.batch.id</con:name>
              <con:value>1</con:value>
            </con:property>
            <con:property>
              <con:name>kiosk.newKey.createdBy.id</con:name>
              <con:value>1</con:value>
            </con:property>
            <con:property>
              <con:name>kiosk.bike.msn_emb</con:name>
              <con:value>msnemb-bike2</con:value>
            </con:property>
            <con:property>
              <con:name>kiosk.dock.msnemb</con:name>
              <con:value>msnemb-dp2</con:value>
            </con:property>
            <con:property>
              <con:name>kiosk.key.msnemb</con:name>
              <con:value>msnemb-key2</con:value>
            </con:property>
            <con:property>
              <con:name>kiosk.key.msnbc</con:name>
              <con:value>msnbc-key2</con:value>
            </con:property>
            <con:property>
              <con:name>kiosk.bike.gpsData</con:name>
              <con:value>$GPRMC,162213.000,A,3503.2435,N,08518.6543,W,1.59,186.12,170612,,,A*7E</con:value>
            </con:property>
            <con:property>
              <con:name>brokenKey.msnbc</con:name>
              <con:value>msnbc-Key3</con:value>
            </con:property>
            <con:property>
              <con:name>brokenKey.customer.id</con:name>
              <con:value>2</con:value>
            </con:property>
            <con:property>
              <con:name>--------------------------credit card update</con:name>
              <con:value/>
            </con:property>
            <con:property>
              <con:name>customer.cc.ownerAddress_update</con:name>
              <con:value>add1_update</con:value>
            </con:property>
            <con:property>
              <con:name>customer.cc.ownerZipCode_update</con:name>
              <con:value>33333</con:value>
            </con:property>
            <con:property>
              <con:name>customer.cc.cardNumber_update</con:name>
              <con:value>4000000001000002</con:value>
            </con:property>
            <con:property>
              <con:name>customer.cc.cvv_update</con:name>
              <con:value>111</con:value>
            </con:property>
            <con:property>
              <con:name>customer.cc.expirationDate_update</con:name>
              <con:value>2017-01</con:value>
            </con:property>
            <con:property>
              <con:name>-------------- dependent specific properties</con:name>
              <con:value/>
            </con:property>
            <con:property>
              <con:name>dependent.subscriber.id</con:name>
              <con:value>246</con:value>
            </con:property>
            <con:property>
              <con:name>dependent.firstName</con:name>
              <con:value>dfname</con:value>
            </con:property>
            <con:property>
              <con:name>dependent.lastName</con:name>
              <con:value>dlname</con:value>
            </con:property>
            <con:property>
              <con:name>dependent.gender</con:name>
              <con:value>1</con:value>
            </con:property>
            <con:property>
              <con:name>dependent.dateOfBirth</con:name>
              <con:value>1995-01-01</con:value>
            </con:property>
            <con:property>
              <con:name>dependent.username</con:name>
              <con:value>dusername1</con:value>
            </con:property>
            <con:property>
              <con:name>dependent.password</con:name>
              <con:value>dpassword1</con:value>
            </con:property>
            <con:property>
              <con:name>dependent.enabled</con:name>
              <con:value>1</con:value>
            </con:property>
            <con:property>
              <con:name>dependent.usertype</con:name>
              <con:value>Dependent</con:value>
            </con:property>
            <con:property>
              <con:name>dependent.primarySubscriberId</con:name>
              <con:value>245</con:value>
            </con:property>
            <con:property>
              <con:name>dependent.email</con:name>
              <con:value>test@dependent.com</con:value>
            </con:property>
            <con:property>
              <con:name>session.id</con:name>
              <con:value>JSESSIONID=F4EDFE87AE2D6F2B8BF417EDAFEC313B</con:value>
            </con:property>
            <con:property>
              <con:name>---------------------------other properties</con:name>
              <con:value/>
            </con:property>
            <con:property>
              <con:name>redemptionNo</con:name>
              <con:value>1</con:value>
            </con:property>
          </con:properties>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="set start/stop time">
        <con:settings/>
        <con:config>
          <script>// initialize steps
props = testRunner.testCase.getTestStepByName( "properties" )

sdf = new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss")

time = new Date()
time.setHours(time.getHours() - 30)
startTime = sdf.format(time)
props.setPropertyValue("bike.startTime", startTime)
log.info(startTime)

time = new Date()
time.setHours(time.getHours() - 1)
stopTime = sdf.format(time)
props.setPropertyValue("bike.stopTime", stopTime)
log.info(stopTime)</script>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="getLookupByCategory">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="getLookupByCategory" postQueryString="false" mediaType="application/xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Content-Type" value="application/xml"/>
  &lt;con:entry key="X-API-KEY" value="${ws.api-key}"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.ube}/ws/lookups/category/${category}</con:endpoint>
          <con:request>&lt;keyvalidate> 
   &lt;msnemb>msnemb-key1&lt;/msnemb>
&lt;/keyvalidate></con:request>
          <con:assertion type="Simple Contains" name="message = `success`">
            <con:configuration>
              <token>"success":true</token>
              <ignoreCase>true</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="no error code">
            <con:configuration>
              <token>"errorCode":null</token>
              <ignoreCase>true</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="category">
            <con:configuration>
              <token>"category":"ActivationReason"</token>
              <ignoreCase>true</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains">
            <con:configuration>
              <token/>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:username>${login.username}</con:username>
            <con:password>${login.username}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="isUserExist" id="cee6c82f-aa39-45f1-a268-fee05e9699fb">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="isUserExist" postQueryString="false" mediaType="application/xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X-API-KEY" value="${ws.api-key}"/>
  &lt;con:entry key="Content-Type" value="application/xml"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.ube}/ws/user/${customer.username}</con:endpoint>
          <con:request>&lt;keyvalidate> 
   &lt;msnemb>msnemb-key1&lt;/msnemb>
&lt;/keyvalidate></con:request>
          <con:assertion type="XPath Match" name="success = true">
            <con:configuration>
              <path>//*:Response/*:success</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="successMessage = &quot;Subscriber does not exist.&quot;">
            <con:configuration>
              <path>//*:Response/*:successMessage/text()</path>
              <content>Subscriber does not exist.</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:username>${login.username}</con:username>
            <con:password>${login.username}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="registerCustomer" id="245074bb-9f96-4033-866e-30ad63327758">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="registerCustomer" postQueryString="false" mediaType="application/json" downloadIncludedResources="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X-API-KEY" value="${ws.api-key}"/>
  &lt;con:entry key="Content-Type" value="${content.json}"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.ube}/ws/customer/subscription</con:endpoint>
          <con:request>{
	"customerId" : "",
	"firstName" : "${customer.firstName}",
	"lastName" : "${customer.lastName}",
	"gender" : "${customer.gender}",
	"dateOfBirth" : "${customer.dateOfBirth}",
	"autoRenew" : "${customer.autoRenew}",
	"username" : "${customer.username}",
	"password" : "${customer.password}",
	"enabled" : "${customer.enabled}",
	"usertype" : "${customer.usertype}",
	"address1" : "${customer.address1}",
	"address2" : "${customer.address2}",
	"address3" : "${customer.address3}",
	"city" : "${customer.city}",
	"state" : "${customer.state}",
	"country" : "${customer.country}",
	"primarycutomerid" : "${customer.primarycutomerid}",
	"language" : "${customer.language}",
	"phone1" : "${customer.phone1}",
	"phone2" : "${customer.phone2}",
	"email" : "${customer.email}",
	"zipcode" : "${customer.zipcode}",
	"cardOwner" : "${customer.cardOwner}",
	"cardNumber" : "${customer.cardNumber}",
	"expirationDate" : "${customer.expirationDate}",
	"cvv" : "${customer.cvv}",
	"ownerAddress" : "${customer.ownerAddress}",
	"ownerCity" : "${customer.ownerCity}",
	"ownerState" : "${customer.ownerState}",
	"ownerCountry" : "${customer.ownerCountry}",
	"ownerZipCode" : "${customer.ownerZipCode}",
	"planType" : "${customer.planType}",
	"cardType" : "${customer.cardType}",
	"redemptionNo" : "${customer.redemptionNo_1}",
	"alternatePhoneNumberType" : "${customer.alternatePhoneNumberType}",
	"phoneNumberType" : "${customer.phoneNumberType}",
	"securityQuestionId" : "${customer.securityQuestionId}",
	"answer" : "${customer.answer}"
}</con:request>
          <con:assertion type="XPath Match" name="success = true">
            <con:configuration>
              <path>//*:Response/*:success/text()</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="At least one subscriber is returned">
            <con:configuration>
              <path>count(//*:Response/*:responseObject/*:Subscriber)>0</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Valid username returned">
            <con:configuration>
              <path>//*:Response/*:responseObject/*:Subscriber/*:username/text()</path>
              <content>${customer.username}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="successMessage = Subscriber added successfully">
            <con:configuration>
              <path>//*:Response/*:successMessage/text()</path>
              <content>Subscriber added successfully.</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:username>${login.username}</con:username>
            <con:password>${login.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      <con:testStep type="transfer" name="transfer customer details">
        <con:settings/>
        <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false">
            <con:name>customerId</con:name>
            <con:sourceType>ResponseAsXml</con:sourceType>
            <con:sourceStep>registerCustomer</con:sourceStep>
            <con:sourcePath>//*:Response/*:responseObject/*:Subscriber/*:customerId</con:sourcePath>
            <con:targetType>customer.new.id</con:targetType>
            <con:targetStep>properties</con:targetStep>
            <con:targetPath/>
          </con:transfers>
          <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" useXQuery="false" transferChildNodes="false" entitize="false" transferToAll="false">
            <con:name>primarySubscriberId</con:name>
            <con:sourceType>ResponseAsXml</con:sourceType>
            <con:sourceStep>registerCustomer</con:sourceStep>
            <con:sourcePath>//*:Response/*:responseObject/*:Subscriber/*:customerId</con:sourcePath>
            <con:targetType>dependent.primarySubscriberId</con:targetType>
            <con:targetStep>properties</con:targetStep>
          </con:transfers>
          <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true">
            <con:name>uaid</con:name>
            <con:sourceType>ResponseAsXml</con:sourceType>
            <con:sourceStep>registerCustomer</con:sourceStep>
            <con:sourcePath>//*:Response/*:responseObject/*:Subscriber/*:uaid</con:sourcePath>
            <con:targetType>customer.uaid</con:targetType>
            <con:targetStep>properties</con:targetStep>
          </con:transfers>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="isSubscriberValid" id="da99bd1f-e371-43ca-9721-8d6aa296bee2">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="isSubscriberValid" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Content-Type" value="application/json"/>
  &lt;con:entry key="X-API-KEY" value="${ws.api-key}"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.ube}/ws/secure/isSubscriberValid/${customer.username}/${customer.password}</con:endpoint>
          <con:request>{
	"customerId" : "${customer.id}",
	"dateSince" : "${customer.datesince}",
	"dateUntil" : "${customer.dateuntil}"
}</con:request>
          <con:assertion type="Simple Contains" name="success = true">
            <con:configuration>
              <token>"success":true</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="success message = &quot;The subscriber is valid and enabled.&quot;">
            <con:configuration>
              <token>"successMessage":"The subscriber is valid and enabled."</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:username>${login.username}</con:username>
            <con:password>${login.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="registerKey (kiosk asset controller)" id="120b21ae-9485-48e3-8333-fdb31f2e97c3">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="registerKey (kiosk asset controller)" postQueryString="false" mediaType="application/xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host}/tar/registerKey</con:endpoint>
          <con:request><![CDATA[<key> 
	<msnbc>${kiosk.newKey.msnbc}</msnbc>
	<batchId>${kiosk.newKey.batch.id}</batchId>
	<msnemb>${kiosk.newKey.msnemb}</msnemb>
	<createdBy>${kiosk.newKey.createdBy.id}</createdBy>
</key>]]></con:request>
          <con:assertion type="XPath Match" name="statuscode = 1">
            <con:configuration>
              <path>*/statuscode</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="message = &quot;Key registered succesfully&quot;">
            <con:configuration>
              <path>*/message</path>
              <content>Key registered succesfully</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:username>${login.username}</con:username>
            <con:password>${login.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="assign key to new customer (local)" id="88def4de-1711-4be9-9571-6a09d52bc5f3">
        <con:settings/>
        <con:config>
          <script>import groovy.sql.Sql


// fetch properties, define parameters and prepare sql statement
props = testRunner.testCase.getTestStepByName( "properties" )
globalProps = com.eviware.soapui.SoapUI.globalProperties

// register JDBC driver
def driver = globalProps.getPropertyValue("db.driver")
com.eviware.soapui.support.GroovyUtils.registerJdbcDriver(driver.toString())

// define DB username and password properties
String dburl = globalProps.getPropertyValue("db.url")
String dbuser = globalProps.getPropertyValue("db.user")
String dbpassword = globalProps.getPropertyValue("db.password")

// create new SQL instance
def sql = Sql.newInstance(dburl, dbuser, dbpassword, driver)

// drop foreign key constraint
String dropConstraint = "ALTER TABLE keyinventory DROP FOREIGN KEY FK_Subscriber"
log.info(dropConstraint)
sql.execute(dropConstraint)

// define date format
sdf = new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss")

def time = sdf.format(new Date())
def msnbc = props.getPropertyValue("kiosk.newKey.msnbc")//'msnbc-newKey2'
def subscriberId = props.getPropertyValue("customer.new.id")//192
def keyStatus = 2

def params = [date:time, keyStatus:keyStatus, subscriberId:subscriberId, msnbc:msnbc]
String sqlstring = "UPDATE " + 
					"keyinventory "+
				"SET "+
					"date_key_assigned='$params.date', "+
					"satus_key_assignment='$params.keyStatus', "+
					"Subscriber_id='$params.subscriberId', "+
					"date_key_encrypted='$params.date' "+
				"WHERE "+
					"Msn_bc='$params.msnbc'"
log.info(sqlstring)

// assign the key
sql.execute(sqlstring)

// restore foreign key constraint
String restoreConstraint = "ALTER TABLE keyinventory ADD CONSTRAINT FK_Subscriber FOREIGN KEY (Subscriber_id) REFERENCES customer (id)"
log.info(restoreConstraint)
sql.execute(restoreConstraint)

// verify if the assignment was successful
def result = sql.firstRow("select satus_key_assignment from keyinventory where Msn_bc=$params.msnbc").satus_key_assignment
assert result == keyStatus

sql.close()</script>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="activateKey">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="activateKey" postQueryString="false" mediaType="application/xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X-API-KEY" value="${ws.api-key}"/>
  &lt;con:entry key="Content-Type" value="application/xml"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.ube}/ws/secure/activatekey/${customer.new.id}/${kiosk.newKey.msnbc}</con:endpoint>
          <con:request>&lt;keyvalidate> 
   &lt;msnemb>msnemb-key1&lt;/msnemb>
&lt;/keyvalidate></con:request>
          <con:assertion type="XPath Match" name="success = true">
            <con:configuration>
              <path>//*:Response/*:success</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="message = &quot;Your Key is activated successfully.&quot;">
            <con:configuration>
              <path>//*:Response/*:successMessage</path>
              <content>Your Key is activated successfully.</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:username>${login.username}</con:username>
            <con:password>${login.username}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="update customer" id="d49c6fe0-b904-4348-8069-139111cccd69">
        <con:settings/>
        <con:config method="PUT" xsi:type="con:HttpRequest" name="update customer" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X-API-KEY" value="${ws.api-key}"/>
  &lt;con:entry key="Accept" value="application/json"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.ube}/ws/secure/subscriber/update</con:endpoint>
          <con:request>{ "address1" : "${customer.address1}",
  "address2" : "${customer.address2}",
  "address3" : "${customer.address3}",
  "alternatePhoneNumberType" : "${customer.alternatePhoneNumberType}",
  "answer" : "${customer.answer}",
  "city" : "${customer.city}",
  "country" : "${customer.country}",
  "customerId" : "${customer.new.id}",
  "dateOfBirth" : "${customer.dateOfBirth}",
  "email" : "${customer.email}",
  "firstName" : "${customer.firstName}",
  "gender" : "${customer.gender}",
  "language" : "${customer.language}",
  "lastName" : "${customer.lastName}",
  "phone1" : "${customer.phone1}",
  "phone2" : "${customer.phone2}",
  "phoneNumberType" : "${customer.phoneNumberType}",
  "securityQuestionId" : "${customer.securityQuestionId}",
  "state" : "${customer.state}",
  "zipcode" : "${customer.zipcode}"
}</con:request>
          <con:assertion type="Simple Contains" name="error code">
            <con:configuration>
              <token>"errorCode":null</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="success">
            <con:configuration>
              <token>"success":true</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="success message">
            <con:configuration>
              <token>"successMessage":"Subscriber updated successfully."</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:username>${login.username}</con:username>
            <con:password>${login.username}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="renewSubscription" id="a14b43f4-3e73-452e-9348-ae2f70b1efe9">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="renewSubscription" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/json"/>
  &lt;con:entry key="X-API-KEY" value="${ws.api-key}"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.ube}/ws/subscriber/renewsubscription</con:endpoint>
          <con:request>{ 
  "planId" : ${customer.planType},
  "customerId" : ${customer.new.id}
}</con:request>
          <con:assertion type="Simple Contains" name="success = true">
            <con:configuration>
              <token>"success":true</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="successMessage =Your plan is successfully renewed.">
            <con:configuration>
              <path>//*:Response/*:successMessage</path>
              <content>Your plan is successfully renewed.</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:username>${login.username}</con:username>
            <con:password>${login.username}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="setAutoRenew" id="def9b204-f520-46e3-85a6-533eebd7493b">
        <con:settings/>
        <con:config method="PUT" xsi:type="con:HttpRequest" name="setAutoRenew" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X-API-KEY" value="${ws.api-key}"/>
  &lt;con:entry key="Accept" value="application/json"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.ube}/ws/secure/subscriber/${customer.new.id}/plan/autorenew/${customer.autorenew.flag}</con:endpoint>
          <con:request/>
          <con:assertion type="Simple Contains" name="error code">
            <con:configuration>
              <token>"errorCode":null</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="success">
            <con:configuration>
              <token>"success":true</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="successMessage = AutoRenew flag set in Customer product as: ${customer.autorenew.flag}">
            <con:configuration>
              <token>"successMessage":"AutoRenew flag set in Customer product as: ${customer.autorenew.flag}"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:username>${login.username}</con:username>
            <con:password>${login.username}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="get customer by id" id="fe0dfc6a-d2b8-4663-bb3e-2cdea577bbae">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="get customer by id" postQueryString="false" mediaType="application/xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X-API-KEY" value="${ws.api-key}"/>
  &lt;con:entry key="Content-Type" value="application/xml"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.ube}/ws/secure/subscriber/customerId/${customer.new.id}</con:endpoint>
          <con:request>&lt;keyvalidate> 
   &lt;msnemb>msnemb-key1&lt;/msnemb>
&lt;/keyvalidate></con:request>
          <con:assertion type="Simple Contains" name="message = `success`">
            <con:configuration>
              <token>"successMessage":"Success"</token>
              <ignoreCase>true</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Customer ID">
            <con:configuration>
              <token>"customerId":${customer.new.id}</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="no error code">
            <con:configuration>
              <token>"errorCode":null</token>
              <ignoreCase>true</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:username>${login.username}</con:username>
            <con:password>${login.username}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="registerDependent" id="b9921d0e-f77c-4395-b269-7927e3df568f">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="registerDependent" postQueryString="false" mediaType="application/json" downloadIncludedResources="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X-API-KEY" value="${ws.api-key}"/>
  &lt;con:entry key="Content-Type" value="${content.json}"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.ube}/ws/secure/dependent/subscription</con:endpoint>
          <con:request>{
	"customerId" : "${customer.new.id}",
	"firstName" : "${dependent.firstName}",
	"lastName" : "${dependent.lastName}",
	"gender" : "${dependent.gender}",
	"dateOfBirth" : "${dependent.dateOfBirth}",
	"username" : "${dependent.username}",
	"password" : "${dependent.password}",
	"enabled" : "${dependent.enabled}",
	"usertype" : "${dependent.usertype}",
	"address1" : "${customer.address1}",
	"address2" : "${customer.address2}",
	"address3" : "${customer.address3}",
	"city" : "${customer.city}",
	"state" : "${customer.state}",
	"country" : "${customer.country}",
	"primarySubscriberId" : "${dependent.primarySubscriberId}",
	"language" : "${customer.language}",
	"phone1" : "${customer.phone1}",
	"phone2" : "${customer.phone2}",
	"email" : "${dependent.email}",
	"zipcode" : "${customer.zipcode}",
	"planType" : "${customer.planType}",
	"redemptionNo" : "${customer.redemptionNo_1}",
	"alternatePhoneNumberType" : "${customer.alternatePhoneNumberType}",
	"phoneNumberType" : "${customer.phoneNumberType}",
	"securityQuestionId" : "${customer.securityQuestionId}",
	"answer" : "${customer.answer}",
	"UAID" : ""
}</con:request>
          <con:assertion type="XPath Match" name="success = true">
            <con:configuration>
              <path>//*:Response/*:success/text()</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="at least one dependent is returned">
            <con:configuration>
              <path>count(//*:Response/*:responseObject/*:dependent)>0</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="valid username returned">
            <con:configuration>
              <path>//*:Response/*:responseObject/*:dependent/*:username/text()</path>
              <content>${dependent.username}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="successMessage = Co-subscriber registered successfully.">
            <con:configuration>
              <path>//*:Response/*:successMessage/text()</path>
              <content>Co-subscriber registered successfully.</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:username>${login.username}</con:username>
            <con:password>${login.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      <con:testStep type="transfer" name="transfer dependent.id">
        <con:settings/>
        <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" useXQuery="false" transferChildNodes="false" entitize="false" transferToAll="false">
            <con:name>customerId</con:name>
            <con:sourceType>ResponseAsXml</con:sourceType>
            <con:sourceStep>registerDependent</con:sourceStep>
            <con:sourcePath>//*:Response/*:responseObject/*:dependent/*:customerId</con:sourcePath>
            <con:targetType>dependent.subscriber.id</con:targetType>
            <con:targetStep>properties</con:targetStep>
            <con:targetPath/>
          </con:transfers>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="getAllDependentsBySubscriber" id="6814eac2-ca07-4638-b848-4c741ace52c1">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="getAllDependentsBySubscriber" postQueryString="false" mediaType="application/xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X-API-KEY" value="${ws.api-key}"/>
  &lt;con:entry key="Content-Type" value="application/xml"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.ube}/ws/secure/dependent/customerId/${customer.new.id}</con:endpoint>
          <con:request>&lt;keyvalidate> 
   &lt;msnemb>msnemb-key1&lt;/msnemb>
&lt;/keyvalidate></con:request>
          <con:assertion type="XPath Match" name="success = true" disabled="true">
            <con:configuration>
              <path>//*:Response/*:success</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="error code = null">
            <con:configuration>
              <path>//*:Response/*:errorCode/@null</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="at least one dependent is returned">
            <con:configuration>
              <path>count(//*:Response/*:responseObject/*:dependentList/*:e)>0</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="valid dependent id returned">
            <con:configuration>
              <path>//*:Response/*:responseObject/*:dependentList/*:e/*:customerId</path>
              <content>${dependent.subscriber.id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:username>${login.username}</con:username>
            <con:password>${login.username}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="getCustomerSubscriptionDetail">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="getCustomerSubscriptionDetail" postQueryString="false" mediaType="application/xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Content-Type" value="application/xml"/>
  &lt;con:entry key="X-API-KEY" value="${ws.api-key}"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.ube}/ws/customer/${customer.new.id}/getCustomerSubscriptionDetail</con:endpoint>
          <con:request>&lt;keyvalidate> 
   &lt;msnemb>msnemb-key1&lt;/msnemb>
&lt;/keyvalidate></con:request>
          <con:assertion type="Simple Contains" name="message = `success`">
            <con:configuration>
              <token>"success":true</token>
              <ignoreCase>true</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="valid customerId is returned">
            <con:configuration>
              <path>//*:Response/*:responseObject/*:SubscriptionDetail/*:customerId</path>
              <content>${customer.new.id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="no error code">
            <con:configuration>
              <path>//*:Response/*:errorCode/@null</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Match content of [successMessage]">
            <con:configuration>
              <path>//*:Response/*:successMessage</path>
              <content>Success</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:username>${login.username}</con:username>
            <con:password>${login.username}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="getPlans">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="getPlans" postQueryString="false" mediaType="application/x-www-form-urlencoded" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X-API-KEY" value="${ws.api-key}"/>
  &lt;con:entry key="Content-Type" value="application/xml"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.ube}/ws/plan</con:endpoint>
          <con:request><![CDATA[<rentBike>
	<bikeid>${bike.msn_emb}</bikeid>
	<userid></userid>
	<keyid>${key.msnemb}</keyid>
	<starttime>${bike.startTime}</starttime>
</rentBike>]]></con:request>
          <con:assertion type="Simple Contains" name="errorCode = `null`">
            <con:configuration>
              <token>"errorCode":null</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Plan number 178">
            <con:configuration>
              <token>"id":178</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="errorMessage = `null`">
            <con:configuration>
              <token>"errorMessage":null</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Success = `true`">
            <con:configuration>
              <token>"success":true</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Plan number 179">
            <con:configuration>
              <token>"id":179</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:username>${login.username}</con:username>
            <con:password>${login.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="rent bike (kiosk service)">
        <con:settings/>
        <con:config method="PUT" xsi:type="con:HttpRequest" name="rent bike (kiosk service)" postQueryString="false" mediaType="application/xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host}/kiosk/ws/bike/rentbike</con:endpoint>
          <con:request><![CDATA[<rentBike>
	<bikeid>${kiosk.bike.msn_emb}</bikeid>
	<userid></userid>
	<keyid>${kiosk.newKey.msnemb}</keyid>
	<dockid>${kiosk.dock.msnemb}</dockid>
	<starttime>2013-02-27 14:55:54</starttime>
</rentBike>]]></con:request>
          <con:assertion type="XPath Match" name="statuscode = 1">
            <con:configuration>
              <path>*/statuscode</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="message = &quot;Bike Rented&quot;">
            <con:configuration>
              <path>*/message</path>
              <content>Bike is taken</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:username>${login.username}</con:username>
            <con:password>${login.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="return bike (kiosk service)">
        <con:settings/>
        <con:config method="PUT" xsi:type="con:HttpRequest" name="return bike (kiosk service)" postQueryString="false" mediaType="application/xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host}/kiosk/ws/bike/returnbike</con:endpoint>
          <con:request><![CDATA[<returnBike>
	<bikeid>${kiosk.bike.msn_emb}</bikeid>
	<gpsdata>${kiosk.bike.gpsData}</gpsdata>
	<dockid>${kiosk.dock.msnemb}</dockid>
	<stoptime>${bike.stopTime}</stoptime>
</returnBike>]]></con:request>
          <con:assertion type="XPath Match" name="statuscode = 1">
            <con:configuration>
              <path>*/statuscode</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="message = &quot;Bike Returned&quot;">
            <con:configuration>
              <path>*/message</path>
              <content>Bike Returned</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:username>${login.username}</con:username>
            <con:password>${login.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="set date range">
        <con:settings/>
        <con:config>
          <script>// initialize steps
props = testRunner.testCase.getTestStepByName( "properties" )

sdf = new java.text.SimpleDateFormat("yyyy-MM-dd")
dateUntil = sdf.format(new Date())
props.setPropertyValue("customer.dateUntil", dateUntil)

date = new Date()
date.setMonth(date.getMonth() - 12)
dateSince = sdf.format(date)
props.setPropertyValue("customer.dateSince", dateSince)

log.info(dateUntil)
log.info(dateSince)</script>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="getCustomerBillingStatement (created by sql)">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="getCustomerBillingStatement (created by sql)" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X-API-KEY" value="${ws.api-key}"/>
  &lt;con:entry key="Content-Type" value="application/json"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.ube}/ws/customer/customerBillingStatement</con:endpoint>
          <con:request>{
	"customerId" : "${customer.new.id}",
	"dateSince" : "${customer.datesince}",
	"dateUntil" : "${customer.dateuntil}"
}</con:request>
          <con:assertion type="XPath Match" name="success = true">
            <con:configuration>
              <path>//*:Response/*:success</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="at least one statement returned">
            <con:configuration>
              <path>count(//*:Response/*:responseObject/*:statement)>0</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:username>${login.username}</con:username>
            <con:password>${login.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="getCustomerPaymentHistory">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="getCustomerPaymentHistory" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X-API-KEY" value="${ws.api-key}"/>
  &lt;con:entry key="Content-Type" value="application/json"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.ube}/ws/customer/${customer.new.id}/getCustomerPaymentHistory</con:endpoint>
          <con:request>{
	"customerId" : "${customer.id}",
	"dateSince" : "${customer.datesince}",
	"dateUntil" : "${customer.dateuntil}"
}</con:request>
          <con:assertion type="XPath Match" name="success = true">
            <con:configuration>
              <path>//*:Response/*:success/text()</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="at least one paiment returned">
            <con:configuration>
              <path>count(//*:Response/*:responseObject/*:PaymentHistory/*:paymentList)>0</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="valid card owner returned">
            <con:configuration>
              <path>//*:Response/*:responseObject/*:PaymentHistory/*:paymentList/*:e/*:cardHolder</path>
              <content>${customer.cardOwner}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:username>${login.username}</con:username>
            <con:password>${login.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="getAllTripInfoByDate">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="getAllTripInfoByDate" postQueryString="false" mediaType="application/xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Content-Type" value="${content.json}"/>
  &lt;con:entry key="X-API-KEY" value="${ws.api-key}"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.ube}/ws/secure/getAllTripInfoByDate</con:endpoint>
          <con:request>{
    "stationA": "s1",
    "stationB": "s2",
    "startDate": "2012-03-13",
    "endDate": "2013-03-13",
    "customerId": "${customer.new.id}"
}</con:request>
          <con:assertion type="XPath Match" name="success = true">
            <con:configuration>
              <path>//*:Response/*:success/text()</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="at least one trip is returned">
            <con:configuration>
              <path>count( //*:Response/*:responseObject/*:Trips/*:e)>0</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:username>${login.username}</con:username>
            <con:password>${login.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="getCustomerStatistics">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="getCustomerStatistics" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Content-Type" value="${content.json}"/>
  &lt;con:entry key="X-API-KEY" value="${ws.api-key}"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.ube}/ws/customer/${customer.new.id}/getCustomerStatistics</con:endpoint>
          <con:request>{
	"customerId" : "${customer.id}",
	"dateSince" : "${customer.datesince}",
	"dateUntil" : "${customer.dateuntil}"
}</con:request>
          <con:assertion type="XPath Match" name="error code = null">
            <con:configuration>
              <path>//*:Response/*:success</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="success = true">
            <con:configuration>
              <path>//*:Response/*:success/text()</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="valid customer.new.id is returned">
            <con:configuration>
              <path>//*:Response/*:responseObject/*:CustomerStatistics/*:customerId</path>
              <content>${customer.new.id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:username>${login.username}</con:username>
            <con:password>${login.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="getAllStations">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="getAllStations" postQueryString="false" mediaType="application/xml" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X-API-KEY" value="${ws.api-key}"/>
  &lt;con:entry key="Content-Type" value="${content.json}"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.ube}/ws/stations</con:endpoint>
          <con:request>&lt;keyvalidate> 
   &lt;msnemb>msnemb-key1&lt;/msnemb>
&lt;/keyvalidate></con:request>
          <con:assertion type="XPath Match" name="success = true">
            <con:configuration>
              <path>//*:Response/*:success/text()</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="error code = null">
            <con:configuration>
              <path>//*:Response/*:errorCode/@null</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="At least one station is returned">
            <con:configuration>
              <path>count(//*:Response/*:responseObject/*:StationsList/*:stationBeanList/*:e)>0</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:username>${login.username}</con:username>
            <con:password>${login.username}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="isRedumptionNumberExist">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="isRedumptionNumberExist" postQueryString="false" mediaType="application/xml" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X-API-KEY" value="${ws.api-key}"/>
  &lt;con:entry key="Content-Type" value="${content.json}"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.ube}/ws/secure/isRedumptionNumberExist/1</con:endpoint>
          <con:request>&lt;keyvalidate> 
   &lt;msnemb>msnemb-key1&lt;/msnemb>
&lt;/keyvalidate></con:request>
          <con:assertion type="XPath Match" name="message = &quot;The redumptionNumber is valid.&quot;">
            <con:configuration>
              <path>//*:Response/*:successMessage</path>
              <content>The redumptionNumber is valid.</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="success = true">
            <con:configuration>
              <path>//*:Response/*:success</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:username>${login.username}</con:username>
            <con:password>${login.username}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="addFavoriteStation" id="2d3e00c9-9d01-4d68-8db9-3fefd6a807d9">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="addFavoriteStation" postQueryString="false" mediaType="application/xml" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X-API-KEY" value="${ws.api-key}"/>
  &lt;con:entry key="Content-Type" value="${content.json}"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.ube}/ws/secure/subscriber/${customer.new.id}/addFavoriteStation/${customer.favoriteStation.id}</con:endpoint>
          <con:request/>
          <con:assertion type="XPath Match" name="success = true">
            <con:configuration>
              <path>//*:Response/*:success/text()</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="error code = null">
            <con:configuration>
              <path>//*:Response/*:errorCode/@null</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Valid stationId is returned">
            <con:configuration>
              <path>//*:Response/*:responseObject/*:FavoriteStation/*:stationId/text()</path>
              <content>${customer.favoriteStation.id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:username>${login.username}</con:username>
            <con:password>${login.username}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="fetchFavoriteStation">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="fetchFavoriteStation" postQueryString="false" mediaType="application/xml" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X-API-KEY" value="${ws.api-key}"/>
  &lt;con:entry key="Content-Type" value="${content.json}"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.ube}/ws/secure/subscriber/${customer.new.id}/FavoriteStations</con:endpoint>
          <con:request>&lt;keyvalidate> 
   &lt;msnemb>msnemb-key1&lt;/msnemb>
&lt;/keyvalidate></con:request>
          <con:assertion type="XPath Match" name="success = true">
            <con:configuration>
              <path>//*:Response/*:success/text()</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="error code = null">
            <con:configuration>
              <path>//*:Response/*:success/text()</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="At least one favorite station returned">
            <con:configuration>
              <path>count( //*:Response/*:responseObject/*:FavouriteStations/*:e)>0</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:username>${login.username}</con:username>
            <con:password>${login.username}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      <con:testStep type="transfer" name="transfer favorite station id">
        <con:settings/>
        <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false">
            <con:name>favoriteStationId</con:name>
            <con:sourceType>ResponseAsXml</con:sourceType>
            <con:sourceStep>fetchFavoriteStation</con:sourceStep>
            <con:sourcePath>//*:Response/*:responseObject/*:FavouriteStations/*:e/*:id</con:sourcePath>
            <con:targetType>customer.favoriteStation.id</con:targetType>
            <con:targetStep>properties</con:targetStep>
            <con:targetPath/>
          </con:transfers>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="removeFavoriteStation">
        <con:settings/>
        <con:config method="DELETE" xsi:type="con:HttpRequest" name="removeFavoriteStation" postQueryString="false" mediaType="application/xml" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X-API-KEY" value="${ws.api-key}"/>
  &lt;con:entry key="Content-Type" value="${content.json}"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.ube}/ws/secure/subscriber/removeFavoriteStation/${customer.favoriteStation.id}</con:endpoint>
          <con:request>&lt;keyvalidate> 
   &lt;msnemb>msnemb-key1&lt;/msnemb>
&lt;/keyvalidate></con:request>
          <con:assertion type="XPath Match" name="success = true">
            <con:configuration>
              <path>//*:Response/*:success/text()</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="error code = null">
            <con:configuration>
              <path>//*:Response/*:success/text()</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="success message = &quot;Subscriber's favorite station deleted successfully.&quot;">
            <con:configuration>
              <path>//*:Response/*:successMessage/text()</path>
              <content>Subscriber's favorite station deleted successfully.</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:username>${login.username}</con:username>
            <con:password>${login.username}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="getCurrentTimeStamp" id="1955a95b-3fdc-40f2-8736-e69604ed4a0e">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="getCurrentTimeStamp" postQueryString="false" mediaType="application/xml" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Content-Type" value="${content.json}"/>
  &lt;con:entry key="X-API-KEY" value="${ws.api-key}"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.ube}/ws/getCurrentTimeStamp</con:endpoint>
          <con:request>&lt;keyvalidate> 
   &lt;msnemb>msnemb-key1&lt;/msnemb>
&lt;/keyvalidate></con:request>
          <con:assertion type="XPath Match" name="success = true">
            <con:configuration>
              <path>//*:Response/*:success</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="error code = null">
            <con:configuration>
              <path>//*:Response/*:success/text()</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="DateAndTime object is returned">
            <con:configuration>
              <path>exists( //*:Response/*:responseObject/*:DateAndTime)</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:username>${login.username}</con:username>
            <con:password>${login.username}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="getSecurityQuestionForSubscriber">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="getSecurityQuestionForSubscriber" postQueryString="false" mediaType="application/xml" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X-API-KEY" value="${ws.api-key}"/>
  &lt;con:entry key="Content-Type" value="${content.json}"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.ube}/ws/secure/subscriber/${customer.new.id}/securityQuestion</con:endpoint>
          <con:request>&lt;keyvalidate> 
   &lt;msnemb>msnemb-key1&lt;/msnemb>
&lt;/keyvalidate></con:request>
          <con:assertion type="Simple Contains" name="error code = null">
            <con:configuration>
              <token>"errorCode":null</token>
              <ignoreCase>true</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="success = true">
            <con:configuration>
              <path>//*:Response/*:success</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="successMessage = &quot;What is your favorite sports team?&quot;">
            <con:configuration>
              <path>//*:Response/*:successMessage</path>
              <content>What is your favorite sports team?</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:username>${login.username}</con:username>
            <con:password>${login.username}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="updateCreditCard">
        <con:settings/>
        <con:config method="PUT" xsi:type="con:HttpRequest" name="updateCreditCard" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X-API-KEY" value="${ws.api-key}"/>
  &lt;con:entry key="Accept" value="${content.json}"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.ube}/ws/secure/updateCreditCard</con:endpoint>
          <con:request>{
	"customerId" : "${customer.new.id}",
	"address" : "${customer.cc.ownerAddress_update}",
	"city" : "${customer.ownerCity}",
	"state" : "${customer.ownerState}",
	"country" : "${customer.ownerCountry}",
	"zipCode" : "${customer.cc.ownerZipCode_update}",
	"cardOwner" : "${customer.cardOwner}",
	"cardNumber" : "${customer.cc.cardNumber_update}",
	"cvv" : "${customer.cc.cvv_update}",
	"expirationDate" : "${customer.cc.expirationDate_update}",
	"cardType" : "${customer.cardType}"
}</con:request>
          <con:assertion type="XPath Match" name="error code = null">
            <con:configuration>
              <path>//*:Response/*:success</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="success = true">
            <con:configuration>
              <path>//*:Response/*:success</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="valid customerId returned">
            <con:configuration>
              <path>//*:Response/*:responseObject/*:CreditCard/*:customerId</path>
              <content>${customer.new.id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="successMessage = &quot;Credit card updated successfully.&quot;">
            <con:configuration>
              <path>//*:Response/*:successMessage</path>
              <content>Credit card updated successfully.</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:username>${login.username}</con:username>
            <con:password>${login.username}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="checkAnswerForSecurityQuestion" id="e2cfea7d-3c99-413b-aa0d-5698ae0b77f1">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="checkAnswerForSecurityQuestion" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Content-Type" value="${content.json}"/>
  &lt;con:entry key="X-API-KEY" value="${ws.api-key}"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.ube}/ws/customer/checkAnswerForSecurityQuestion</con:endpoint>
          <con:request>{
	"userName" : "${customer.username}",
	"securityAnswer" : "${customer.answer}"
}</con:request>
          <con:assertion type="XPath Match" name="success = true">
            <con:configuration>
              <path>//*:Response/*:success/text()</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="error code = null">
            <con:configuration>
              <path>//*:Response/*:errorCode/@null</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="success message = &quot;The security answer is correct.&quot;">
            <con:configuration>
              <path>//*:Response/*:successMessage</path>
              <content>The security answer is correct.</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:username>${login.username}</con:username>
            <con:password>${login.username}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="recoverPassword" id="87bea823-e7b6-421c-9cdf-4b9e7083cc1f">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="recoverPassword" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X-API-KEY" value="${ws.api-key}"/>
  &lt;con:entry key="Content-Type" value="${content.json}"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.ube}/ws/recoverPassword</con:endpoint>
          <con:request>{
	"userName" : "${customer.username}",
	"answer" : "${customer.answer}"
}</con:request>
          <con:assertion type="XPath Match" name="success = true">
            <con:configuration>
              <path>//*:Response/*:success/text()</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="error code = null">
            <con:configuration>
              <path>//*:Response/*:errorCode/@null</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:username>${login.username}</con:username>
            <con:password>${login.username}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="changePassword">
        <con:settings/>
        <con:config method="PUT" xsi:type="con:HttpRequest" name="changePassword" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Content-Type" value="${content.json}"/>
  &lt;con:entry key="X-API-KEY" value="${ws.api-key}"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.ube}/ws/secure/subscriber/changePassword</con:endpoint>
          <con:request>{
	"username" : "${customer.username}",
	"newPassword" : "${customer.newPassword}",
	"oldPassword" : "${customer.password}"
}</con:request>
          <con:assertion type="XPath Match" name="success = true">
            <con:configuration>
              <path>//*:Response/*:success/text()</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="error code = null">
            <con:configuration>
              <path>//*:Response/*:errorCode/@null</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="success message = &quot;Password changed successfully.&quot;">
            <con:configuration>
              <path>//*:Response/*:successMessage</path>
              <content>Password changed successfully.</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:username>${login.username}</con:username>
            <con:password>${login.username}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="reportKeyAsStolenOrLost" id="170150ed-221a-4cec-b06b-db10fc17379f">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="reportKeyAsStolenOrLost" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X-API-KEY" value="${ws.api-key}"/>
  &lt;con:entry key="Content-Type" value="${content.json}"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.ube}/ws/customer/reportLostOrStolenKey</con:endpoint>
          <con:request>{
	"keyMsnbc" : "${kiosk.key.msnbc}",
	"keyLocationStatus" : "${customer.key.locationStatus}"
}</con:request>
          <con:assertion type="XPath Match" name="success = true">
            <con:configuration>
              <path>//*:Response/*:success/text()</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="error code = null">
            <con:configuration>
              <path>//*:Response/*:errorCode/@null</path>
              <content>true</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="success message = &quot;Your key is Disabled and marked as Lost&quot;">
            <con:configuration>
              <path>//*:Response/*:successMessage</path>
              <content>Your key is Disabled and marked as Lost.</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:username>${login.username}</con:username>
            <con:password>${login.username}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      <con:testStep type="httprequest" name="requestNewKey" id="f12c84a1-321c-401f-8201-5564b94c262a">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="requestNewKey" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/json"/>
  &lt;con:entry key="X-API-KEY" value="${ws.api-key}"/>
&lt;/xml-fragment></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.ube}/ws/subscriber/requestNewKey</con:endpoint>
          <con:request>{
	"keyMsnbc" : "${brokenKey.msnbc}",
	"customerId" : "${brokenKey.customer.id}",
	"reason" : "reason",
	"description" : "description"
}</con:request>
          <con:assertion type="Simple Contains" name="error code">
            <con:configuration>
              <token>"errorCode":null</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="success">
            <con:configuration>
              <token>"success":true</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="successMessage = &quot;The Request for new key is successful.&quot;">
            <con:configuration>
              <token>"successMessage":"The Request for new key is successful."</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:username>${login.username}</con:username>
            <con:password>${login.username}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>16cf45a0-c1af-4c33-8819-0a4ea8276756</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>1342966e-515f-4ec0-9a4c-9d7c51c48542</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>1fb764e4-1840-4cf8-af80-00f7f2c2ece6</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3b800581-6387-44ff-b35b-945408787b7c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>edfd8dac-0104-4730-8cc6-0428d656d0ad</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>6a97c497-6e1b-4cef-b11d-07bf8213303c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f90e9cac-ab42-46ea-98df-be81bfe12c6a</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>0d0d0e4d-ae89-44ba-8a1f-a351325fb2ac</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>bedd8f47-673d-4807-bee9-e4d1a882e5e9</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>335a9d86-8bef-4093-94b6-f118d2b94d26</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>556f6add-c2e1-4dee-9070-16f75349d68b</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>431d3b6f-b60a-4235-86cb-d845668534c1</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>7820ef20-eae5-41a4-8608-a4b304a3f780</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>d49c6fe0-b904-4348-8069-139111cccd69</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>6814eac2-ca07-4638-b848-4c741ace52c1</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>cee6c82f-aa39-45f1-a268-fee05e9699fb</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>da99bd1f-e371-43ca-9721-8d6aa296bee2</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>fe0dfc6a-d2b8-4663-bb3e-2cdea577bbae</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>a14b43f4-3e73-452e-9348-ae2f70b1efe9</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>def9b204-f520-46e3-85a6-533eebd7493b</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f12c84a1-321c-401f-8201-5564b94c262a</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>245074bb-9f96-4033-866e-30ad63327758</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>2d3e00c9-9d01-4d68-8db9-3fefd6a807d9</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>1955a95b-3fdc-40f2-8736-e69604ed4a0e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>87bea823-e7b6-421c-9cdf-4b9e7083cc1f</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>b9921d0e-f77c-4395-b269-7927e3df568f</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>170150ed-221a-4cec-b06b-db10fc17379f</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>120b21ae-9485-48e3-8333-fdb31f2e97c3</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>e2cfea7d-3c99-413b-aa0d-5698ae0b77f1</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>88def4de-1711-4be9-9571-6a09d52bc5f3</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:properties/>
    <con:reportParameters/>
  </con:testSuite>
  <con:requirements/>
  <con:properties/>
  <con:wssContainer/>
  <con:databaseConnectionContainer>
    <con:databaseConnection>
      <con:name>assignKey</con:name>
      <con:driver>com.mysql.jdbc.Driver</con:driver>
      <con:connectionString>jdbc:mysql://ec2-107-21-140-55.compute-1.amazonaws.com:3306/naesta_cleanup?user=sbedb&amp;password=PASS_VALUE</con:connectionString>
      <con:password>admin@CONTROLGROUP</con:password>
    </con:databaseConnection>
  </con:databaseConnectionContainer>
  <con:reporting>
    <con:xmlTemplates/>
    <con:parameters/>
  </con:reporting>
  <con:sensitiveInformation/>
</con:soapui-project>