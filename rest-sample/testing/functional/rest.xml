<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project activeEnvironment="Default" name="rest-sample" resourceRoot="" soapui-version="4.5.2" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config">
  <con:settings/>
  
  <con:testSuite name="User">
    <con:settings>
      <con:setting id="IncludeOverview">true</con:setting>
      <con:setting id="IncludeResults">true</con:setting>
      <con:setting id="FlowLayout">false</con:setting>
      <con:setting id="ErrorDetails">true</con:setting>
      <con:setting id="IncludeCoverage">true</con:setting>
      <con:setting id="GeneratableJUnitReport@Style">Multiple Pages</con:setting>
      <con:setting id="GeneratableJUnitReport@Folder"/>
    </con:settings>
    <con:runType>SEQUENTIAL</con:runType>
    
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="true" maxResults="0" name="User CRUD" searchProperties="true" id="a48a9542-d4da-4aca-9694-19770cc1553b">
      <con:settings/>
      
      
      
      
      <con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>newUser.key</con:name><con:value>6</con:value></con:property><con:property><con:name>newUser.userName</con:name><con:value>username</con:value></con:property><con:property><con:name>newUser.password</con:name><con:value>userpass</con:value></con:property><con:property><con:name>app.username</con:name><con:value>adminuser</con:value></con:property><con:property><con:name>app.password</con:name><con:value>adminpass</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="create user">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create user" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/user</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "firstName":"fname",
   "lastName":"lname",
   "userName":"${newUser.userName}",
   "password":"${newUser.password}",
   "email":"new-test@email.com",
   "isEnabled":"true",
   "canLogin":"true",
   "isAdmin":"true"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid firstName returned"><con:configuration><path>//*:Response/*:firstName</path><content>fname</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid userName returned"><con:configuration><path>//*:Response/*:userName</path><content>username</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      <con:testStep type="transfer" name="transfer key"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>primaryKey</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>create user</con:sourceStep><con:sourcePath>//*:Response/*:primaryKey</con:sourcePath><con:targetType>newUser.key</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="validate 1">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="validate 1" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/user/${newUser.key}</con:endpoint>
          <con:request/>
          
          
          <con:assertion type="XPath Match" name="valid first name returned"><con:configuration><path>//*:Response/*:firstName</path><content>fname</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid userName returned"><con:configuration><path>//*:Response/*:userName</path><content>username</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid primaryKey returned"><con:configuration><path>//*:Response/*:primaryKey</path><content>${newUser.key}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="load by username">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="load by username" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/user/usr/${newUser.userName}</con:endpoint>
          <con:request/>
          
          
          <con:assertion type="XPath Match" name="valid first name returned"><con:configuration><path>//*:Response/*:firstName</path><content>fname</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid userName returned"><con:configuration><path>//*:Response/*:userName</path><content>username</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid primaryKey returned"><con:configuration><path>//*:Response/*:primaryKey</path><content>${newUser.key}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="update user">
        <con:settings/>
        <con:config method="PUT" xsi:type="con:HttpRequest" name="update user" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/user/${newUser.key}</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "firstName":"updated-fname",
   "lastName":"updated-lname",
   "userName":"updated-username",
   "email":"updated-test@email.com",
   "canLogin":"false",
   "isEnabled":"true",
   "isAdmin":"false"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid firstName returned"><con:configuration><path>//*:Response/*:firstName</path><content>updated-fname</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid userName returned"><con:configuration><path>//*:Response/*:userName</path><content>updated-username</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid primaryKey returned"><con:configuration><path>//*:Response/*:primaryKey</path><content>${newUser.key}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="validate 2">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="validate 2" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/user/${newUser.key}</con:endpoint>
          <con:request/>
          
          
          <con:assertion type="XPath Match" name="valid first name returned"><con:configuration><path>//*:Response/*:firstName</path><content>updated-fname</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid userName returned"><con:configuration><path>//*:Response/*:userName</path><content>updated-username</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid primaryKey returned"><con:configuration><path>//*:Response/*:primaryKey</path><content>${newUser.key}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="delete user">
        <con:settings/>
        <con:config method="DELETE" xsi:type="con:HttpRequest" name="delete user" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/user/${newUser.key}</con:endpoint>
          <con:request>{
   "id":"",
   "name":"updated contact",
   "address":"updated address",
   "gender":"F",
   "dob":"2001-04-16",
   "email":"updated-test@email.com",
   "mobile":"5145145111",
   "phone":"5145145121"
}</con:request>
          
          
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Code returned"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="validate 3">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="validate 3" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/contacts/${newUser.key}</con:endpoint>
          <con:request/>
          
          
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Code"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>16cf45a0-c1af-4c33-8819-0a4ea8276756</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>1342966e-515f-4ec0-9a4c-9d7c51c48542</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>1fb764e4-1840-4cf8-af80-00f7f2c2ece6</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3b800581-6387-44ff-b35b-945408787b7c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>edfd8dac-0104-4730-8cc6-0428d656d0ad</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>6a97c497-6e1b-4cef-b11d-07bf8213303c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f90e9cac-ab42-46ea-98df-be81bfe12c6a</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>0d0d0e4d-ae89-44ba-8a1f-a351325fb2ac</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>335a9d86-8bef-4093-94b6-f118d2b94d26</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>8cc6b576-1299-4a62-a3cb-02dba18d783c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3d446bb9-7f2d-437d-ba9d-538c8544ebca</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>887ed9bf-ef65-4cd6-8d63-fe63059b6114</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5e49a61f-6c85-495d-9b4a-4cb38df93a4c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>ff9f7042-ba4f-437e-a043-8021225671b8</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>d76aa335-29eb-4aa2-91cd-16d24dbca2ba</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>679e8216-4253-4db8-8c5d-14aaa0c542fd</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>71a6c31e-5f1d-4b27-b2a7-44b62806bf64</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5a75c453-48bd-46bc-b1f3-1987ee84ae9b</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5acde369-b009-4471-a36a-146d0396a252</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>fd95a9ee-7a42-47ac-acef-a96cb56e687c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3b97c817-b31a-4a3f-b8ff-409f243cff67</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>e2cdbfdb-8bb7-4def-9ab4-51a9f9aa9b35</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>a461e16f-8295-44f1-8150-5ac5d8413f25</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>8c722f3e-448b-48cb-9417-916e6c71f2a4</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>b5ffe9da-6232-45b2-8878-ff6d59663ebd</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f9f33afa-18df-4001-b902-af22172b09c9</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f41cff6a-ef96-412a-88b1-035cd578ec10</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>bf010173-19fa-4baf-b5f4-0aa02758a4ca</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>c9f13830-2d42-4ea7-afff-1a1c3960b124</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    <con:breakPoints><con:testStepId>18313ee5-9be5-461b-bbef-4ac16dc18a16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>629d7ffd-2eeb-46e3-bb04-778428631c99</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c1469165-8392-4ede-ae0c-08bc0ba0118c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="true" maxResults="0" name="User getAll" searchProperties="true" id="14958e80-5cd9-414c-a3a1-34f2eca32158">
      <con:settings/>
      
      
      
      
      <con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user1.key</con:name><con:value>7</con:value></con:property><con:property><con:name>user2.key</con:name><con:value>8</con:value></con:property><con:property><con:name>app.username</con:name><con:value>adminuser</con:value></con:property><con:property><con:name>app.password</con:name><con:value>adminpass</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="create user 1">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create user 1" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/user</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "firstName":"fname",
   "lastName":"lname",
   "userName":"user1",
   "password":"pass1",
   "email":"user1@email.com",
   "isEnabled":"true",
   "canLogin":"true",
   "isAdmin":"true"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid firstName returned"><con:configuration><path>//*:Response/*:firstName</path><content>fname</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid userName returned"><con:configuration><path>//*:Response/*:userName</path><content>user1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      <con:testStep type="httprequest" name="create user 2">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create user 2" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/user</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "firstName":"fname",
   "lastName":"lname",
   "userName":"user2",
   "password":"pass2",
   "email":"user2@email.com",
   "isEnabled":"true",
   "canLogin":"true",
   "isAdmin":"true"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid firstName returned"><con:configuration><path>//*:Response/*:firstName</path><content>fname</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid userName returned"><con:configuration><path>//*:Response/*:userName</path><content>user2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="transfer" name="transfer key"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>user1.key</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>create user 1</con:sourceStep><con:sourcePath>//*:Response/*:primaryKey</con:sourcePath><con:targetType>user1.key</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>user2.key</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>create user 2</con:sourceStep><con:sourcePath>//*:Response/*:primaryKey</con:sourcePath><con:targetType>user2.key</con:targetType><con:targetStep>Properties</con:targetStep><con:targetPath xsi:nil="true"/></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="load all">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="load all" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/user/all</con:endpoint>
          <con:request/>
          
          
          <con:assertion type="XPath Match" name="valid number of objects returned"><con:configuration><path>count( //Response/e)</path><content>3</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid usernames returned"><con:configuration><path>//Response/e/userName='adminuser'
and
//Response/e/userName='user1'
and
//Response/e/userName='user2'</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="delete user1">
        <con:settings/>
        <con:config method="DELETE" xsi:type="con:HttpRequest" name="delete user1" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/user/${user1.key}</con:endpoint>
          <con:request>{
   "id":"",
   "name":"updated contact",
   "address":"updated address",
   "gender":"F",
   "dob":"2001-04-16",
   "email":"updated-test@email.com",
   "mobile":"5145145111",
   "phone":"5145145121"
}</con:request>
          
          
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Code returned"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="delete user2">
        <con:settings/>
        <con:config method="DELETE" xsi:type="con:HttpRequest" name="delete user2" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/user/${user2.key}</con:endpoint>
          <con:request>{
   "id":"",
   "name":"updated contact",
   "address":"updated address",
   "gender":"F",
   "dob":"2001-04-16",
   "email":"updated-test@email.com",
   "mobile":"5145145111",
   "phone":"5145145121"
}</con:request>
          
          
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Code returned"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="validate delete">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="validate delete" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/user/all</con:endpoint>
          <con:request/>
          
          
          <con:assertion type="XPath Match" name="valid number of objects returned"><con:configuration><path>count( //Response/e)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid usernames returned"><con:configuration><path>//Response/e/userName='adminuser'</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>16cf45a0-c1af-4c33-8819-0a4ea8276756</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>1342966e-515f-4ec0-9a4c-9d7c51c48542</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>1fb764e4-1840-4cf8-af80-00f7f2c2ece6</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3b800581-6387-44ff-b35b-945408787b7c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>edfd8dac-0104-4730-8cc6-0428d656d0ad</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>6a97c497-6e1b-4cef-b11d-07bf8213303c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f90e9cac-ab42-46ea-98df-be81bfe12c6a</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>0d0d0e4d-ae89-44ba-8a1f-a351325fb2ac</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>335a9d86-8bef-4093-94b6-f118d2b94d26</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>8cc6b576-1299-4a62-a3cb-02dba18d783c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3d446bb9-7f2d-437d-ba9d-538c8544ebca</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>887ed9bf-ef65-4cd6-8d63-fe63059b6114</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5e49a61f-6c85-495d-9b4a-4cb38df93a4c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>ff9f7042-ba4f-437e-a043-8021225671b8</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>d76aa335-29eb-4aa2-91cd-16d24dbca2ba</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>679e8216-4253-4db8-8c5d-14aaa0c542fd</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>71a6c31e-5f1d-4b27-b2a7-44b62806bf64</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5a75c453-48bd-46bc-b1f3-1987ee84ae9b</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5acde369-b009-4471-a36a-146d0396a252</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>fd95a9ee-7a42-47ac-acef-a96cb56e687c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3b97c817-b31a-4a3f-b8ff-409f243cff67</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>e2cdbfdb-8bb7-4def-9ab4-51a9f9aa9b35</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>a461e16f-8295-44f1-8150-5ac5d8413f25</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>8c722f3e-448b-48cb-9417-916e6c71f2a4</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>b5ffe9da-6232-45b2-8878-ff6d59663ebd</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f9f33afa-18df-4001-b902-af22172b09c9</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f41cff6a-ef96-412a-88b1-035cd578ec10</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>bf010173-19fa-4baf-b5f4-0aa02758a4ca</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>c9f13830-2d42-4ea7-afff-1a1c3960b124</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    <con:breakPoints><con:testStepId>18313ee5-9be5-461b-bbef-4ac16dc18a16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>629d7ffd-2eeb-46e3-bb04-778428631c99</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c1469165-8392-4ede-ae0c-08bc0ba0118c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/>
    <con:reportParameters/>
  </con:testSuite><con:testSuite name="Device">
    <con:settings>
      <con:setting id="IncludeOverview">true</con:setting>
      <con:setting id="IncludeResults">true</con:setting>
      <con:setting id="FlowLayout">false</con:setting>
      <con:setting id="ErrorDetails">true</con:setting>
      <con:setting id="IncludeCoverage">true</con:setting>
      <con:setting id="GeneratableJUnitReport@Style">Multiple Pages</con:setting>
      <con:setting id="GeneratableJUnitReport@Folder"/>
    </con:settings>
    <con:runType>SEQUENTIAL</con:runType>
    
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="true" maxResults="0" name="TYPE_F device CRUD (atomic)" searchProperties="true" id="a6f26a91-a723-4d6b-be2a-abc0204f1bc9">
      <con:settings/>
      
      
      
      
      <con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>app.username</con:name><con:value>adminuser</con:value></con:property><con:property><con:name>app.password</con:name><con:value>adminpass</con:value></con:property><con:property><con:name>---------------------------------------create</con:name><con:value/></con:property><con:property><con:name>device.key</con:name><con:value>31</con:value></con:property><con:property><con:name>device.ip</con:name><con:value>192.168.1.7</con:value></con:property><con:property><con:name>device.mac</con:name><con:value>ab:cd:ef:20:34:56</con:value></con:property><con:property><con:name>device.name</con:name><con:value>test-device-json</con:value></con:property><con:property><con:name>device.type</con:name><con:value>TYPE_F</con:value></con:property><con:property><con:name>---------------------------------------update</con:name><con:value/></con:property><con:property><con:name>device-update.ip</con:name><con:value>10.10.10.10</con:value></con:property><con:property><con:name>device-update.mac</con:name><con:value>aa:bb:cc:dd:ee:11</con:value></con:property><con:property><con:name>device-update.name</con:name><con:value>updated-device</con:value></con:property><con:property><con:name>device-update.type</con:name><con:value>TYPE_F</con:value></con:property><con:property><con:name>----------------------------------------defaultParameters</con:name><con:value/></con:property><con:property><con:name>latchActive</con:name><con:value>false</con:value></con:property><con:property><con:name>bPressLapse</con:name><con:value>null</con:value></con:property><con:property><con:name>flickWarn</con:name><con:value>false</con:value></con:property><con:property><con:name>flickReps</con:name><con:value>null</con:value></con:property><con:property><con:name>offDelay</con:name><con:value>null</con:value></con:property><con:property><con:name>motionMuteDelay</con:name><con:value>null</con:value></con:property><con:property><con:name>dim</con:name><con:value>null</con:value></con:property><con:property><con:name>dimMin</con:name><con:value>null</con:value></con:property><con:property><con:name>dimMode</con:name><con:value>OFF</con:value></con:property><con:property><con:name>input</con:name><con:value>null</con:value></con:property><con:property><con:name>switchStatus</con:name><con:value>OFF</con:value></con:property><con:property><con:name>networkOn</con:name><con:value>false</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="create device">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create device" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"${device.ip}",
   "devMac":"${device.mac}",
   "devType":"${device.type}",
   "devName":"${device.name}",
   "devLocation":"null",
   "firmwareVersion":"null",
   "devDescription":"this is a test device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid device IP returned"><con:configuration><path>//*:Response/*:devIp</path><content>${device.ip}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device MAC returned"><con:configuration><path>//*:Response/*:devMac</path><content>${device.mac}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device name returned"><con:configuration><path>//*:Response/*:devName</path><content>${device.name}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device type returned"><con:configuration><path>//*:Response/*:devType</path><content>${device.type}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;dim&quot; value returned"><con:configuration><path>//*:Response/*:dim/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;dimMin&quot; value returned"><con:configuration><path>//*:Response/*:dimMin/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;dimMode&quot; value returned"><con:configuration><path>//*:Response/*:dimMode</path><content>OFF</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;bPressLapse&quot; value returned"><con:configuration><path>//*:Response/*:bPressLapse/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;flickReps&quot; value returned"><con:configuration><path>//*:Response/*:flickReps/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;flickWarn&quot; value returned"><con:configuration><path>//*:Response/*:flickWarn/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;input&quot; value returned"><con:configuration><path>//*:Response/*:input/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;latchActive&quot; value returned"><con:configuration><path>//*:Response/*:latchActive/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;motionMuteDelay&quot; value returned"><con:configuration><path>//*:Response/*:motionMuteDelay/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;networkOn&quot; value returned"><con:configuration><path>//*:Response/*:networkOn/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;offDelay&quot; value returned"><con:configuration><path>//*:Response/*:offDelay/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;switchStatus&quot; value returned"><con:configuration><path>//*:Response/*:switchStatus</path><content>OFF</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      <con:testStep type="transfer" name="transfer key"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>primaryKey</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>create device</con:sourceStep><con:sourcePath>//*:Response/*:primaryKey</con:sourcePath><con:targetType>device.key</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="validate create">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="validate create" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/${device.key}</con:endpoint>
          <con:request/>
          
          
          <con:assertion type="XPath Match" name="valid primary key returned"><con:configuration><path>//*:Response/*:primaryKey</path><content>${device.key}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid IP returned"><con:configuration><path>//*:Response/*:devIp</path><content>${device.ip}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid MAC returned"><con:configuration><path>//*:Response/*:devMac</path><content>${device.mac}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device name returned"><con:configuration><path>//*:Response/*:devName</path><content>${device.name}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device type returned"><con:configuration><path>//*:Response/*:devType</path><content>${device.type}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;dim&quot; value returned"><con:configuration><path>//*:Response/*:dim/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;dimMin&quot; value returned"><con:configuration><path>//*:Response/*:dimMin/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;dimMode&quot; value returned"><con:configuration><path>//*:Response/*:dimMode</path><content>OFF</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;bPressLapse&quot; value returned"><con:configuration><path>//*:Response/*:bPressLapse/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;flickReps&quot; value returned"><con:configuration><path>//*:Response/*:flickReps/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;flickWarn&quot; value returned"><con:configuration><path>//*:Response/*:flickWarn/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;input&quot; value returned"><con:configuration><path>//*:Response/*:input/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;latchActive&quot; value returned"><con:configuration><path>//*:Response/*:latchActive/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;motionMuteDelay&quot; value returned"><con:configuration><path>//*:Response/*:motionMuteDelay/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;networkOn&quot; value returned"><con:configuration><path>//*:Response/*:networkOn/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;offDelay&quot; value returned"><con:configuration><path>//*:Response/*:offDelay/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;switchStatus&quot; value returned"><con:configuration><path>//*:Response/*:switchStatus</path><content>OFF</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="update device">
        <con:settings/>
        <con:config method="PUT" xsi:type="con:HttpRequest" name="update device" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/${device.key}</con:endpoint>
          <con:request>{
   "primaryKey":"${device.key}",
   "devIp":"${device-update.ip}",
   "devMac":"${device-update.mac}",
   "devType":"${device.type}",
   "devName":"${device-update.name}",
   "devLocation":"1st floor",
   "firmwareVersion":"1.0",
   "devDescription":"this is an updated test device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid device ip returned"><con:configuration><path>//*:Response/*:devIp</path><content>${device-update.ip}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device mac returned"><con:configuration><path>//*:Response/*:devMac</path><content>${device-update.mac}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device name returned"><con:configuration><path>//*:Response/*:devName</path><content>${device-update.name}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device type returned"><con:configuration><path>//*:Response/*:devType</path><content>${device.type}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device description returned"><con:configuration><path>//*:Response/*:devDescription</path><content>this is an updated test device</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="validate update">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="validate update" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/${device.key}</con:endpoint>
          <con:request/>
          
          
          <con:assertion type="XPath Match" name="valid primary key returned"><con:configuration><path>//*:Response/*:primaryKey</path><content>${device.key}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid IP returned"><con:configuration><path>//*:Response/*:devIp</path><content>${device-update.ip}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid MAC returned"><con:configuration><path>//*:Response/*:devMac</path><content>${device-update.mac}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device name returned"><con:configuration><path>//*:Response/*:devName</path><content>${device-update.name}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device type returned"><con:configuration><path>//*:Response/*:devType</path><content>${device.type}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;dim&quot; value returned"><con:configuration><path>//*:Response/*:dim/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;dimMin&quot; value returned"><con:configuration><path>//*:Response/*:dimMin/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;dimMode&quot; value returned"><con:configuration><path>//*:Response/*:dimMode</path><content>OFF</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;bPressLapse&quot; value returned"><con:configuration><path>//*:Response/*:bPressLapse/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;flickReps&quot; value returned"><con:configuration><path>//*:Response/*:flickReps/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;flickWarn&quot; value returned"><con:configuration><path>//*:Response/*:flickWarn/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;input&quot; value returned"><con:configuration><path>//*:Response/*:input/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;latchActive&quot; value returned"><con:configuration><path>//*:Response/*:latchActive/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;motionMuteDelay&quot; value returned"><con:configuration><path>//*:Response/*:motionMuteDelay/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;networkOn&quot; value returned"><con:configuration><path>//*:Response/*:networkOn/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;offDelay&quot; value returned"><con:configuration><path>//*:Response/*:offDelay/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;switchStatus&quot; value returned"><con:configuration><path>//*:Response/*:switchStatus</path><content>OFF</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="delete device">
        <con:settings/>
        <con:config method="DELETE" xsi:type="con:HttpRequest" name="delete device" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/${device.key}</con:endpoint>
          <con:request>{
   "id":"",
   "name":"updated contact",
   "address":"updated address",
   "gender":"F",
   "dob":"2001-04-16",
   "email":"updated-test@email.com",
   "mobile":"5145145111",
   "phone":"5145145121"
}</con:request>
          
          
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Code returned"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="validate delete">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="validate delete" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/${device.key}</con:endpoint>
          <con:request/>
          
          
          <con:assertion type="XPath Match" name="valid error message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>Device with primarykey '${device.key}' not found</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="properties" name="Properties (bkp)" disabled="true"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>app.username</con:name><con:value>adminuser</con:value></con:property><con:property><con:name>app.password</con:name><con:value>adminpass</con:value></con:property><con:property><con:name>---------------------------------------device</con:name><con:value/></con:property><con:property><con:name>device.key</con:name><con:value>7</con:value></con:property><con:property><con:name>device.ip</con:name><con:value>192.168.1.7</con:value></con:property><con:property><con:name>device.mac</con:name><con:value>ab:cd:ef:20:34:56</con:value></con:property><con:property><con:name>device.name</con:name><con:value>test-device-json</con:value></con:property><con:property><con:name>device.type</con:name><con:value>TYPE_F</con:value></con:property><con:property><con:name>---------------------------------------default parameters</con:name><con:value/></con:property><con:property><con:name>latchActive</con:name><con:value>false</con:value></con:property><con:property><con:name>bPressLapse</con:name><con:value>null</con:value></con:property><con:property><con:name>flickWarn</con:name><con:value>false</con:value></con:property><con:property><con:name>flickReps</con:name><con:value>null</con:value></con:property><con:property><con:name>offDelay</con:name><con:value>null</con:value></con:property><con:property><con:name>motionMuteDelay</con:name><con:value>null</con:value></con:property><con:property><con:name>dim</con:name><con:value>null</con:value></con:property><con:property><con:name>dimMin</con:name><con:value>null</con:value></con:property><con:property><con:name>dimMode</con:name><con:value>OFF</con:value></con:property><con:property><con:name>input</con:name><con:value>null</con:value></con:property><con:property><con:name>switchStatus</con:name><con:value>OFF</con:value></con:property><con:property><con:name>networkOn</con:name><con:value>false</con:value></con:property><con:property><con:name>----------------------------------------updated device</con:name><con:value/></con:property><con:property><con:name>device-update.ip</con:name><con:value/></con:property><con:property><con:name>device-update.mac</con:name><con:value/></con:property><con:property><con:name>device-update.name</con:name><con:value/></con:property><con:property><con:name>device-update.type</con:name><con:value/></con:property><con:property><con:name>---------------------------------------updated parameters</con:name><con:value/></con:property><con:property><con:name>latchActive-upd</con:name><con:value>true</con:value></con:property><con:property><con:name>bPressLapse-upd</con:name><con:value>200</con:value></con:property><con:property><con:name>flickWarn-upd</con:name><con:value>true</con:value></con:property><con:property><con:name>flickReps-upd</con:name><con:value>50</con:value></con:property><con:property><con:name>offDelay-upd</con:name><con:value>360</con:value></con:property><con:property><con:name>motionMuteDelay-upd</con:name><con:value>500</con:value></con:property><con:property><con:name>dim-upd</con:name><con:value>300</con:value></con:property><con:property><con:name>dimMin-upd</con:name><con:value>50</con:value></con:property><con:property><con:name>dimMode-upd</con:name><con:value>ON</con:value></con:property><con:property><con:name>input-upd</con:name><con:value>100</con:value></con:property><con:property><con:name>switchStatus-upd</con:name><con:value>AUTO</con:value></con:property><con:property><con:name>networkOn-upd</con:name><con:value>true</con:value></con:property></con:properties></con:config></con:testStep><con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>16cf45a0-c1af-4c33-8819-0a4ea8276756</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>1342966e-515f-4ec0-9a4c-9d7c51c48542</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>1fb764e4-1840-4cf8-af80-00f7f2c2ece6</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3b800581-6387-44ff-b35b-945408787b7c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>edfd8dac-0104-4730-8cc6-0428d656d0ad</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>6a97c497-6e1b-4cef-b11d-07bf8213303c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f90e9cac-ab42-46ea-98df-be81bfe12c6a</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>0d0d0e4d-ae89-44ba-8a1f-a351325fb2ac</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>335a9d86-8bef-4093-94b6-f118d2b94d26</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>8cc6b576-1299-4a62-a3cb-02dba18d783c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3d446bb9-7f2d-437d-ba9d-538c8544ebca</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>887ed9bf-ef65-4cd6-8d63-fe63059b6114</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5e49a61f-6c85-495d-9b4a-4cb38df93a4c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>ff9f7042-ba4f-437e-a043-8021225671b8</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>d76aa335-29eb-4aa2-91cd-16d24dbca2ba</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>679e8216-4253-4db8-8c5d-14aaa0c542fd</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>71a6c31e-5f1d-4b27-b2a7-44b62806bf64</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5a75c453-48bd-46bc-b1f3-1987ee84ae9b</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5acde369-b009-4471-a36a-146d0396a252</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>fd95a9ee-7a42-47ac-acef-a96cb56e687c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3b97c817-b31a-4a3f-b8ff-409f243cff67</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>e2cdbfdb-8bb7-4def-9ab4-51a9f9aa9b35</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>a461e16f-8295-44f1-8150-5ac5d8413f25</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>8c722f3e-448b-48cb-9417-916e6c71f2a4</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>b5ffe9da-6232-45b2-8878-ff6d59663ebd</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f9f33afa-18df-4001-b902-af22172b09c9</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f41cff6a-ef96-412a-88b1-035cd578ec10</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>bf010173-19fa-4baf-b5f4-0aa02758a4ca</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>c9f13830-2d42-4ea7-afff-1a1c3960b124</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    <con:breakPoints><con:testStepId>18313ee5-9be5-461b-bbef-4ac16dc18a16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>629d7ffd-2eeb-46e3-bb04-778428631c99</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c1469165-8392-4ede-ae0c-08bc0ba0118c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ad757a15-193d-485b-b74a-1df88eea7360</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="true" maxResults="0" name="TYPE_F device params CRUD" searchProperties="true" id="65696a19-89e3-4ba5-a505-7b0920b847a0">
      <con:settings/>
      
      
      
      
      <con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>app.username</con:name><con:value>adminuser</con:value></con:property><con:property><con:name>app.password</con:name><con:value>adminpass</con:value></con:property><con:property><con:name>---------------------------------------device</con:name><con:value/></con:property><con:property><con:name>device.key</con:name><con:value>32</con:value></con:property><con:property><con:name>device.ip</con:name><con:value>192.168.1.7</con:value></con:property><con:property><con:name>device.mac</con:name><con:value>ab:cd:ef:20:34:56</con:value></con:property><con:property><con:name>device.name</con:name><con:value>test-device-json</con:value></con:property><con:property><con:name>device.type</con:name><con:value>TYPE_F</con:value></con:property><con:property><con:name>device.location</con:name><con:value>4th floor</con:value></con:property><con:property><con:name>device.version</con:name><con:value>1.00</con:value></con:property><con:property><con:name>device.description</con:name><con:value>this is a test device</con:value></con:property><con:property><con:name>---------------------------------------default parameters</con:name><con:value/></con:property><con:property><con:name>latchActive</con:name><con:value>false</con:value></con:property><con:property><con:name>bPressLapse</con:name><con:value>null</con:value></con:property><con:property><con:name>flickWarn</con:name><con:value>null</con:value></con:property><con:property><con:name>flickReps</con:name><con:value>null</con:value></con:property><con:property><con:name>offDelay</con:name><con:value>null</con:value></con:property><con:property><con:name>motionMuteDelay</con:name><con:value>null</con:value></con:property><con:property><con:name>dim</con:name><con:value>null</con:value></con:property><con:property><con:name>dimMin</con:name><con:value>null</con:value></con:property><con:property><con:name>dimMode</con:name><con:value>OFF</con:value></con:property><con:property><con:name>input</con:name><con:value>null</con:value></con:property><con:property><con:name>switchStatus</con:name><con:value>OFF</con:value></con:property><con:property><con:name>networkOn</con:name><con:value>null</con:value></con:property><con:property><con:name>----------------------------------------updated device</con:name><con:value/></con:property><con:property><con:name>device-update.ip</con:name><con:value>10.10.10.10</con:value></con:property><con:property><con:name>device-update.mac</con:name><con:value>aa:bb:cc:dd:ee:11</con:value></con:property><con:property><con:name>device-update.name</con:name><con:value>updated-device</con:value></con:property><con:property><con:name>device-update.type</con:name><con:value/></con:property><con:property><con:name>device-update.location</con:name><con:value>1st floor</con:value></con:property><con:property><con:name>device-update.version</con:name><con:value>2.0</con:value></con:property><con:property><con:name>device-update.description</con:name><con:value>updated test device</con:value></con:property><con:property><con:name>---------------------------------------updated parameters</con:name><con:value/></con:property><con:property><con:name>latchActive-upd</con:name><con:value>null</con:value></con:property><con:property><con:name>bPressLapse-upd</con:name><con:value>200</con:value></con:property><con:property><con:name>flickWarn-upd</con:name><con:value>null</con:value></con:property><con:property><con:name>flickReps-upd</con:name><con:value>50</con:value></con:property><con:property><con:name>offDelay-upd</con:name><con:value>200</con:value></con:property><con:property><con:name>motionMuteDelay-upd</con:name><con:value>450</con:value></con:property><con:property><con:name>dim-upd</con:name><con:value>500</con:value></con:property><con:property><con:name>dimMin-upd</con:name><con:value>50</con:value></con:property><con:property><con:name>dimMode-upd</con:name><con:value>ON</con:value></con:property><con:property><con:name>input-upd</con:name><con:value>true</con:value></con:property><con:property><con:name>switchStatus-upd</con:name><con:value>AUTO</con:value></con:property><con:property><con:name>networkOn-upd</con:name><con:value>true</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="create device">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create device" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"${device.ip}",
   "devMac":"${device.mac}",
   "devType":"${device.type}",
   "devName":"${device.name}",
   "devLocation":"${device.location}",
   "firmwareVersion":"${device.version}",
   "devDescription":"${device.description}"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid device IP returned"><con:configuration><path>//*:Response/*:devIp</path><content>${device.ip}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device MAC returned"><con:configuration><path>//*:Response/*:devMac</path><content>${device.mac}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device name returned"><con:configuration><path>//*:Response/*:devName</path><content>${device.name}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device type returned"><con:configuration><path>//*:Response/*:devType</path><content>${device.type}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device location returned"><con:configuration><path>//*:Response/*:devLocation</path><content>${device.location}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device firmwareVersion returned"><con:configuration><path>//*:Response/*:firmwareVersion</path><content>${device.version}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;dim&quot; value returned"><con:configuration><path>//*:Response/*:dim/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;dimMin&quot; value returned"><con:configuration><path>//*:Response/*:dimMin/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;dimMode&quot; value returned"><con:configuration><path>//*:Response/*:dimMode</path><content>OFF</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;bPressLapse&quot; value returned"><con:configuration><path>//*:Response/*:bPressLapse/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;flickReps&quot; value returned"><con:configuration><path>//*:Response/*:flickReps/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;flickWarn&quot; value returned"><con:configuration><path>//*:Response/*:flickWarn/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;input&quot; value returned"><con:configuration><path>//*:Response/*:input/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;latchActive&quot; value returned"><con:configuration><path>//*:Response/*:latchActive/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;motionMuteDelay&quot; value returned"><con:configuration><path>//*:Response/*:motionMuteDelay/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;networkOn&quot; value returned"><con:configuration><path>//*:Response/*:networkOn/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;offDelay&quot; value returned"><con:configuration><path>//*:Response/*:offDelay/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;switchStatus&quot; value returned"><con:configuration><path>//*:Response/*:switchStatus</path><content>OFF</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device description returned"><con:configuration><path>//*:Response/*:devDescription</path><content>${device.description}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      <con:testStep type="transfer" name="transfer key"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>primaryKey</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>create device</con:sourceStep><con:sourcePath>//*:Response/*:primaryKey</con:sourcePath><con:targetType>device.key</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="validate create" id="3ea88cd3-2149-4570-b36c-8a9d09686510">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="validate create" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/${device.key}</con:endpoint>
          <con:request/>
          
          
          <con:assertion type="XPath Match" name="valid primary key returned"><con:configuration><path>//*:Response/*:primaryKey</path><content>${device.key}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid IP returned"><con:configuration><path>//*:Response/*:devIp</path><content>${device.ip}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid MAC returned"><con:configuration><path>//*:Response/*:devMac</path><content>${device.mac}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device name returned"><con:configuration><path>//*:Response/*:devName</path><content>${device.name}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device type returned"><con:configuration><path>//*:Response/*:devType</path><content>${device.type}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device location returned"><con:configuration><path>//*:Response/*:devLocation</path><content>${device.location}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device firmware version returned"><con:configuration><path>//*:Response/*:firmwareVersion</path><content>${device.version}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device description returned"><con:configuration><path>//*:Response/*:devDescription</path><content>${device.description}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;dim&quot; value returned"><con:configuration><path>//*:Response/*:dim/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;dimMin&quot; value returned"><con:configuration><path>//*:Response/*:dimMin/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;dimMode&quot; value returned"><con:configuration><path>//*:Response/*:dimMode</path><content>OFF</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;bPressLapse&quot; value returned"><con:configuration><path>//*:Response/*:bPressLapse/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;flickReps&quot; value returned"><con:configuration><path>//*:Response/*:flickReps/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;flickWarn&quot; value returned"><con:configuration><path>//*:Response/*:flickWarn/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;input&quot; value returned"><con:configuration><path>//*:Response/*:input/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;latchActive&quot; value returned"><con:configuration><path>//*:Response/*:latchActive/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;motionMuteDelay&quot; value returned"><con:configuration><path>//*:Response/*:motionMuteDelay/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;networkOn&quot; value returned"><con:configuration><path>//*:Response/*:networkOn/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;offDelay&quot; value returned"><con:configuration><path>//*:Response/*:offDelay/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;switchStatus&quot; value returned"><con:configuration><path>//*:Response/*:switchStatus</path><content>OFF</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="update device parameters">
        <con:settings/>
        <con:config method="PUT" xsi:type="con:HttpRequest" name="update device parameters" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/params</con:endpoint>
          <con:request>{
   "primaryKey":"${device.key}",
   "devIp":"${device-update.ip}",
   "devMac":"${device-update.mac}",
   "devType":"${device.type}",
   "devName":"${device-update.name}",
   "devLocation":"${device-update.location}",
   "firmwareVersion":"${device-update.version}",
   "devDescription":"${device-update.description}",
   "latchActive": ${latchActive-upd},
   "bPressLapse": ${bPressLapse-upd},
   "flickWarn": ${flickWarn-upd},
   "flickReps": "${flickReps-upd}",
   "offDelay": "${offDelay-upd}",
   "motionMuteDelay": "${motionMuteDelay-upd}",
   "dim": "${dim-upd}",
   "dimMin": ${dimMin-upd},
   "dimMode": "${dimMode-upd}",
   "input": "${input-upd}",
   "switchStatus": "${switchStatus-upd}",
   "networkOn": "${networkOn-upd}"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid device ip returned"><con:configuration><path>//*:Response/*:devIp</path><content>${device-update.ip}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device mac returned"><con:configuration><path>//*:Response/*:devMac</path><content>${device-update.mac}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device name returned"><con:configuration><path>//*:Response/*:devName</path><content>${device-update.name}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device type returned"><con:configuration><path>//*:Response/*:devType</path><content>${device.type}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device location returned"><con:configuration><path>//*:Response/*:devLocation</path><content>${device-update.location}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device firmware version returned"><con:configuration><path>//*:Response/*:firmwareVersion</path><content>${device-update.version}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device description returned"><con:configuration><path>//*:Response/*:devDescription</path><content>${device-update.description}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid latchActive value returned"><con:configuration><path>//*:Response/*:latchActive/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid bPressLapse value returned"><con:configuration><path>//*:Response/*:bPressLapse</path><content>${bPressLapse-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid flickWarn value returned"><con:configuration><path>//*:Response/*:flickWarn/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid flickReps value returned"><con:configuration><path>//*:Response/*:flickReps</path><content>${flickReps-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid offDelay value returned"><con:configuration><path>//*:Response/*:offDelay</path><content>${offDelay-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid motionMuteDelay value returned"><con:configuration><path>//*:Response/*:motionMuteDelay</path><content>${motionMuteDelay-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid dim value returned"><con:configuration><path>//*:Response/*:dim</path><content>${dim-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid dimMin value returned"><con:configuration><path>//*:Response/*:dimMin</path><content>${dimMin-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid dimMode value returned"><con:configuration><path>//*:Response/*:dimMode</path><content>${dimMode-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid input value returned"><con:configuration><path>//*:Response/*:input</path><content>${input-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid switchStatus value returned"><con:configuration><path>//*:Response/*:switchStatus</path><content>${switchStatus-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid networkOn value returned"><con:configuration><path>//*:Response/*:networkOn</path><content>${networkOn-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="validate update">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="validate update" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/${device.key}</con:endpoint>
          <con:request/>
          
          
          <con:assertion type="XPath Match" name="valid primary key returned"><con:configuration><path>//*:Response/*:primaryKey</path><content>${device.key}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid IP returned"><con:configuration><path>//*:Response/*:devIp</path><content>${device-update.ip}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid MAC returned"><con:configuration><path>//*:Response/*:devMac</path><content>${device-update.mac}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device name returned"><con:configuration><path>//*:Response/*:devName</path><content>${device-update.name}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device type returned"><con:configuration><path>//*:Response/*:devType</path><content>${device.type}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid location returned"><con:configuration><path>//*:Response/*:devLocation</path><content>${device-update.location}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid firmwareVersion returned"><con:configuration><path>//*:Response/*:firmwareVersion</path><content>${device-update.version}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid description returned"><con:configuration><path>//*:Response/*:devDescription</path><content>${device-update.description}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;dim&quot; value returned"><con:configuration><path>//*:Response/*:dim</path><content>${dim-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;dimMin&quot; value returned"><con:configuration><path>//*:Response/*:dimMin</path><content>${dimMin-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;dimMode&quot; value returned"><con:configuration><path>//*:Response/*:dimMode</path><content>${dimMode-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;bPressLapse&quot; value returned"><con:configuration><path>//*:Response/*:bPressLapse</path><content>${bPressLapse-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;flickReps&quot; value returned"><con:configuration><path>//*:Response/*:flickReps</path><content>${flickReps-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;flickWarn&quot; value returned"><con:configuration><path>//*:Response/*:flickWarn/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;input&quot; value returned"><con:configuration><path>//*:Response/*:input</path><content>${input-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;latchActive&quot; value returned"><con:configuration><path>//*:Response/*:latchActive/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;motionMuteDelay&quot; value returned"><con:configuration><path>//*:Response/*:motionMuteDelay</path><content>${motionMuteDelay-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;networkOn&quot; value returned"><con:configuration><path>//*:Response/*:networkOn</path><content>${networkOn-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;offDelay&quot; value returned"><con:configuration><path>//*:Response/*:offDelay</path><content>${offDelay-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;switchStatus&quot; value returned"><con:configuration><path>//*:Response/*:switchStatus</path><content>${switchStatus-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="delete device">
        <con:settings/>
        <con:config method="DELETE" xsi:type="con:HttpRequest" name="delete device" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/${device.key}</con:endpoint>
          <con:request>{
   "id":"",
   "name":"updated contact",
   "address":"updated address",
   "gender":"F",
   "dob":"2001-04-16",
   "email":"updated-test@email.com",
   "mobile":"5145145111",
   "phone":"5145145121"
}</con:request>
          
          
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Code returned"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="validate delete">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="validate delete" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/${device.key}</con:endpoint>
          <con:request/>
          
          
          <con:assertion type="XPath Match" name="valid error message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>Device with primarykey '${device.key}' not found</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>16cf45a0-c1af-4c33-8819-0a4ea8276756</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>1342966e-515f-4ec0-9a4c-9d7c51c48542</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>1fb764e4-1840-4cf8-af80-00f7f2c2ece6</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3b800581-6387-44ff-b35b-945408787b7c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>edfd8dac-0104-4730-8cc6-0428d656d0ad</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>6a97c497-6e1b-4cef-b11d-07bf8213303c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f90e9cac-ab42-46ea-98df-be81bfe12c6a</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>0d0d0e4d-ae89-44ba-8a1f-a351325fb2ac</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>335a9d86-8bef-4093-94b6-f118d2b94d26</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>8cc6b576-1299-4a62-a3cb-02dba18d783c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3d446bb9-7f2d-437d-ba9d-538c8544ebca</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>887ed9bf-ef65-4cd6-8d63-fe63059b6114</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5e49a61f-6c85-495d-9b4a-4cb38df93a4c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>ff9f7042-ba4f-437e-a043-8021225671b8</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>d76aa335-29eb-4aa2-91cd-16d24dbca2ba</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>679e8216-4253-4db8-8c5d-14aaa0c542fd</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>71a6c31e-5f1d-4b27-b2a7-44b62806bf64</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5a75c453-48bd-46bc-b1f3-1987ee84ae9b</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5acde369-b009-4471-a36a-146d0396a252</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>fd95a9ee-7a42-47ac-acef-a96cb56e687c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3b97c817-b31a-4a3f-b8ff-409f243cff67</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>e2cdbfdb-8bb7-4def-9ab4-51a9f9aa9b35</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>a461e16f-8295-44f1-8150-5ac5d8413f25</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>8c722f3e-448b-48cb-9417-916e6c71f2a4</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>b5ffe9da-6232-45b2-8878-ff6d59663ebd</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f9f33afa-18df-4001-b902-af22172b09c9</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f41cff6a-ef96-412a-88b1-035cd578ec10</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>bf010173-19fa-4baf-b5f4-0aa02758a4ca</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>c9f13830-2d42-4ea7-afff-1a1c3960b124</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    <con:breakPoints><con:testStepId>18313ee5-9be5-461b-bbef-4ac16dc18a16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>629d7ffd-2eeb-46e3-bb04-778428631c99</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c1469165-8392-4ede-ae0c-08bc0ba0118c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ad757a15-193d-485b-b74a-1df88eea7360</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3ea88cd3-2149-4570-b36c-8a9d09686510</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="true" maxResults="0" name="TYPE_G device CRUD (atomic)" searchProperties="true" id="cfd1b0a4-753f-4252-b2bd-5e967e5c31cd">
      <con:settings/>
      
      
      
      
      <con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>app.username</con:name><con:value>adminuser</con:value></con:property><con:property><con:name>app.password</con:name><con:value>adminpass</con:value></con:property><con:property><con:name>---------------------------------------create</con:name><con:value/></con:property><con:property><con:name>device.key</con:name><con:value>33</con:value></con:property><con:property><con:name>device.ip</con:name><con:value>192.168.1.7</con:value></con:property><con:property><con:name>device.mac</con:name><con:value>ab:cd:ef:20:34:56</con:value></con:property><con:property><con:name>device.name</con:name><con:value>test-device-json</con:value></con:property><con:property><con:name>device.type</con:name><con:value>TYPE_G</con:value></con:property><con:property><con:name>---------------------------------------update</con:name><con:value/></con:property><con:property><con:name>device-update.ip</con:name><con:value>10.10.10.10</con:value></con:property><con:property><con:name>device-update.mac</con:name><con:value>aa:bb:cc:dd:ee:11</con:value></con:property><con:property><con:name>device-update.name</con:name><con:value>updated-device</con:value></con:property><con:property><con:name>device-update.type</con:name><con:value>TYPE_G</con:value></con:property><con:property><con:name>----------------------------------------defaultParameters</con:name><con:value/></con:property><con:property><con:name>latchActive</con:name><con:value>false</con:value></con:property><con:property><con:name>bPressLapse</con:name><con:value>null</con:value></con:property><con:property><con:name>flickWarn</con:name><con:value>false</con:value></con:property><con:property><con:name>flickReps</con:name><con:value>null</con:value></con:property><con:property><con:name>offDelay</con:name><con:value>null</con:value></con:property><con:property><con:name>motionMuteDelay</con:name><con:value>null</con:value></con:property><con:property><con:name>dim</con:name><con:value>null</con:value></con:property><con:property><con:name>dimMin</con:name><con:value>null</con:value></con:property><con:property><con:name>dimMode</con:name><con:value>OFF</con:value></con:property><con:property><con:name>input</con:name><con:value>null</con:value></con:property><con:property><con:name>switchStatus</con:name><con:value>OFF</con:value></con:property><con:property><con:name>networkOn</con:name><con:value>false</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="create device">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create device" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"${device.ip}",
   "devMac":"${device.mac}",
   "devType":"${device.type}",
   "devName":"${device.name}",
   "devLocation":"null",
   "firmwareVersion":"null",
   "devDescription":"this is a test device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid device IP returned"><con:configuration><path>//*:Response/*:devIp</path><content>${device.ip}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device MAC returned"><con:configuration><path>//*:Response/*:devMac</path><content>${device.mac}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device name returned"><con:configuration><path>//*:Response/*:devName</path><content>${device.name}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device type returned"><con:configuration><path>//*:Response/*:devType</path><content>${device.type}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;bPressLapse&quot; value returned"><con:configuration><path>//*:Response/*:bPressLapse/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;flickReps&quot; value returned"><con:configuration><path>//*:Response/*:flickReps/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;flickWarn&quot; value returned"><con:configuration><path>//*:Response/*:flickWarn/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;latchActive&quot; value returned"><con:configuration><path>//*:Response/*:latchActive/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;networkOn&quot; value returned"><con:configuration><path>//*:Response/*:networkOn/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;switchStatus&quot; value returned"><con:configuration><path>//*:Response/*:switchStatus</path><content>OFF</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;ledOffColor&quot; value returned"><con:configuration><path>//*:Response/*:ledOffColor</path><content>NONE</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;ledOnColor&quot; value returned"><con:configuration><path>//*:Response/*:ledOnColor</path><content>NONE</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      <con:testStep type="transfer" name="transfer key"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>primaryKey</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>create device</con:sourceStep><con:sourcePath>//*:Response/*:primaryKey</con:sourcePath><con:targetType>device.key</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="validate create">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="validate create" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/${device.key}</con:endpoint>
          <con:request/>
          
          
          <con:assertion type="XPath Match" name="valid primary key returned"><con:configuration><path>//*:Response/*:primaryKey</path><content>${device.key}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid IP returned"><con:configuration><path>//*:Response/*:devIp</path><content>${device.ip}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid MAC returned"><con:configuration><path>//*:Response/*:devMac</path><content>${device.mac}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device name returned"><con:configuration><path>//*:Response/*:devName</path><content>${device.name}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device type returned"><con:configuration><path>//*:Response/*:devType</path><content>${device.type}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;bPressLapse&quot; value returned"><con:configuration><path>//*:Response/*:bPressLapse/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;flickReps&quot; value returned"><con:configuration><path>//*:Response/*:flickReps/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;flickWarn&quot; value returned"><con:configuration><path>//*:Response/*:flickWarn/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;latchActive&quot; value returned"><con:configuration><path>//*:Response/*:latchActive/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;networkOn&quot; value returned"><con:configuration><path>//*:Response/*:networkOn/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;switchStatus&quot; value returned"><con:configuration><path>//*:Response/*:switchStatus</path><content>OFF</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;ledOffColor&quot; value returned"><con:configuration><path>//*:Response/*:ledOffColor</path><content>NONE</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;ledOnColor&quot; value returned"><con:configuration><path>//*:Response/*:ledOnColor</path><content>NONE</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="update device">
        <con:settings/>
        <con:config method="PUT" xsi:type="con:HttpRequest" name="update device" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/${device.key}</con:endpoint>
          <con:request>{
   "primaryKey":"${device.key}",
   "devIp":"${device-update.ip}",
   "devMac":"${device-update.mac}",
   "devType":"${device.type}",
   "devName":"${device-update.name}",
   "devLocation":"1st floor",
   "firmwareVersion":"1.0",
   "devDescription":"this is an updated test device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid device ip returned"><con:configuration><path>//*:Response/*:devIp</path><content>${device-update.ip}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device mac returned"><con:configuration><path>//*:Response/*:devMac</path><content>${device-update.mac}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device name returned"><con:configuration><path>//*:Response/*:devName</path><content>${device-update.name}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device type returned"><con:configuration><path>//*:Response/*:devType</path><content>${device.type}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device description returned"><con:configuration><path>//*:Response/*:devDescription</path><content>this is an updated test device</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="validate update">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="validate update" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/${device.key}</con:endpoint>
          <con:request/>
          
          
          <con:assertion type="XPath Match" name="valid primary key returned"><con:configuration><path>//*:Response/*:primaryKey</path><content>${device.key}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid IP returned"><con:configuration><path>//*:Response/*:devIp</path><content>${device-update.ip}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid MAC returned"><con:configuration><path>//*:Response/*:devMac</path><content>${device-update.mac}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device name returned"><con:configuration><path>//*:Response/*:devName</path><content>${device-update.name}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device type returned"><con:configuration><path>//*:Response/*:devType</path><content>${device.type}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;bPressLapse&quot; value returned"><con:configuration><path>//*:Response/*:bPressLapse/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;flickReps&quot; value returned"><con:configuration><path>//*:Response/*:flickReps/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;flickWarn&quot; value returned"><con:configuration><path>//*:Response/*:flickWarn/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;latchActive&quot; value returned"><con:configuration><path>//*:Response/*:latchActive/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;networkOn&quot; value returned"><con:configuration><path>//*:Response/*:networkOn/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;switchStatus&quot; value returned"><con:configuration><path>//*:Response/*:switchStatus</path><content>OFF</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;ledOffColor&quot; value returned"><con:configuration><path>//*:Response/*:ledOffColor</path><content>NONE</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;ledOnColor&quot; value returned"><con:configuration><path>//*:Response/*:ledOnColor</path><content>NONE</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="delete device">
        <con:settings/>
        <con:config method="DELETE" xsi:type="con:HttpRequest" name="delete device" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/${device.key}</con:endpoint>
          <con:request>{
   "id":"",
   "name":"updated contact",
   "address":"updated address",
   "gender":"F",
   "dob":"2001-04-16",
   "email":"updated-test@email.com",
   "mobile":"5145145111",
   "phone":"5145145121"
}</con:request>
          
          
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Code returned"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="validate delete">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="validate delete" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/${device.key}</con:endpoint>
          <con:request/>
          
          
          <con:assertion type="XPath Match" name="valid error message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>Device with primarykey '${device.key}' not found</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>16cf45a0-c1af-4c33-8819-0a4ea8276756</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>1342966e-515f-4ec0-9a4c-9d7c51c48542</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>1fb764e4-1840-4cf8-af80-00f7f2c2ece6</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3b800581-6387-44ff-b35b-945408787b7c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>edfd8dac-0104-4730-8cc6-0428d656d0ad</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>6a97c497-6e1b-4cef-b11d-07bf8213303c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f90e9cac-ab42-46ea-98df-be81bfe12c6a</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>0d0d0e4d-ae89-44ba-8a1f-a351325fb2ac</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>335a9d86-8bef-4093-94b6-f118d2b94d26</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>8cc6b576-1299-4a62-a3cb-02dba18d783c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3d446bb9-7f2d-437d-ba9d-538c8544ebca</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>887ed9bf-ef65-4cd6-8d63-fe63059b6114</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5e49a61f-6c85-495d-9b4a-4cb38df93a4c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>ff9f7042-ba4f-437e-a043-8021225671b8</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>d76aa335-29eb-4aa2-91cd-16d24dbca2ba</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>679e8216-4253-4db8-8c5d-14aaa0c542fd</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>71a6c31e-5f1d-4b27-b2a7-44b62806bf64</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5a75c453-48bd-46bc-b1f3-1987ee84ae9b</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5acde369-b009-4471-a36a-146d0396a252</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>fd95a9ee-7a42-47ac-acef-a96cb56e687c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3b97c817-b31a-4a3f-b8ff-409f243cff67</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>e2cdbfdb-8bb7-4def-9ab4-51a9f9aa9b35</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>a461e16f-8295-44f1-8150-5ac5d8413f25</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>8c722f3e-448b-48cb-9417-916e6c71f2a4</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>b5ffe9da-6232-45b2-8878-ff6d59663ebd</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f9f33afa-18df-4001-b902-af22172b09c9</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f41cff6a-ef96-412a-88b1-035cd578ec10</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>bf010173-19fa-4baf-b5f4-0aa02758a4ca</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>c9f13830-2d42-4ea7-afff-1a1c3960b124</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    <con:breakPoints><con:testStepId>18313ee5-9be5-461b-bbef-4ac16dc18a16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>629d7ffd-2eeb-46e3-bb04-778428631c99</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c1469165-8392-4ede-ae0c-08bc0ba0118c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ad757a15-193d-485b-b74a-1df88eea7360</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="true" maxResults="0" name="TYPE_G device params CRUD" searchProperties="true" id="b3ae918f-d2d2-43f8-8918-03e545ac5a92">
      <con:settings/>
      
      
      
      
      <con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>app.username</con:name><con:value>adminuser</con:value></con:property><con:property><con:name>app.password</con:name><con:value>adminpass</con:value></con:property><con:property><con:name>---------------------------------------device</con:name><con:value/></con:property><con:property><con:name>device.key</con:name><con:value>34</con:value></con:property><con:property><con:name>device.ip</con:name><con:value>192.168.1.7</con:value></con:property><con:property><con:name>device.mac</con:name><con:value>ab:cd:ef:20:34:56</con:value></con:property><con:property><con:name>device.name</con:name><con:value>test-device-json</con:value></con:property><con:property><con:name>device.type</con:name><con:value>TYPE_G</con:value></con:property><con:property><con:name>device.location</con:name><con:value>4th floor</con:value></con:property><con:property><con:name>device.version</con:name><con:value>1.00</con:value></con:property><con:property><con:name>device.description</con:name><con:value>this is a test device</con:value></con:property><con:property><con:name>---------------------------------------default parameters</con:name><con:value/></con:property><con:property><con:name>latchActive</con:name><con:value>false</con:value></con:property><con:property><con:name>bPressLapse</con:name><con:value>null</con:value></con:property><con:property><con:name>flickWarn</con:name><con:value>null</con:value></con:property><con:property><con:name>flickReps</con:name><con:value>null</con:value></con:property><con:property><con:name>ledOnColor</con:name><con:value>NONE</con:value></con:property><con:property><con:name>ledOffColor</con:name><con:value>NONE</con:value></con:property><con:property><con:name>switchStatus</con:name><con:value>OFF</con:value></con:property><con:property><con:name>networkOn</con:name><con:value>null</con:value></con:property><con:property><con:name>----------------------------------------updated device</con:name><con:value/></con:property><con:property><con:name>device-update.ip</con:name><con:value>10.10.10.10</con:value></con:property><con:property><con:name>device-update.mac</con:name><con:value>aa:bb:cc:dd:ee:11</con:value></con:property><con:property><con:name>device-update.name</con:name><con:value>updated-device</con:value></con:property><con:property><con:name>device-update.type</con:name><con:value>TYPE_G</con:value></con:property><con:property><con:name>device-update.location</con:name><con:value>1st floor</con:value></con:property><con:property><con:name>device-update.version</con:name><con:value>2.00</con:value></con:property><con:property><con:name>device-update.description</con:name><con:value>updated test device</con:value></con:property><con:property><con:name>---------------------------------------updated parameters</con:name><con:value/></con:property><con:property><con:name>latchActive-upd</con:name><con:value>null</con:value></con:property><con:property><con:name>bPressLapse-upd</con:name><con:value>200</con:value></con:property><con:property><con:name>flickWarn-upd</con:name><con:value>null</con:value></con:property><con:property><con:name>flickReps-upd</con:name><con:value>50</con:value></con:property><con:property><con:name>ledOnColor-upd</con:name><con:value>AMBER</con:value></con:property><con:property><con:name>ledOffColor-upd</con:name><con:value>TOGGLE</con:value></con:property><con:property><con:name>switchStatus-upd</con:name><con:value>AUTO</con:value></con:property><con:property><con:name>networkOn-upd</con:name><con:value>true</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="create device">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create device" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"${device.ip}",
   "devMac":"${device.mac}",
   "devType":"${device.type}",
   "devName":"${device.name}",
   "devLocation":"${device.location}",
   "firmwareVersion":"${device.version}",
   "devDescription":"${device.description}"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid device IP returned"><con:configuration><path>//*:Response/*:devIp</path><content>${device.ip}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device MAC returned"><con:configuration><path>//*:Response/*:devMac</path><content>${device.mac}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device name returned"><con:configuration><path>//*:Response/*:devName</path><content>${device.name}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device type returned"><con:configuration><path>//*:Response/*:devType</path><content>${device.type}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;firmwareVersion&quot; value returned"><con:configuration><path>//*:Response/*:firmwareVersion</path><content>${device.version}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;bPressLapse&quot; value returned"><con:configuration><path>//*:Response/*:bPressLapse/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;flickReps&quot; value returned"><con:configuration><path>//*:Response/*:flickReps/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;flickWarn&quot; value returned"><con:configuration><path>//*:Response/*:flickWarn/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;latchActive&quot; value returned"><con:configuration><path>//*:Response/*:latchActive/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;networkOn&quot; value returned"><con:configuration><path>//*:Response/*:networkOn/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;switchStatus&quot; value returned"><con:configuration><path>//*:Response/*:switchStatus</path><content>OFF</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;ledOffColor&quot; value returned"><con:configuration><path>//*:Response/*:ledOffColor</path><content>NONE</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;ledOnColor&quot; value returned"><con:configuration><path>//*:Response/*:ledOnColor</path><content>NONE</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;location&quot; value returned"><con:configuration><path>//*:Response/*:devLocation</path><content>${device.location}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      <con:testStep type="transfer" name="transfer key"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>primaryKey</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>create device</con:sourceStep><con:sourcePath>//*:Response/*:primaryKey</con:sourcePath><con:targetType>device.key</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="validate create">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="validate create" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/${device.key}</con:endpoint>
          <con:request/>
          
          
          <con:assertion type="XPath Match" name="valid primary key returned"><con:configuration><path>//*:Response/*:primaryKey</path><content>${device.key}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid IP returned"><con:configuration><path>//*:Response/*:devIp</path><content>${device.ip}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid MAC returned"><con:configuration><path>//*:Response/*:devMac</path><content>${device.mac}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device name returned"><con:configuration><path>//*:Response/*:devName</path><content>${device.name}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device type returned"><con:configuration><path>//*:Response/*:devType</path><content>${device.type}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device location returned"><con:configuration><path>//*:Response/*:devLocation</path><content>${device.location}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device firmware version returned"><con:configuration><path>//*:Response/*:firmwareVersion</path><content>${device.version}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device description returned"><con:configuration><path>//*:Response/*:devDescription</path><content>${device.description}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;latchActive&quot; value returned"><con:configuration><path>//*:Response/*:latchActive/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;bPressLapse&quot; value returned"><con:configuration><path>//*:Response/*:bPressLapse/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;flickWarn&quot; value returned"><con:configuration><path>//*:Response/*:flickWarn/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;flickReps&quot; value returned"><con:configuration><path>//*:Response/*:flickReps/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;networkOn&quot; value returned"><con:configuration><path>//*:Response/*:networkOn/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;switchStatus&quot; value returned"><con:configuration><path>//*:Response/*:switchStatus</path><content>OFF</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;ledOnColor&quot; value returned"><con:configuration><path>//*:Response/*:ledOnColor</path><content>NONE</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;ledOffColor&quot; value returned"><con:configuration><path>//*:Response/*:ledOffColor</path><content>NONE</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="update device parameters">
        <con:settings/>
        <con:config method="PUT" xsi:type="con:HttpRequest" name="update device parameters" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/params</con:endpoint>
          <con:request>{
   "primaryKey":"${device.key}",
   "devIp":"${device-update.ip}",
   "devMac":"${device-update.mac}",
   "devType":"${device.type}",
   "devName":"${device-update.name}",
   "devLocation":"${device-update.location}",
   "firmwareVersion":"${device-update.version}",
   "devDescription":"${device-update.description}",
   "latchActive": ${latchActive-upd},
   "bPressLapse": ${bPressLapse-upd},
   "flickWarn": ${flickWarn-upd},
   "flickReps": "${flickReps-upd}",
   "ledOnColor": "${ledOnColor-upd}",
   "ledOffColor": "${ledOffColor-upd}",
   "switchStatus": "${switchStatus-upd}",
   "networkOn": "${networkOn-upd}"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid device ip returned"><con:configuration><path>//*:Response/*:devIp</path><content>${device-update.ip}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device mac returned"><con:configuration><path>//*:Response/*:devMac</path><content>${device-update.mac}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device name returned"><con:configuration><path>//*:Response/*:devName</path><content>${device-update.name}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device type returned"><con:configuration><path>//*:Response/*:devType</path><content>${device.type}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device location returned"><con:configuration><path>//*:Response/*:devLocation</path><content>${device-update.location}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device firmware version returned"><con:configuration><path>//*:Response/*:firmwareVersion</path><content>${device-update.version}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device description returned"><con:configuration><path>//*:Response/*:devDescription</path><content>${device-update.description}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid latchActive value returned"><con:configuration><path>//*:Response/*:latchActive/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid bPressLapse value returned"><con:configuration><path>//*:Response/*:bPressLapse</path><content>${bPressLapse-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid flickWarn value returned"><con:configuration><path>//*:Response/*:flickWarn/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid flickReps value returned"><con:configuration><path>//*:Response/*:flickReps</path><content>${flickReps-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid switchStatus value returned"><con:configuration><path>//*:Response/*:switchStatus</path><content>${switchStatus-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid networkOn value returned"><con:configuration><path>//*:Response/*:networkOn</path><content>${networkOn-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid ledOnColor value returned"><con:configuration><path>//*:Response/*:ledOnColor</path><content>${ledOnColor-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid ledOffColor value returned"><con:configuration><path>//*:Response/*:ledOffColor</path><content>${ledOffColor-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="validate update">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="validate update" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/${device.key}</con:endpoint>
          <con:request/>
          
          
          <con:assertion type="XPath Match" name="valid primary key returned"><con:configuration><path>//*:Response/*:primaryKey</path><content>${device.key}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid IP returned"><con:configuration><path>//*:Response/*:devIp</path><content>${device-update.ip}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid MAC returned"><con:configuration><path>//*:Response/*:devMac</path><content>${device-update.mac}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device name returned"><con:configuration><path>//*:Response/*:devName</path><content>${device-update.name}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device type returned"><con:configuration><path>//*:Response/*:devType</path><content>${device.type}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device location returned"><con:configuration><path>//*:Response/*:devLocation</path><content>${device-update.location}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device firmware version returned"><con:configuration><path>//*:Response/*:firmwareVersion</path><content>${device-update.version}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device description returned"><con:configuration><path>//*:Response/*:devDescription</path><content>${device-update.description}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;latchActive&quot; value returned"><con:configuration><path>//*:Response/*:latchActive/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;bPressLapse&quot; value returned"><con:configuration><path>//*:Response/*:bPressLapse</path><content>${bPressLapse-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;flickWarn&quot; value returned"><con:configuration><path>//*:Response/*:flickWarn/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;flickReps&quot; value returned"><con:configuration><path>//*:Response/*:flickReps</path><content>${flickReps-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;networkOn&quot; value returned"><con:configuration><path>//*:Response/*:networkOn</path><content>${networkOn-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;switchStatus&quot; value returned"><con:configuration><path>//*:Response/*:switchStatus</path><content>${switchStatus-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;ledOnColor&quot; value returned"><con:configuration><path>//*:Response/*:ledOnColor</path><content>${ledOnColor-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;ledOffColor&quot; value returned"><con:configuration><path>//*:Response/*:ledOffColor</path><content>${ledOffColor-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="delete device">
        <con:settings/>
        <con:config method="DELETE" xsi:type="con:HttpRequest" name="delete device" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/${device.key}</con:endpoint>
          <con:request>{
   "id":"",
   "name":"updated contact",
   "address":"updated address",
   "gender":"F",
   "dob":"2001-04-16",
   "email":"updated-test@email.com",
   "mobile":"5145145111",
   "phone":"5145145121"
}</con:request>
          
          
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Code returned"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="validate delete">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="validate delete" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/${device.key}</con:endpoint>
          <con:request/>
          
          
          <con:assertion type="XPath Match" name="valid error message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>Device with primarykey '${device.key}' not found</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>16cf45a0-c1af-4c33-8819-0a4ea8276756</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>1342966e-515f-4ec0-9a4c-9d7c51c48542</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>1fb764e4-1840-4cf8-af80-00f7f2c2ece6</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3b800581-6387-44ff-b35b-945408787b7c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>edfd8dac-0104-4730-8cc6-0428d656d0ad</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>6a97c497-6e1b-4cef-b11d-07bf8213303c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f90e9cac-ab42-46ea-98df-be81bfe12c6a</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>0d0d0e4d-ae89-44ba-8a1f-a351325fb2ac</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>335a9d86-8bef-4093-94b6-f118d2b94d26</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>8cc6b576-1299-4a62-a3cb-02dba18d783c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3d446bb9-7f2d-437d-ba9d-538c8544ebca</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>887ed9bf-ef65-4cd6-8d63-fe63059b6114</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5e49a61f-6c85-495d-9b4a-4cb38df93a4c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>ff9f7042-ba4f-437e-a043-8021225671b8</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>d76aa335-29eb-4aa2-91cd-16d24dbca2ba</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>679e8216-4253-4db8-8c5d-14aaa0c542fd</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>71a6c31e-5f1d-4b27-b2a7-44b62806bf64</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5a75c453-48bd-46bc-b1f3-1987ee84ae9b</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5acde369-b009-4471-a36a-146d0396a252</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>fd95a9ee-7a42-47ac-acef-a96cb56e687c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3b97c817-b31a-4a3f-b8ff-409f243cff67</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>e2cdbfdb-8bb7-4def-9ab4-51a9f9aa9b35</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>a461e16f-8295-44f1-8150-5ac5d8413f25</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>8c722f3e-448b-48cb-9417-916e6c71f2a4</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>b5ffe9da-6232-45b2-8878-ff6d59663ebd</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f9f33afa-18df-4001-b902-af22172b09c9</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f41cff6a-ef96-412a-88b1-035cd578ec10</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>bf010173-19fa-4baf-b5f4-0aa02758a4ca</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>c9f13830-2d42-4ea7-afff-1a1c3960b124</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    <con:breakPoints><con:testStepId>18313ee5-9be5-461b-bbef-4ac16dc18a16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>629d7ffd-2eeb-46e3-bb04-778428631c99</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c1469165-8392-4ede-ae0c-08bc0ba0118c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ad757a15-193d-485b-b74a-1df88eea7360</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3ea88cd3-2149-4570-b36c-8a9d09686510</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="true" maxResults="0" name="TYPE_GM device CRUD (atomic)" searchProperties="true" id="329ab664-a0b3-48d7-8ca2-2358a5a82da2">
      <con:settings/>
      
      
      
      
      <con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:source/><con:target/><con:properties><con:property><con:name>app.username</con:name><con:value>adminuser</con:value></con:property><con:property><con:name>app.password</con:name><con:value>adminpass</con:value></con:property><con:property><con:name>---------------------------------------create</con:name><con:value/></con:property><con:property><con:name>device.key</con:name><con:value>35</con:value></con:property><con:property><con:name>device.ip</con:name><con:value>192.168.1.7</con:value></con:property><con:property><con:name>device.mac</con:name><con:value>ab:cd:ef:20:34:56</con:value></con:property><con:property><con:name>device.name</con:name><con:value>test-device-json</con:value></con:property><con:property><con:name>device.type</con:name><con:value>TYPE_GM</con:value></con:property><con:property><con:name>device.location</con:name><con:value>1st floor</con:value></con:property><con:property><con:name>device.version</con:name><con:value>1.00</con:value></con:property><con:property><con:name>device.description</con:name><con:value>test-device</con:value></con:property><con:property><con:name>---------------------------------------update</con:name><con:value/></con:property><con:property><con:name>device-update.ip</con:name><con:value>10.10.10.10</con:value></con:property><con:property><con:name>device-update.mac</con:name><con:value>aa:bb:cc:dd:ee:11</con:value></con:property><con:property><con:name>device-update.name</con:name><con:value>updated-device</con:value></con:property><con:property><con:name>device-update.location</con:name><con:value>4th floor</con:value></con:property><con:property><con:name>device-update.description</con:name><con:value>updated test device</con:value></con:property><con:property><con:name>device-update.version</con:name><con:value>2.00</con:value></con:property><con:property><con:name>----------------------------------------defaultParameters</con:name><con:value/></con:property><con:property><con:name>latchActive</con:name><con:value>null</con:value></con:property><con:property><con:name>bPressLapse</con:name><con:value>null</con:value></con:property><con:property><con:name>flickWarn</con:name><con:value>null</con:value></con:property><con:property><con:name>flickReps</con:name><con:value>null</con:value></con:property><con:property><con:name>ledOnColor</con:name><con:value>NONE</con:value></con:property><con:property><con:name>ledOffColor</con:name><con:value>NONE</con:value></con:property><con:property><con:name>pirSens</con:name><con:value>null</con:value></con:property><con:property><con:name>motionMuteDelay</con:name><con:value>null</con:value></con:property><con:property><con:name>noMotionTime</con:name><con:value>null</con:value></con:property><con:property><con:name>luminosity</con:name><con:value>null</con:value></con:property><con:property><con:name>lumFactor</con:name><con:value>null</con:value></con:property><con:property><con:name>mode</con:name><con:value>AUTO_ON_OFF</con:value></con:property><con:property><con:name>switchStatus</con:name><con:value>OFF</con:value></con:property><con:property><con:name>networkOn</con:name><con:value>null</con:value></con:property><con:property><con:name>----------------------------------------updateParameters</con:name><con:value/></con:property><con:property><con:name>latchActive-upd</con:name><con:value>false</con:value></con:property><con:property><con:name>bPressLapse-upd</con:name><con:value>200</con:value></con:property><con:property><con:name>flickWarn-upd</con:name><con:value>true</con:value></con:property><con:property><con:name>flickReps-upd</con:name><con:value>50</con:value></con:property><con:property><con:name>ledOnColor-upd</con:name><con:value>GREEN</con:value></con:property><con:property><con:name>ledOffColor-upd</con:name><con:value>AMBER</con:value></con:property><con:property><con:name>pirSens-upd</con:name><con:value>200</con:value></con:property><con:property><con:name>motionMuteDelay-upd</con:name><con:value>200</con:value></con:property><con:property><con:name>noMotionTime-upd</con:name><con:value>200</con:value></con:property><con:property><con:name>luminosity-upd</con:name><con:value>200</con:value></con:property><con:property><con:name>lumFactor-upd</con:name><con:value>5</con:value></con:property><con:property><con:name>mode-upd</con:name><con:value>AUTO_ON_OFF</con:value></con:property><con:property><con:name>switchStatus-upd</con:name><con:value>AUTO</con:value></con:property><con:property><con:name>networkOn-upd</con:name><con:value>true</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="create device">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create device" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"${device.ip}",
   "devMac":"${device.mac}",
   "devType":"${device.type}",
   "devName":"${device.name}",
   "devLocation":"${device-update.location}",
   "firmwareVersion":"${device-update.version}",
   "devDescription":"${device-update.description}"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid device IP returned"><con:configuration><path>//*:Response/*:devIp</path><content>${device.ip}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device MAC returned"><con:configuration><path>//*:Response/*:devMac</path><content>${device.mac}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device name returned"><con:configuration><path>//*:Response/*:devName</path><content>${device.name}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device type returned"><con:configuration><path>//*:Response/*:devType</path><content>${device.type}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;latchActive&quot; value returned"><con:configuration><path>//*:Response/*:latchActive/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;bPressLapse&quot; value returned"><con:configuration><path>//*:Response/*:bPressLapse/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;flickWarn&quot; value returned"><con:configuration><path>//*:Response/*:flickWarn/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;flickReps&quot; value returned"><con:configuration><path>//*:Response/*:flickReps/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;ledOnColor&quot; value returned"><con:configuration><path>//*:Response/*:ledOnColor</path><content>NONE</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;ledOffColor&quot; value returned"><con:configuration><path>//*:Response/*:ledOffColor</path><content>NONE</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;pirSens&quot; value returned"><con:configuration><path>//*:Response/*:pirSens/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;motionMuteDelay&quot; value returned"><con:configuration><path>//*:Response/*:motionMuteDelay/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;networkOn&quot; value returned"><con:configuration><path>//*:Response/*:networkOn/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;switchStatus&quot; value returned"><con:configuration><path>//*:Response/*:switchStatus</path><content>OFF</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;noMotionTime&quot; value returned"><con:configuration><path>//*:Response/*:noMotionTime/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;luminosity&quot; value returned"><con:configuration><path>//*:Response/*:luminosity/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;lumFactor&quot; value returned"><con:configuration><path>//*:Response/*:lumFactor/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;mode&quot; value returned"><con:configuration><path>//*:Response/*:mode</path><content>AUTO_ON_OFF</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      <con:testStep type="transfer" name="transfer key"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>primaryKey</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>create device</con:sourceStep><con:sourcePath>//*:Response/*:primaryKey</con:sourcePath><con:targetType>device.key</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="validate create">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="validate create" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/${device.key}</con:endpoint>
          <con:request/>
          
          
          <con:assertion type="XPath Match" name="valid primary key returned"><con:configuration><path>//*:Response/*:primaryKey</path><content>${device.key}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid IP returned"><con:configuration><path>//*:Response/*:devIp</path><content>${device.ip}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid MAC returned"><con:configuration><path>//*:Response/*:devMac</path><content>${device.mac}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device name returned"><con:configuration><path>//*:Response/*:devName</path><content>${device.name}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device type returned"><con:configuration><path>//*:Response/*:devType</path><content>${device.type}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;latchActive&quot; value returned"><con:configuration><path>//*:Response/*:latchActive/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;bPressLapse&quot; value returned"><con:configuration><path>//*:Response/*:bPressLapse/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;flickWarn&quot; value returned"><con:configuration><path>//*:Response/*:flickWarn/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;flickReps&quot; value returned"><con:configuration><path>//*:Response/*:flickReps/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;ledOnColor&quot; value returned"><con:configuration><path>//*:Response/*:ledOnColor</path><content>${ledOnColor}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;ledOffColor&quot; value returned"><con:configuration><path>//*:Response/*:ledOffColor</path><content>${ledOffColor}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;pirSens&quot; value returned"><con:configuration><path>//*:Response/*:pirSens/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;motionMuteDelay&quot; value returned"><con:configuration><path>//*:Response/*:motionMuteDelay/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;noMotionTime&quot; value returned"><con:configuration><path>//*:Response/*:noMotionTime/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;luminosity&quot; value returned"><con:configuration><path>//*:Response/*:luminosity/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;lumFactor&quot; value returned"><con:configuration><path>//*:Response/*:lumFactor/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;mode&quot; value returned"><con:configuration><path>//*:Response/*:mode</path><content>${mode}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;switchStatus&quot; value returned"><con:configuration><path>//*:Response/*:switchStatus</path><content>${switchStatus}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;networkOn&quot; value returned"><con:configuration><path>//*:Response/*:networkOn/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="update device">
        <con:settings/>
        <con:config method="PUT" xsi:type="con:HttpRequest" name="update device" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/${device.key}</con:endpoint>
          <con:request>{
   "primaryKey":"${device.key}",
   "devIp":"${device-update.ip}",
   "devMac":"${device-update.mac}",
   "devType":"${device.type}",
   "devName":"${device-update.name}",
   "devLocation":"${device-update.location}",
   "firmwareVersion":"${device-update.version}",
   "devDescription":"${device-update.description}"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid device ip returned"><con:configuration><path>//*:Response/*:devIp</path><content>${device-update.ip}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device mac returned"><con:configuration><path>//*:Response/*:devMac</path><content>${device-update.mac}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device name returned"><con:configuration><path>//*:Response/*:devName</path><content>${device-update.name}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device type returned"><con:configuration><path>//*:Response/*:devType</path><content>${device.type}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device description returned"><con:configuration><path>//*:Response/*:devDescription</path><content>${device-update.description}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device firmwareVersion returned"><con:configuration><path>//*:Response/*:firmwareVersion</path><content>${device-update.version}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device devLocation returned"><con:configuration><path>//*:Response/*:devLocation</path><content>${device-update.location}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="validate update">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="validate update" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/${device.key}</con:endpoint>
          <con:request/>
          
          
          <con:assertion type="XPath Match" name="valid primary key returned"><con:configuration><path>//*:Response/*:primaryKey</path><content>${device.key}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid IP returned"><con:configuration><path>//*:Response/*:devIp</path><content>${device-update.ip}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid MAC returned"><con:configuration><path>//*:Response/*:devMac</path><content>${device-update.mac}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device name returned"><con:configuration><path>//*:Response/*:devName</path><content>${device-update.name}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device type returned"><con:configuration><path>//*:Response/*:devType</path><content>${device.type}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;latchActive&quot; value returned"><con:configuration><path>//*:Response/*:latchActive/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;bPressLapse&quot; value returned"><con:configuration><path>//*:Response/*:bPressLapse/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;flickWarn&quot; value returned"><con:configuration><path>//*:Response/*:flickWarn/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;flickReps&quot; value returned"><con:configuration><path>//*:Response/*:flickReps/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;ledOnColor&quot; value returned"><con:configuration><path>//*:Response/*:ledOnColor</path><content>${ledOnColor}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;ledOffColor&quot; value returned"><con:configuration><path>//*:Response/*:ledOffColor</path><content>${ledOffColor}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;pirSens&quot; value returned"><con:configuration><path>//*:Response/*:pirSens/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;motionMuteDelay&quot; value returned"><con:configuration><path>//*:Response/*:motionMuteDelay/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;noMotionTime&quot; value returned"><con:configuration><path>//*:Response/*:noMotionTime/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;luminosity&quot; value returned"><con:configuration><path>//*:Response/*:luminosity/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;lumFactor&quot; value returned"><con:configuration><path>//*:Response/*:lumFactor/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;mode&quot; value returned"><con:configuration><path>//*:Response/*:mode</path><content>${mode}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;switchStatus&quot; value returned"><con:configuration><path>//*:Response/*:switchStatus</path><content>${switchStatus}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;networkOn&quot; value returned"><con:configuration><path>//*:Response/*:networkOn/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="delete device">
        <con:settings/>
        <con:config method="DELETE" xsi:type="con:HttpRequest" name="delete device" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/${device.key}</con:endpoint>
          <con:request>{
   "id":"",
   "name":"updated contact",
   "address":"updated address",
   "gender":"F",
   "dob":"2001-04-16",
   "email":"updated-test@email.com",
   "mobile":"5145145111",
   "phone":"5145145121"
}</con:request>
          
          
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Code returned"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="validate delete">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="validate delete" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/${device.key}</con:endpoint>
          <con:request/>
          
          
          <con:assertion type="XPath Match" name="valid error message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>Device with primarykey '${device.key}' not found</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>16cf45a0-c1af-4c33-8819-0a4ea8276756</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>1342966e-515f-4ec0-9a4c-9d7c51c48542</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>1fb764e4-1840-4cf8-af80-00f7f2c2ece6</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3b800581-6387-44ff-b35b-945408787b7c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>edfd8dac-0104-4730-8cc6-0428d656d0ad</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>6a97c497-6e1b-4cef-b11d-07bf8213303c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f90e9cac-ab42-46ea-98df-be81bfe12c6a</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>0d0d0e4d-ae89-44ba-8a1f-a351325fb2ac</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>335a9d86-8bef-4093-94b6-f118d2b94d26</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>8cc6b576-1299-4a62-a3cb-02dba18d783c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3d446bb9-7f2d-437d-ba9d-538c8544ebca</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>887ed9bf-ef65-4cd6-8d63-fe63059b6114</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5e49a61f-6c85-495d-9b4a-4cb38df93a4c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>ff9f7042-ba4f-437e-a043-8021225671b8</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>d76aa335-29eb-4aa2-91cd-16d24dbca2ba</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>679e8216-4253-4db8-8c5d-14aaa0c542fd</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>71a6c31e-5f1d-4b27-b2a7-44b62806bf64</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5a75c453-48bd-46bc-b1f3-1987ee84ae9b</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5acde369-b009-4471-a36a-146d0396a252</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>fd95a9ee-7a42-47ac-acef-a96cb56e687c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3b97c817-b31a-4a3f-b8ff-409f243cff67</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>e2cdbfdb-8bb7-4def-9ab4-51a9f9aa9b35</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>a461e16f-8295-44f1-8150-5ac5d8413f25</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>8c722f3e-448b-48cb-9417-916e6c71f2a4</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>b5ffe9da-6232-45b2-8878-ff6d59663ebd</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f9f33afa-18df-4001-b902-af22172b09c9</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f41cff6a-ef96-412a-88b1-035cd578ec10</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>bf010173-19fa-4baf-b5f4-0aa02758a4ca</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>c9f13830-2d42-4ea7-afff-1a1c3960b124</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    <con:breakPoints><con:testStepId>18313ee5-9be5-461b-bbef-4ac16dc18a16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>629d7ffd-2eeb-46e3-bb04-778428631c99</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c1469165-8392-4ede-ae0c-08bc0ba0118c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ad757a15-193d-485b-b74a-1df88eea7360</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="true" maxResults="0" name="TYPE_GM device params CRUD" searchProperties="true" id="ade664cc-5c70-4783-b026-ade384dc1aa5">
      <con:settings/>
      
      
      
      
      <con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:source/><con:target/><con:properties><con:property><con:name>app.username</con:name><con:value>adminuser</con:value></con:property><con:property><con:name>app.password</con:name><con:value>adminpass</con:value></con:property><con:property><con:name>---------------------------------------create</con:name><con:value/></con:property><con:property><con:name>device.key</con:name><con:value>36</con:value></con:property><con:property><con:name>device.ip</con:name><con:value>192.168.1.7</con:value></con:property><con:property><con:name>device.mac</con:name><con:value>ab:cd:ef:20:34:56</con:value></con:property><con:property><con:name>device.name</con:name><con:value>test-device-json</con:value></con:property><con:property><con:name>device.type</con:name><con:value>TYPE_GM</con:value></con:property><con:property><con:name>device.location</con:name><con:value>1st floor</con:value></con:property><con:property><con:name>device.version</con:name><con:value>1.00</con:value></con:property><con:property><con:name>device.description</con:name><con:value>test-device</con:value></con:property><con:property><con:name>---------------------------------------update</con:name><con:value/></con:property><con:property><con:name>device-update.ip</con:name><con:value>10.10.10.10</con:value></con:property><con:property><con:name>device-update.mac</con:name><con:value>aa:bb:cc:dd:ee:11</con:value></con:property><con:property><con:name>device-update.name</con:name><con:value>updated-device</con:value></con:property><con:property><con:name>device-update.location</con:name><con:value>4th floor</con:value></con:property><con:property><con:name>device-update.description</con:name><con:value>updated test device</con:value></con:property><con:property><con:name>device-update.version</con:name><con:value>2.00</con:value></con:property><con:property><con:name>----------------------------------------defaultParameters</con:name><con:value/></con:property><con:property><con:name>latchActive</con:name><con:value>null</con:value></con:property><con:property><con:name>bPressLapse</con:name><con:value>null</con:value></con:property><con:property><con:name>flickWarn</con:name><con:value>null</con:value></con:property><con:property><con:name>flickReps</con:name><con:value>null</con:value></con:property><con:property><con:name>ledOnColor</con:name><con:value>NONE</con:value></con:property><con:property><con:name>ledOffColor</con:name><con:value>NONE</con:value></con:property><con:property><con:name>pirSens</con:name><con:value>null</con:value></con:property><con:property><con:name>motionMuteDelay</con:name><con:value>null</con:value></con:property><con:property><con:name>noMotionTime</con:name><con:value>null</con:value></con:property><con:property><con:name>luminosity</con:name><con:value>null</con:value></con:property><con:property><con:name>lumFactor</con:name><con:value>null</con:value></con:property><con:property><con:name>mode</con:name><con:value>AUTO_ON_OFF</con:value></con:property><con:property><con:name>switchStatus</con:name><con:value>OFF</con:value></con:property><con:property><con:name>networkOn</con:name><con:value>null</con:value></con:property><con:property><con:name>----------------------------------------updateParameters</con:name><con:value/></con:property><con:property><con:name>latchActive-upd</con:name><con:value>false</con:value></con:property><con:property><con:name>bPressLapse-upd</con:name><con:value>200</con:value></con:property><con:property><con:name>flickWarn-upd</con:name><con:value>true</con:value></con:property><con:property><con:name>flickReps-upd</con:name><con:value>50</con:value></con:property><con:property><con:name>ledOnColor-upd</con:name><con:value>GREEN</con:value></con:property><con:property><con:name>ledOffColor-upd</con:name><con:value>AMBER</con:value></con:property><con:property><con:name>pirSens-upd</con:name><con:value>200</con:value></con:property><con:property><con:name>motionMuteDelay-upd</con:name><con:value>200</con:value></con:property><con:property><con:name>noMotionTime-upd</con:name><con:value>200</con:value></con:property><con:property><con:name>luminosity-upd</con:name><con:value>200</con:value></con:property><con:property><con:name>lumFactor-upd</con:name><con:value>5</con:value></con:property><con:property><con:name>mode-upd</con:name><con:value>AUTO_ON_OFF</con:value></con:property><con:property><con:name>switchStatus-upd</con:name><con:value>AUTO</con:value></con:property><con:property><con:name>networkOn-upd</con:name><con:value>true</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="create device">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create device" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"${device.ip}",
   "devMac":"${device.mac}",
   "devType":"${device.type}",
   "devName":"${device.name}",
   "devLocation":"${device.location}",
   "firmwareVersion":"${device.version}",
   "devDescription":"${device.description}"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid device IP returned"><con:configuration><path>//*:Response/*:devIp</path><content>${device.ip}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device MAC returned"><con:configuration><path>//*:Response/*:devMac</path><content>${device.mac}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device name returned"><con:configuration><path>//*:Response/*:devName</path><content>${device.name}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device type returned"><con:configuration><path>//*:Response/*:devType</path><content>${device.type}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;firmwareVersion&quot; value returned"><con:configuration><path>//*:Response/*:firmwareVersion</path><content>${device.version}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;bPressLapse&quot; value returned"><con:configuration><path>//*:Response/*:bPressLapse/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;flickReps&quot; value returned"><con:configuration><path>//*:Response/*:flickReps/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;flickWarn&quot; value returned"><con:configuration><path>//*:Response/*:flickWarn/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;latchActive&quot; value returned"><con:configuration><path>//*:Response/*:latchActive/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;networkOn&quot; value returned"><con:configuration><path>//*:Response/*:networkOn/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;switchStatus&quot; value returned"><con:configuration><path>//*:Response/*:switchStatus</path><content>OFF</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;ledOffColor&quot; value returned"><con:configuration><path>//*:Response/*:ledOffColor</path><content>NONE</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;ledOnColor&quot; value returned"><con:configuration><path>//*:Response/*:ledOnColor</path><content>NONE</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;location&quot; value returned"><con:configuration><path>//*:Response/*:devLocation</path><content>${device.location}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      <con:testStep type="transfer" name="transfer key"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>primaryKey</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>create device</con:sourceStep><con:sourcePath>//*:Response/*:primaryKey</con:sourcePath><con:targetType>device.key</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="validate create">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="validate create" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/${device.key}</con:endpoint>
          <con:request/>
          
          
          <con:assertion type="XPath Match" name="valid primary key returned"><con:configuration><path>//*:Response/*:primaryKey</path><content>${device.key}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid IP returned"><con:configuration><path>//*:Response/*:devIp</path><content>${device.ip}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid MAC returned"><con:configuration><path>//*:Response/*:devMac</path><content>${device.mac}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device name returned"><con:configuration><path>//*:Response/*:devName</path><content>${device.name}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device type returned"><con:configuration><path>//*:Response/*:devType</path><content>${device.type}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device location returned"><con:configuration><path>//*:Response/*:devLocation</path><content>${device.location}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device firmware version returned"><con:configuration><path>//*:Response/*:firmwareVersion</path><content>${device.version}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device description returned"><con:configuration><path>//*:Response/*:devDescription</path><content>${device.description}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;latchActive&quot; value returned"><con:configuration><path>//*:Response/*:latchActive/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;bPressLapse&quot; value returned"><con:configuration><path>//*:Response/*:bPressLapse/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;flickWarn&quot; value returned"><con:configuration><path>//*:Response/*:flickWarn/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;flickReps&quot; value returned"><con:configuration><path>//*:Response/*:flickReps/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;networkOn&quot; value returned"><con:configuration><path>//*:Response/*:networkOn/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;switchStatus&quot; value returned"><con:configuration><path>//*:Response/*:switchStatus</path><content>OFF</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;ledOnColor&quot; value returned"><con:configuration><path>//*:Response/*:ledOnColor</path><content>NONE</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid &quot;ledOffColor&quot; value returned"><con:configuration><path>//*:Response/*:ledOffColor</path><content>NONE</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="update device parameters">
        <con:settings/>
        <con:config method="PUT" xsi:type="con:HttpRequest" name="update device parameters" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/params</con:endpoint>
          <con:request>{
   "primaryKey":"${device.key}",
   "devIp":"${device-update.ip}",
   "devMac":"${device-update.mac}",
   "devType":"${device.type}",
   "devName":"${device-update.name}",
   "devLocation":"${device-update.location}",
   "firmwareVersion":"${device-update.version}",
   "devDescription":"${device-update.description}",
   "latchActive": "${latchActive-upd}",
   "bPressLapse": "${bPressLapse-upd}",
   "flickWarn": "${flickWarn-upd}",
   "flickReps": "${flickReps-upd}",
   "ledOnColor": "${ledOnColor-upd}",
   "ledOffColor": "${ledOffColor-upd}",
   "pirSens": "${pirSens-upd}",
   "motionMuteDelay": "${motionMuteDelay-upd}",
   "noMotionTime": "${noMotionTime-upd}",
   "luminosity": "${luminosity-upd}",
   "lumFactor": "${lumFactor-upd}",
   "mode": "${mode-upd}",
   "switchStatus": "${switchStatus-upd}",
   "networkOn": "${networkOn-upd}"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid device ip returned"><con:configuration><path>//*:Response/*:devIp</path><content>${device-update.ip}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device mac returned"><con:configuration><path>//*:Response/*:devMac</path><content>${device-update.mac}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device name returned"><con:configuration><path>//*:Response/*:devName</path><content>${device-update.name}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device type returned"><con:configuration><path>//*:Response/*:devType</path><content>${device.type}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device location returned"><con:configuration><path>//*:Response/*:devLocation</path><content>${device-update.location}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device firmware version returned"><con:configuration><path>//*:Response/*:firmwareVersion</path><content>${device-update.version}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device description returned"><con:configuration><path>//*:Response/*:devDescription</path><content>${device-update.description}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid latchActive value returned"><con:configuration><path>//*:Response/*:latchActive</path><content>${latchActive-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid bPressLapse value returned"><con:configuration><path>//*:Response/*:bPressLapse</path><content>${bPressLapse-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid flickWarn value returned"><con:configuration><path>//*:Response/*:flickWarn</path><content>${flickWarn-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid flickReps value returned"><con:configuration><path>//*:Response/*:flickReps</path><content>${flickReps-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid ledOnColor value returned"><con:configuration><path>//*:Response/*:ledOnColor</path><content>${ledOnColor-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid ledOffColor value returned"><con:configuration><path>//*:Response/*:ledOffColor</path><content>${ledOffColor-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid pirSens value returned"><con:configuration><path>//*:Response/*:pirSens</path><content>${pirSens-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid motionMuteDelay value returned"><con:configuration><path>//*:Response/*:motionMuteDelay</path><content>${motionMuteDelay-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid noMotionTime value returned"><con:configuration><path>//*:Response/*:noMotionTime</path><content>${noMotionTime-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid luminosity value returned"><con:configuration><path>//*:Response/*:luminosity</path><content>${luminosity-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid lumFactor value returned"><con:configuration><path>//*:Response/*:lumFactor</path><content>${lumFactor-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid mode value returned"><con:configuration><path>//*:Response/*:mode</path><content>${mode-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid switchStatus value returned"><con:configuration><path>//*:Response/*:switchStatus</path><content>${switchStatus-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid networkOn value returned"><con:configuration><path>//*:Response/*:networkOn</path><content>${networkOn-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="validate update">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="validate update" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/${device.key}</con:endpoint>
          <con:request>{
   "primaryKey":"${device.key}",
   "devIp":"${device-update.ip}",
   "devMac":"${device-update.mac}",
   "devType":"${device.type}",
   "devName":"${device-update.name}",
   "devLocation":"${device-update.location}",
   "firmwareVersion":"${device-update.version}",
   "devDescription":"${device-update.description}",
   "latchActive": "${latchActive-upd}",
   "bPressLapse": "${bPressLapse-upd}",
   "flickWarn": "${flickWarn-upd}",
   "flickReps": "${flickReps-upd}",
   "ledOnColor": "${ledOnColor-upd}",
   "ledOffColor": "${ledOffColor-upd}",
   "pirSens": "${pirSens-upd}",
   "motionMuteDelay": "${motionMuteDelay-upd}",
   "noMotionTime": "${noMotionTime-upd}",
   "luminosity": "${luminosity-upd}",
   "lumFactor": "${lumFactor-upd}",
   "mode": "${mode-upd}",
   "switchStatus": "${switchStatus-upd}",
   "networkOn": "${networkOn-upd}"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid device ip returned"><con:configuration><path>//*:Response/*:devIp</path><content>${device-update.ip}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device mac returned"><con:configuration><path>//*:Response/*:devMac</path><content>${device-update.mac}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device name returned"><con:configuration><path>//*:Response/*:devName</path><content>${device-update.name}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device type returned"><con:configuration><path>//*:Response/*:devType</path><content>${device.type}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device location returned"><con:configuration><path>//*:Response/*:devLocation</path><content>${device-update.location}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device firmware version returned"><con:configuration><path>//*:Response/*:firmwareVersion</path><content>${device-update.version}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device description returned"><con:configuration><path>//*:Response/*:devDescription</path><content>${device-update.description}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid latchActive value returned"><con:configuration><path>//*:Response/*:latchActive</path><content>${latchActive-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid bPressLapse value returned"><con:configuration><path>//*:Response/*:bPressLapse</path><content>${bPressLapse-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid flickWarn value returned"><con:configuration><path>//*:Response/*:flickWarn</path><content>${flickWarn-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid flickReps value returned"><con:configuration><path>//*:Response/*:flickReps</path><content>${flickReps-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid ledOnColor value returned"><con:configuration><path>//*:Response/*:ledOnColor</path><content>${ledOnColor-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid ledOffColor value returned"><con:configuration><path>//*:Response/*:ledOffColor</path><content>${ledOffColor-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid pirSens value returned"><con:configuration><path>//*:Response/*:pirSens</path><content>${pirSens-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid motionMuteDelay value returned"><con:configuration><path>//*:Response/*:motionMuteDelay</path><content>${motionMuteDelay-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid noMotionTime value returned"><con:configuration><path>//*:Response/*:noMotionTime</path><content>${noMotionTime-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid luminosity value returned"><con:configuration><path>//*:Response/*:luminosity</path><content>${luminosity-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid lumFactor value returned"><con:configuration><path>//*:Response/*:lumFactor</path><content>${lumFactor-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid mode value returned"><con:configuration><path>//*:Response/*:mode</path><content>${mode-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid switchStatus value returned"><con:configuration><path>//*:Response/*:switchStatus</path><content>${switchStatus-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid networkOn value returned"><con:configuration><path>//*:Response/*:networkOn</path><content>${networkOn-upd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="delete device">
        <con:settings/>
        <con:config method="DELETE" xsi:type="con:HttpRequest" name="delete device" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/${device.key}</con:endpoint>
          <con:request>{
   "id":"",
   "name":"updated contact",
   "address":"updated address",
   "gender":"F",
   "dob":"2001-04-16",
   "email":"updated-test@email.com",
   "mobile":"5145145111",
   "phone":"5145145121"
}</con:request>
          
          
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Code returned"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="validate delete">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="validate delete" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/${device.key}</con:endpoint>
          <con:request/>
          
          
          <con:assertion type="XPath Match" name="valid error message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>Device with primarykey '${device.key}' not found</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>16cf45a0-c1af-4c33-8819-0a4ea8276756</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>1342966e-515f-4ec0-9a4c-9d7c51c48542</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>1fb764e4-1840-4cf8-af80-00f7f2c2ece6</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3b800581-6387-44ff-b35b-945408787b7c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>edfd8dac-0104-4730-8cc6-0428d656d0ad</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>6a97c497-6e1b-4cef-b11d-07bf8213303c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f90e9cac-ab42-46ea-98df-be81bfe12c6a</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>0d0d0e4d-ae89-44ba-8a1f-a351325fb2ac</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>335a9d86-8bef-4093-94b6-f118d2b94d26</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>8cc6b576-1299-4a62-a3cb-02dba18d783c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3d446bb9-7f2d-437d-ba9d-538c8544ebca</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>887ed9bf-ef65-4cd6-8d63-fe63059b6114</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5e49a61f-6c85-495d-9b4a-4cb38df93a4c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>ff9f7042-ba4f-437e-a043-8021225671b8</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>d76aa335-29eb-4aa2-91cd-16d24dbca2ba</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>679e8216-4253-4db8-8c5d-14aaa0c542fd</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>71a6c31e-5f1d-4b27-b2a7-44b62806bf64</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5a75c453-48bd-46bc-b1f3-1987ee84ae9b</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5acde369-b009-4471-a36a-146d0396a252</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>fd95a9ee-7a42-47ac-acef-a96cb56e687c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3b97c817-b31a-4a3f-b8ff-409f243cff67</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>e2cdbfdb-8bb7-4def-9ab4-51a9f9aa9b35</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>a461e16f-8295-44f1-8150-5ac5d8413f25</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>8c722f3e-448b-48cb-9417-916e6c71f2a4</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>b5ffe9da-6232-45b2-8878-ff6d59663ebd</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f9f33afa-18df-4001-b902-af22172b09c9</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f41cff6a-ef96-412a-88b1-035cd578ec10</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>bf010173-19fa-4baf-b5f4-0aa02758a4ca</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>c9f13830-2d42-4ea7-afff-1a1c3960b124</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    <con:breakPoints><con:testStepId>18313ee5-9be5-461b-bbef-4ac16dc18a16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>629d7ffd-2eeb-46e3-bb04-778428631c99</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c1469165-8392-4ede-ae0c-08bc0ba0118c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ad757a15-193d-485b-b74a-1df88eea7360</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3ea88cd3-2149-4570-b36c-8a9d09686510</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="true" maxResults="0" name="TYPE_F constraint validation" searchProperties="true" id="d9ca3f33-04b7-40e9-8e31-08bf863b356d">
      <con:settings/>
      
      
      
      
      <con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>app.username</con:name><con:value>adminuser</con:value></con:property><con:property><con:name>app.password</con:name><con:value>adminpass</con:value></con:property><con:property><con:name>---------------------------------------json</con:name><con:value/></con:property><con:property><con:name>device.key</con:name><con:value>37</con:value></con:property><con:property><con:name>device.ip</con:name><con:value>192.168.1.7</con:value></con:property><con:property><con:name>device.mac</con:name><con:value>ab:cd:ef:20:34:56</con:value></con:property><con:property><con:name>device.name</con:name><con:value>test-device-json</con:value></con:property><con:property><con:name>device.type</con:name><con:value>TYPE_F</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="create with missing ip">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create with missing ip" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"",
   "devMac":"${device.mac}",
   "devType":"${device.type}",
   "devName":"${device.name}",
   "devDescription":"this is a test device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid entity returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:entity</path><content>com.app.domain.model.TypeF</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid error message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>size must be between 7 and 15</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid message key returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:messageKey</path><content>{javax.validation.constraints.Size.message}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid property returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:property</path><content>devIp</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      <con:testStep type="httprequest" name="create with wrong (short) ip">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create with wrong (short) ip" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"1.1.1.",
   "devMac":"${device.mac}",
   "devType":"${device.type}",
   "devName":"${device.name}",
   "devDescription":"this is a test device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid entity returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:entity</path><content>com.app.domain.model.TypeF</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid error message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>size must be between 7 and 15</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid message key returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:messageKey</path><content>{javax.validation.constraints.Size.message}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid property returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:property</path><content>devIp</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="create with wrong (long) ip">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create with wrong (long) ip" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"255.255.255.2551",
   "devMac":"${device.mac}",
   "devType":"${device.type}",
   "devName":"${device.name}",
   "devDescription":"this is a test device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid entity returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:entity</path><content>com.app.domain.model.TypeF</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid error message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>size must be between 7 and 15</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid message key returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:messageKey</path><content>{javax.validation.constraints.Size.message}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid property returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:property</path><content>devIp</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="create with missing mac">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create with missing mac" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"${device.ip}",
   "devMac":"",
   "devType":"${device.type}",
   "devName":"${device.name}",
   "devDescription":"this is a test device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid entity returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:entity</path><content>com.app.domain.model.TypeF</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid error message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>size must be between 17 and 17</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid message key returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:messageKey</path><content>{javax.validation.constraints.Size.message}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid property returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:property</path><content>devMac</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="create with wrong (short) mac">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create with wrong (short) mac" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"${device.ip}",
   "devMac":"11:22:33:44:55:6",
   "devType":"${device.type}",
   "devName":"${device.name}",
   "devDescription":"this is a test device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid entity returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:entity</path><content>com.app.domain.model.TypeF</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid error message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>size must be between 17 and 17</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid message key returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:messageKey</path><content>{javax.validation.constraints.Size.message}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid property returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:property</path><content>devMac</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="create with wrong (long) mac">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create with wrong (long) mac" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"${device.ip}",
   "devMac":"11:22:33:44:55:66:",
   "devType":"${device.type}",
   "devName":"${device.name}",
   "devDescription":"this is a test device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid entity returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:entity</path><content>com.app.domain.model.TypeF</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid error message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>size must be between 17 and 17</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid message key returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:messageKey</path><content>{javax.validation.constraints.Size.message}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid property returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:property</path><content>devMac</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="create with missing type">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create with missing type" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"${device.ip}",
   "devMac":"${device.mac}",
   "devName":"${device.name}",
   "devDescription":"this is a test device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid error message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>Device: missing device type</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="create with wrong type (revise)" disabled="true">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create with wrong type (revise)" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"${device.ip}",
   "devMac":"${device.mac}",
   "devType":"wrong-type",
   "devName":"${device.name}",
   "devDescription":"this is a test device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid error message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>Can not construct instance of com.app.domain.model.enums.DeviceType from String value 'wrong-type': value not one of declared Enum instance names
 at [Source: org.apache.catalina.connector.CoyoteInputStream@38ef9337; line: 4, column: 32] (through reference chain: com.app.domain.model.Device["devType"])</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>true</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid exception name returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:extendedInfo</path><content>HttpMessageNotReadableException</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="create with missing name">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create with missing name" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"${device.ip}",
   "devMac":"${device.mac}",
   "devType":"${device.type}",
   "devDescription":"this is a test device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid entity returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:entity</path><content>com.app.domain.model.TypeF</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid error message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>may not be null</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid message key returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:messageKey</path><content>{javax.validation.constraints.NotNull.message}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid property returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:property</path><content>devName</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="create with name>20">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create with name>20" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"${device.ip}",
   "devMac":"${device.mac}",
   "devType":"${device.type}",
   "devName":"veeeeery_looooooong_deeevice_naaaaaaame",
   "devDescription":"this is a test device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid entity returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:entity</path><content>com.app.domain.model.TypeF</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid error message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>size must be between 0 and 20</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid message key returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:messageKey</path><content>{javax.validation.constraints.Size.message}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid property returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:property</path><content>devName</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="create valid device">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create valid device" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"${device.ip}",
   "devMac":"${device.mac}",
   "devType":"${device.type}",
   "devName":"${device.name}",
   "devDescription":"this is a test device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid ip returned"><con:configuration><path>//*:Response/*:devIp</path><content>${device.ip}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid mac returned"><con:configuration><path>//*:Response/*:devMac</path><content>${device.mac}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid name returned"><con:configuration><path>//*:Response/*:devName</path><content>${device.name}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="transfer" name="transfer key"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>primaryKey1</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>create valid device</con:sourceStep><con:sourcePath>//*:Response/*:primaryKey</con:sourcePath><con:targetType>device.key</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="create with existing ip">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create with existing ip" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"${device.ip}",
   "devMac":"11:22:33:44:55:66",
   "devType":"TYPE_F",
   "devName":"test1",
   "devDescription":"this is a test device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid exception cought"><con:configuration><path>//*:Fault/*:violations/*:e/*:extendedInfo</path><content>org.springframework.dao.DataIntegrityViolationException</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>Duplicate entry '192.168.1.7' for key 'devIp'</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="create with existing mac">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create with existing mac" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"123.123.123.123",
   "devMac":"${device.mac}",
   "devType":"TYPE_F",
   "devName":"test1",
   "devDescription":"this is a test device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid exception cought"><con:configuration><path>//*:Fault/*:violations/*:e/*:extendedInfo</path><content>org.springframework.dao.DataIntegrityViolationException</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>Duplicate entry 'ab:cd:ef:20:34:56' for key 'devMac'</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="create with existing name">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create with existing name" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"123.123.123.123",
   "devMac":"12:34:56:78:91:bb",
   "devType":"TYPE_F",
   "devName":"${device.name}",
   "devDescription":"this is a test device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid exception cought"><con:configuration><path>//*:Fault/*:violations/*:e/*:extendedInfo</path><content>org.springframework.dao.DataIntegrityViolationException</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>Duplicate entry 'test-device-json' for key 'devName'</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="delete valid device">
        <con:settings/>
        <con:config method="DELETE" xsi:type="con:HttpRequest" name="delete valid device" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/${device.key}</con:endpoint>
          <con:request>{
   "id":"",
   "name":"updated contact",
   "address":"updated address",
   "gender":"F",
   "dob":"2001-04-16",
   "email":"updated-test@email.com",
   "mobile":"5145145111",
   "phone":"5145145121"
}</con:request>
          
          
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Code returned"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>16cf45a0-c1af-4c33-8819-0a4ea8276756</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>1342966e-515f-4ec0-9a4c-9d7c51c48542</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>1fb764e4-1840-4cf8-af80-00f7f2c2ece6</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3b800581-6387-44ff-b35b-945408787b7c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>edfd8dac-0104-4730-8cc6-0428d656d0ad</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>6a97c497-6e1b-4cef-b11d-07bf8213303c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f90e9cac-ab42-46ea-98df-be81bfe12c6a</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>0d0d0e4d-ae89-44ba-8a1f-a351325fb2ac</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>335a9d86-8bef-4093-94b6-f118d2b94d26</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>8cc6b576-1299-4a62-a3cb-02dba18d783c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3d446bb9-7f2d-437d-ba9d-538c8544ebca</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>887ed9bf-ef65-4cd6-8d63-fe63059b6114</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5e49a61f-6c85-495d-9b4a-4cb38df93a4c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>ff9f7042-ba4f-437e-a043-8021225671b8</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>d76aa335-29eb-4aa2-91cd-16d24dbca2ba</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>679e8216-4253-4db8-8c5d-14aaa0c542fd</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>71a6c31e-5f1d-4b27-b2a7-44b62806bf64</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5a75c453-48bd-46bc-b1f3-1987ee84ae9b</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5acde369-b009-4471-a36a-146d0396a252</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>fd95a9ee-7a42-47ac-acef-a96cb56e687c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3b97c817-b31a-4a3f-b8ff-409f243cff67</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>e2cdbfdb-8bb7-4def-9ab4-51a9f9aa9b35</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>a461e16f-8295-44f1-8150-5ac5d8413f25</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>8c722f3e-448b-48cb-9417-916e6c71f2a4</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>b5ffe9da-6232-45b2-8878-ff6d59663ebd</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f9f33afa-18df-4001-b902-af22172b09c9</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f41cff6a-ef96-412a-88b1-035cd578ec10</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>bf010173-19fa-4baf-b5f4-0aa02758a4ca</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>c9f13830-2d42-4ea7-afff-1a1c3960b124</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    <con:breakPoints><con:testStepId>18313ee5-9be5-461b-bbef-4ac16dc18a16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>629d7ffd-2eeb-46e3-bb04-778428631c99</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c1469165-8392-4ede-ae0c-08bc0ba0118c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ad757a15-193d-485b-b74a-1df88eea7360</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7d3b97a6-ad1c-4ec9-a9a4-4e91f2c5947d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="true" maxResults="0" name="TYPE_G constraint validation" searchProperties="true" id="f9c455f1-962c-4c5e-904c-0cf33702219b">
      <con:settings/>
      
      
      
      
      <con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>app.username</con:name><con:value>adminuser</con:value></con:property><con:property><con:name>app.password</con:name><con:value>adminpass</con:value></con:property><con:property><con:name>---------------------------------------json</con:name><con:value/></con:property><con:property><con:name>device.key</con:name><con:value>41</con:value></con:property><con:property><con:name>device.ip</con:name><con:value>192.168.1.7</con:value></con:property><con:property><con:name>device.mac</con:name><con:value>ab:cd:ef:20:34:56</con:value></con:property><con:property><con:name>device.name</con:name><con:value>test-device-json</con:value></con:property><con:property><con:name>device.type</con:name><con:value>TYPE_G</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="create with missing ip">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create with missing ip" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"",
   "devMac":"${device.mac}",
   "devType":"${device.type}",
   "devName":"${device.name}",
   "devDescription":"this is a test device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid entity returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:entity</path><content>com.app.domain.model.TypeG</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid error message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>size must be between 7 and 15</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid message key returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:messageKey</path><content>{javax.validation.constraints.Size.message}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid property returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:property</path><content>devIp</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      <con:testStep type="httprequest" name="create with wrong (short) ip">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create with wrong (short) ip" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"1.1.1.",
   "devMac":"${device.mac}",
   "devType":"${device.type}",
   "devName":"${device.name}",
   "devDescription":"this is a test device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid entity returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:entity</path><content>com.app.domain.model.TypeG</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid error message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>size must be between 7 and 15</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid message key returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:messageKey</path><content>{javax.validation.constraints.Size.message}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid property returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:property</path><content>devIp</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="create with wrong (long) ip">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create with wrong (long) ip" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"255.255.255.2551",
   "devMac":"${device.mac}",
   "devType":"${device.type}",
   "devName":"${device.name}",
   "devDescription":"this is a test device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid entity returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:entity</path><content>com.app.domain.model.TypeG</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid error message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>size must be between 7 and 15</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid message key returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:messageKey</path><content>{javax.validation.constraints.Size.message}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid property returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:property</path><content>devIp</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="create with missing mac">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create with missing mac" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"${device.ip}",
   "devMac":"",
   "devType":"${device.type}",
   "devName":"${device.name}",
   "devDescription":"this is a test device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid entity returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:entity</path><content>com.app.domain.model.TypeG</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid error message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>size must be between 17 and 17</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid message key returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:messageKey</path><content>{javax.validation.constraints.Size.message}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid property returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:property</path><content>devMac</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="create with wrong (short) mac">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create with wrong (short) mac" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"${device.ip}",
   "devMac":"11:22:33:44:55:6",
   "devType":"${device.type}",
   "devName":"${device.name}",
   "devDescription":"this is a test device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid entity returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:entity</path><content>com.app.domain.model.TypeG</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid error message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>size must be between 17 and 17</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid message key returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:messageKey</path><content>{javax.validation.constraints.Size.message}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid property returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:property</path><content>devMac</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="create with wrong (long) mac">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create with wrong (long) mac" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"${device.ip}",
   "devMac":"11:22:33:44:55:66:",
   "devType":"${device.type}",
   "devName":"${device.name}",
   "devDescription":"this is a test device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid entity returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:entity</path><content>com.app.domain.model.TypeG</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid error message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>size must be between 17 and 17</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid message key returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:messageKey</path><content>{javax.validation.constraints.Size.message}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid property returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:property</path><content>devMac</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="create with missing type">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create with missing type" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"${device.ip}",
   "devMac":"${device.mac}",
   "devName":"${device.name}",
   "devDescription":"this is a test device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid error message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>Device: missing device type</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="create with wrong type (revise)" disabled="true">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create with wrong type (revise)" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"${device.ip}",
   "devMac":"${device.mac}",
   "devType":"wrong-type",
   "devName":"${device.name}",
   "devDescription":"this is a test device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid error message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>Can not construct instance of com.app.domain.model.enums.DeviceType from String value 'wrong-type': value not one of declared Enum instance names
 at [Source: org.apache.catalina.connector.CoyoteInputStream@38ef9337; line: 4, column: 32] (through reference chain: com.app.domain.model.Device["devType"])</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>true</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid exception name returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:extendedInfo</path><content>HttpMessageNotReadableException</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="create with missing name">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create with missing name" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"${device.ip}",
   "devMac":"${device.mac}",
   "devType":"${device.type}",
   "devDescription":"this is a test device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid entity returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:entity</path><content>com.app.domain.model.TypeG</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid error message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>may not be null</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid message key returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:messageKey</path><content>{javax.validation.constraints.NotNull.message}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid property returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:property</path><content>devName</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="create with name>20">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create with name>20" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"${device.ip}",
   "devMac":"${device.mac}",
   "devType":"${device.type}",
   "devName":"veeeeery_looooooong_deeevice_naaaaaaame",
   "devDescription":"this is a test device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid entity returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:entity</path><content>com.app.domain.model.TypeG</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid error message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>size must be between 0 and 20</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid message key returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:messageKey</path><content>{javax.validation.constraints.Size.message}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid property returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:property</path><content>devName</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="create valid device">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create valid device" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"${device.ip}",
   "devMac":"${device.mac}",
   "devType":"${device.type}",
   "devName":"${device.name}",
   "devDescription":"this is a test device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid ip returned"><con:configuration><path>//*:Response/*:devIp</path><content>${device.ip}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid mac returned"><con:configuration><path>//*:Response/*:devMac</path><content>${device.mac}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid name returned"><con:configuration><path>//*:Response/*:devName</path><content>${device.name}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="transfer" name="transfer key"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>primaryKey1</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>create valid device</con:sourceStep><con:sourcePath>//*:Response/*:primaryKey</con:sourcePath><con:targetType>device.key</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="create with existing ip">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create with existing ip" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"${device.ip}",
   "devMac":"11:22:33:44:55:66",
   "devType":"TYPE_F",
   "devName":"test1",
   "devDescription":"this is a test device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid exception cought"><con:configuration><path>//*:Fault/*:violations/*:e/*:extendedInfo</path><content>org.springframework.dao.DataIntegrityViolationException</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>Duplicate entry '192.168.1.7' for key 'devIp'</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="create with existing mac">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create with existing mac" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"123.123.123.123",
   "devMac":"${device.mac}",
   "devType":"TYPE_F",
   "devName":"test1",
   "devDescription":"this is a test device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid exception cought"><con:configuration><path>//*:Fault/*:violations/*:e/*:extendedInfo</path><content>org.springframework.dao.DataIntegrityViolationException</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>Duplicate entry 'ab:cd:ef:20:34:56' for key 'devMac'</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="create with existing name">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create with existing name" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"123.123.123.123",
   "devMac":"12:34:56:78:91:bb",
   "devType":"TYPE_F",
   "devName":"${device.name}",
   "devDescription":"this is a test device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid exception cought"><con:configuration><path>//*:Fault/*:violations/*:e/*:extendedInfo</path><content>org.springframework.dao.DataIntegrityViolationException</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>Duplicate entry 'test-device-json' for key 'devName'</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="delete valid device">
        <con:settings/>
        <con:config method="DELETE" xsi:type="con:HttpRequest" name="delete valid device" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/${device.key}</con:endpoint>
          <con:request>{
   "id":"",
   "name":"updated contact",
   "address":"updated address",
   "gender":"F",
   "dob":"2001-04-16",
   "email":"updated-test@email.com",
   "mobile":"5145145111",
   "phone":"5145145121"
}</con:request>
          
          
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Code returned"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>16cf45a0-c1af-4c33-8819-0a4ea8276756</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>1342966e-515f-4ec0-9a4c-9d7c51c48542</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>1fb764e4-1840-4cf8-af80-00f7f2c2ece6</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3b800581-6387-44ff-b35b-945408787b7c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>edfd8dac-0104-4730-8cc6-0428d656d0ad</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>6a97c497-6e1b-4cef-b11d-07bf8213303c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f90e9cac-ab42-46ea-98df-be81bfe12c6a</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>0d0d0e4d-ae89-44ba-8a1f-a351325fb2ac</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>335a9d86-8bef-4093-94b6-f118d2b94d26</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>8cc6b576-1299-4a62-a3cb-02dba18d783c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3d446bb9-7f2d-437d-ba9d-538c8544ebca</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>887ed9bf-ef65-4cd6-8d63-fe63059b6114</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5e49a61f-6c85-495d-9b4a-4cb38df93a4c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>ff9f7042-ba4f-437e-a043-8021225671b8</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>d76aa335-29eb-4aa2-91cd-16d24dbca2ba</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>679e8216-4253-4db8-8c5d-14aaa0c542fd</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>71a6c31e-5f1d-4b27-b2a7-44b62806bf64</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5a75c453-48bd-46bc-b1f3-1987ee84ae9b</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5acde369-b009-4471-a36a-146d0396a252</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>fd95a9ee-7a42-47ac-acef-a96cb56e687c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3b97c817-b31a-4a3f-b8ff-409f243cff67</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>e2cdbfdb-8bb7-4def-9ab4-51a9f9aa9b35</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>a461e16f-8295-44f1-8150-5ac5d8413f25</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>8c722f3e-448b-48cb-9417-916e6c71f2a4</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>b5ffe9da-6232-45b2-8878-ff6d59663ebd</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f9f33afa-18df-4001-b902-af22172b09c9</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f41cff6a-ef96-412a-88b1-035cd578ec10</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>bf010173-19fa-4baf-b5f4-0aa02758a4ca</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>c9f13830-2d42-4ea7-afff-1a1c3960b124</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    <con:breakPoints><con:testStepId>18313ee5-9be5-461b-bbef-4ac16dc18a16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>629d7ffd-2eeb-46e3-bb04-778428631c99</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c1469165-8392-4ede-ae0c-08bc0ba0118c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ad757a15-193d-485b-b74a-1df88eea7360</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7d3b97a6-ad1c-4ec9-a9a4-4e91f2c5947d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="true" maxResults="0" name="TYPE_GM constraint validation" searchProperties="true" id="8643d2ca-5279-4707-9208-ab612a7cc66d">
      <con:settings/>
      
      
      
      
      <con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>app.username</con:name><con:value>adminuser</con:value></con:property><con:property><con:name>app.password</con:name><con:value>adminpass</con:value></con:property><con:property><con:name>---------------------------------------json</con:name><con:value/></con:property><con:property><con:name>device.key</con:name><con:value>45</con:value></con:property><con:property><con:name>device.ip</con:name><con:value>192.168.1.7</con:value></con:property><con:property><con:name>device.mac</con:name><con:value>ab:cd:ef:20:34:56</con:value></con:property><con:property><con:name>device.name</con:name><con:value>test-device-json</con:value></con:property><con:property><con:name>device.type</con:name><con:value>TYPE_GM</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="create with missing ip">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create with missing ip" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"",
   "devMac":"${device.mac}",
   "devType":"${device.type}",
   "devName":"${device.name}",
   "devDescription":"this is a test device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid entity returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:entity</path><content>com.app.domain.model.TypeGm</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid error message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>size must be between 7 and 15</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid message key returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:messageKey</path><content>{javax.validation.constraints.Size.message}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid property returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:property</path><content>devIp</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      <con:testStep type="httprequest" name="create with wrong (short) ip">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create with wrong (short) ip" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"1.1.1.",
   "devMac":"${device.mac}",
   "devType":"${device.type}",
   "devName":"${device.name}",
   "devDescription":"this is a test device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid entity returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:entity</path><content>com.app.domain.model.TypeGm</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid error message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>size must be between 7 and 15</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid message key returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:messageKey</path><content>{javax.validation.constraints.Size.message}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid property returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:property</path><content>devIp</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="create with wrong (long) ip">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create with wrong (long) ip" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"255.255.255.2551",
   "devMac":"${device.mac}",
   "devType":"${device.type}",
   "devName":"${device.name}",
   "devDescription":"this is a test device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid entity returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:entity</path><content>com.app.domain.model.TypeGm</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid error message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>size must be between 7 and 15</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid message key returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:messageKey</path><content>{javax.validation.constraints.Size.message}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid property returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:property</path><content>devIp</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="create with missing mac">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create with missing mac" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"${device.ip}",
   "devMac":"",
   "devType":"${device.type}",
   "devName":"${device.name}",
   "devDescription":"this is a test device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid entity returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:entity</path><content>com.app.domain.model.TypeGm</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid error message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>size must be between 17 and 17</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid message key returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:messageKey</path><content>{javax.validation.constraints.Size.message}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid property returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:property</path><content>devMac</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="create with wrong (short) mac">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create with wrong (short) mac" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"${device.ip}",
   "devMac":"11:22:33:44:55:6",
   "devType":"${device.type}",
   "devName":"${device.name}",
   "devDescription":"this is a test device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid entity returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:entity</path><content>com.app.domain.model.TypeGm</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid error message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>size must be between 17 and 17</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid message key returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:messageKey</path><content>{javax.validation.constraints.Size.message}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid property returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:property</path><content>devMac</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="create with wrong (long) mac">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create with wrong (long) mac" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"${device.ip}",
   "devMac":"11:22:33:44:55:66:",
   "devType":"${device.type}",
   "devName":"${device.name}",
   "devDescription":"this is a test device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid entity returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:entity</path><content>com.app.domain.model.TypeGm</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid error message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>size must be between 17 and 17</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid message key returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:messageKey</path><content>{javax.validation.constraints.Size.message}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid property returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:property</path><content>devMac</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="create with missing type">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create with missing type" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"${device.ip}",
   "devMac":"${device.mac}",
   "devName":"${device.name}",
   "devDescription":"this is a test device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid error message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>Device: missing device type</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="create with wrong type (revise)" disabled="true">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create with wrong type (revise)" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"${device.ip}",
   "devMac":"${device.mac}",
   "devType":"wrong-type",
   "devName":"${device.name}",
   "devDescription":"this is a test device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid error message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>Can not construct instance of com.app.domain.model.enums.DeviceType from String value 'wrong-type': value not one of declared Enum instance names
 at [Source: org.apache.catalina.connector.CoyoteInputStream@38ef9337; line: 4, column: 32] (through reference chain: com.app.domain.model.Device["devType"])</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>true</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid exception name returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:extendedInfo</path><content>HttpMessageNotReadableException</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="create with missing name">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create with missing name" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"${device.ip}",
   "devMac":"${device.mac}",
   "devType":"${device.type}",
   "devDescription":"this is a test device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid entity returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:entity</path><content>com.app.domain.model.TypeGm</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid error message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>may not be null</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid message key returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:messageKey</path><content>{javax.validation.constraints.NotNull.message}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid property returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:property</path><content>devName</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="create with name>20">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create with name>20" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"${device.ip}",
   "devMac":"${device.mac}",
   "devType":"${device.type}",
   "devName":"veeeeery_looooooong_deeevice_naaaaaaame",
   "devDescription":"this is a test device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid entity returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:entity</path><content>com.app.domain.model.TypeGm</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid error message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>size must be between 0 and 20</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid message key returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:messageKey</path><content>{javax.validation.constraints.Size.message}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid property returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:property</path><content>devName</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="create valid device">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create valid device" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"${device.ip}",
   "devMac":"${device.mac}",
   "devType":"${device.type}",
   "devName":"${device.name}",
   "devDescription":"this is a test device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid ip returned"><con:configuration><path>//*:Response/*:devIp</path><content>${device.ip}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid mac returned"><con:configuration><path>//*:Response/*:devMac</path><content>${device.mac}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid name returned"><con:configuration><path>//*:Response/*:devName</path><content>${device.name}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="transfer" name="transfer key"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>primaryKey1</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>create valid device</con:sourceStep><con:sourcePath>//*:Response/*:primaryKey</con:sourcePath><con:targetType>device.key</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="create with existing ip">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create with existing ip" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"${device.ip}",
   "devMac":"11:22:33:44:55:66",
   "devType":"TYPE_F",
   "devName":"test1",
   "devDescription":"this is a test device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid exception cought"><con:configuration><path>//*:Fault/*:violations/*:e/*:extendedInfo</path><content>org.springframework.dao.DataIntegrityViolationException</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>Duplicate entry '192.168.1.7' for key 'devIp'</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="create with existing mac">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create with existing mac" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"123.123.123.123",
   "devMac":"${device.mac}",
   "devType":"TYPE_F",
   "devName":"test1",
   "devDescription":"this is a test device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid exception cought"><con:configuration><path>//*:Fault/*:violations/*:e/*:extendedInfo</path><content>org.springframework.dao.DataIntegrityViolationException</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>Duplicate entry 'ab:cd:ef:20:34:56' for key 'devMac'</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="create with existing name">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create with existing name" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"123.123.123.123",
   "devMac":"12:34:56:78:91:bb",
   "devType":"TYPE_F",
   "devName":"${device.name}",
   "devDescription":"this is a test device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid exception cought"><con:configuration><path>//*:Fault/*:violations/*:e/*:extendedInfo</path><content>org.springframework.dao.DataIntegrityViolationException</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>Duplicate entry 'test-device-json' for key 'devName'</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="delete valid device">
        <con:settings/>
        <con:config method="DELETE" xsi:type="con:HttpRequest" name="delete valid device" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/${device.key}</con:endpoint>
          <con:request>{
   "id":"",
   "name":"updated contact",
   "address":"updated address",
   "gender":"F",
   "dob":"2001-04-16",
   "email":"updated-test@email.com",
   "mobile":"5145145111",
   "phone":"5145145121"
}</con:request>
          
          
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Code returned"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>16cf45a0-c1af-4c33-8819-0a4ea8276756</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>1342966e-515f-4ec0-9a4c-9d7c51c48542</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>1fb764e4-1840-4cf8-af80-00f7f2c2ece6</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3b800581-6387-44ff-b35b-945408787b7c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>edfd8dac-0104-4730-8cc6-0428d656d0ad</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>6a97c497-6e1b-4cef-b11d-07bf8213303c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f90e9cac-ab42-46ea-98df-be81bfe12c6a</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>0d0d0e4d-ae89-44ba-8a1f-a351325fb2ac</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>335a9d86-8bef-4093-94b6-f118d2b94d26</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>8cc6b576-1299-4a62-a3cb-02dba18d783c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3d446bb9-7f2d-437d-ba9d-538c8544ebca</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>887ed9bf-ef65-4cd6-8d63-fe63059b6114</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5e49a61f-6c85-495d-9b4a-4cb38df93a4c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>ff9f7042-ba4f-437e-a043-8021225671b8</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>d76aa335-29eb-4aa2-91cd-16d24dbca2ba</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>679e8216-4253-4db8-8c5d-14aaa0c542fd</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>71a6c31e-5f1d-4b27-b2a7-44b62806bf64</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5a75c453-48bd-46bc-b1f3-1987ee84ae9b</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5acde369-b009-4471-a36a-146d0396a252</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>fd95a9ee-7a42-47ac-acef-a96cb56e687c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3b97c817-b31a-4a3f-b8ff-409f243cff67</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>e2cdbfdb-8bb7-4def-9ab4-51a9f9aa9b35</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>a461e16f-8295-44f1-8150-5ac5d8413f25</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>8c722f3e-448b-48cb-9417-916e6c71f2a4</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>b5ffe9da-6232-45b2-8878-ff6d59663ebd</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f9f33afa-18df-4001-b902-af22172b09c9</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f41cff6a-ef96-412a-88b1-035cd578ec10</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>bf010173-19fa-4baf-b5f4-0aa02758a4ca</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>c9f13830-2d42-4ea7-afff-1a1c3960b124</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    <con:breakPoints><con:testStepId>18313ee5-9be5-461b-bbef-4ac16dc18a16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>629d7ffd-2eeb-46e3-bb04-778428631c99</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c1469165-8392-4ede-ae0c-08bc0ba0118c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ad757a15-193d-485b-b74a-1df88eea7360</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7d3b97a6-ad1c-4ec9-a9a4-4e91f2c5947d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="true" maxResults="0" name="Load all devices" searchProperties="true" id="6218082d-002c-46a3-a198-76b77f74b544">
      <con:settings/>
      
      
      
      
      <con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>app.username</con:name><con:value>adminuser</con:value></con:property><con:property><con:name>app.password</con:name><con:value>adminpass</con:value></con:property><con:property><con:name>---------------------------------------json</con:name><con:value/></con:property><con:property><con:name>device-1-1.key</con:name><con:value>49</con:value></con:property><con:property><con:name>device-1-2.key</con:name><con:value>50</con:value></con:property><con:property><con:name>device-2-1.key</con:name><con:value>51</con:value></con:property><con:property><con:name>device-2-2.key</con:name><con:value>52</con:value></con:property><con:property><con:name>device-3-1.key</con:name><con:value>53</con:value></con:property><con:property><con:name>device-3-2.key</con:name><con:value>54</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="create 1.1">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create 1.1" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"10.10.1.1",
   "devMac":"11:11:11:11:11:11",
   "devType":"TYPE_F",
   "devName":"test-1-1",
   "devDescription":"test-1-1 device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid device IP returned"><con:configuration><path>//*:Response/*:devIp</path><content>10.10.1.1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device MAC returned"><con:configuration><path>//*:Response/*:devMac</path><content>11:11:11:11:11:11</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device name returned"><con:configuration><path>//*:Response/*:devName</path><content>test-1-1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device type returned"><con:configuration><path>//*:Response/*:devType</path><content>TYPE_F</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      <con:testStep type="httprequest" name="create 1.2">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create 1.2" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"10.10.1.2",
   "devMac":"11:11:11:11:11:12",
   "devType":"TYPE_F",
   "devName":"test-1-2",
   "devDescription":"test-1-2 device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid device IP returned"><con:configuration><path>//*:Response/*:devIp</path><content>10.10.1.2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device MAC returned"><con:configuration><path>//*:Response/*:devMac</path><content>11:11:11:11:11:12</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device name returned"><con:configuration><path>//*:Response/*:devName</path><content>test-1-2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device type returned"><con:configuration><path>//*:Response/*:devType</path><content>TYPE_F</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="create 2.1">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create 2.1" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"10.10.2.1",
   "devMac":"11:11:11:11:11:21",
   "devType":"TYPE_G",
   "devName":"test-2-1",
   "devDescription":"test-2-1 device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid device IP returned"><con:configuration><path>//*:Response/*:devIp</path><content>10.10.2.1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device MAC returned"><con:configuration><path>//*:Response/*:devMac</path><content>11:11:11:11:11:21</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device name returned"><con:configuration><path>//*:Response/*:devName</path><content>test-2-1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device type returned"><con:configuration><path>//*:Response/*:devType</path><content>TYPE_G</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="create 2.2">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create 2.2" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"10.10.2.2",
   "devMac":"11:11:11:11:11:22",
   "devType":"TYPE_G",
   "devName":"test-2-2",
   "devDescription":"test-2-2 device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid device IP returned"><con:configuration><path>//*:Response/*:devIp</path><content>10.10.2.2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device MAC returned"><con:configuration><path>//*:Response/*:devMac</path><content>11:11:11:11:11:22</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device name returned"><con:configuration><path>//*:Response/*:devName</path><content>test-2-2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device type returned"><con:configuration><path>//*:Response/*:devType</path><content>TYPE_G</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="create 3.1">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create 3.1" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"10.10.3.1",
   "devMac":"11:11:11:11:11:31",
   "devType":"TYPE_GM",
   "devName":"test-3-1",
   "devDescription":"test-3-1 device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid device IP returned"><con:configuration><path>//*:Response/*:devIp</path><content>10.10.3.1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device MAC returned"><con:configuration><path>//*:Response/*:devMac</path><content>11:11:11:11:11:31</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device name returned"><con:configuration><path>//*:Response/*:devName</path><content>test-3-1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device type returned"><con:configuration><path>//*:Response/*:devType</path><content>TYPE_GM</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="create 3.2">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create 3.2" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"10.10.3.2",
   "devMac":"11:11:11:11:11:32",
   "devType":"TYPE_GM",
   "devName":"test-3-2",
   "devDescription":"test-3-2 device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid device IP returned"><con:configuration><path>//*:Response/*:devIp</path><content>10.10.3.2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device MAC returned"><con:configuration><path>//*:Response/*:devMac</path><content>11:11:11:11:11:32</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device name returned"><con:configuration><path>//*:Response/*:devName</path><content>test-3-2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device type returned"><con:configuration><path>//*:Response/*:devType</path><content>TYPE_GM</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="transfer" name="transfer keys"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>primaryKey11</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>create 1.1</con:sourceStep><con:sourcePath>//*:Response/*:primaryKey</con:sourcePath><con:targetType>device-1-1.key</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>primaryKey12</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>create 1.2</con:sourceStep><con:sourcePath>//*:Response/*:primaryKey</con:sourcePath><con:targetType>device-1-2.key</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>primaryKey21</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>create 2.1</con:sourceStep><con:sourcePath>//*:Response/*:primaryKey</con:sourcePath><con:targetType>device-2-1.key</con:targetType><con:targetStep>Properties</con:targetStep><con:targetPath xsi:nil="true"/></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>primaryKey22</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>create 2.2</con:sourceStep><con:sourcePath>//*:Response/*:primaryKey</con:sourcePath><con:targetType>device-2-2.key</con:targetType><con:targetStep>Properties</con:targetStep><con:targetPath xsi:nil="true"/></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>primaryKey31</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>create 3.1</con:sourceStep><con:sourcePath>//*:Response/*:primaryKey</con:sourcePath><con:targetType>device-3-1.key</con:targetType><con:targetStep>Properties</con:targetStep><con:targetPath xsi:nil="true"/></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>primaryKey32</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>create 3.2</con:sourceStep><con:sourcePath>//*:Response/*:primaryKey</con:sourcePath><con:targetType>device-3-2.key</con:targetType><con:targetStep>Properties</con:targetStep><con:targetPath xsi:nil="true"/></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="load all devices">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="load all devices" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/all</con:endpoint>
          <con:request/>
          
          
          <con:assertion type="XPath Match" name="Expected number of devices returned"><con:configuration><path>count( //Response/e)</path><content>6</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="TYPE_F device returned 2 times"><con:configuration><path>count(//Response/e[devType="TYPE_F"])</path><content>2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="TYPE_G device returned 2 times"><con:configuration><path>count(//Response/e[devType="TYPE_G"])</path><content>2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="TYPE_GM device returned 2 times"><con:configuration><path>count(//Response/e[devType="TYPE_GM"])</path><content>2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="&quot;switchStatus&quot; property returned 6 times"><con:configuration><path>count(//Response/e[switchStatus="OFF"])</path><content>6</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="&quot;dimMode = OFF&quot; property returned 2 times"><con:configuration><path>count(//Response/e[dimMode="OFF"])</path><content>2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="&quot;ledOnColor = NONE&quot; property returned 4 times"><con:configuration><path>count(//Response/e[ledOnColor="NONE"])</path><content>4</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="delete 1.1" id="d338a591-8391-4eb3-8099-83a02e0e9fbc">
        <con:settings/>
        <con:config method="DELETE" xsi:type="con:HttpRequest" name="delete 1.1" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/${device-1-1.key}</con:endpoint>
          <con:request>{
   "id":"",
   "name":"updated contact",
   "address":"updated address",
   "gender":"F",
   "dob":"2001-04-16",
   "email":"updated-test@email.com",
   "mobile":"5145145111",
   "phone":"5145145121"
}</con:request>
          
          
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Code returned"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="delete 1.2">
        <con:settings/>
        <con:config method="DELETE" xsi:type="con:HttpRequest" name="delete 1.2" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/${device-1-2.key}</con:endpoint>
          <con:request>{
   "id":"",
   "name":"updated contact",
   "address":"updated address",
   "gender":"F",
   "dob":"2001-04-16",
   "email":"updated-test@email.com",
   "mobile":"5145145111",
   "phone":"5145145121"
}</con:request>
          
          
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Code returned"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="delete 2.1">
        <con:settings/>
        <con:config method="DELETE" xsi:type="con:HttpRequest" name="delete 2.1" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/${device-2-1.key}</con:endpoint>
          <con:request>{
   "id":"",
   "name":"updated contact",
   "address":"updated address",
   "gender":"F",
   "dob":"2001-04-16",
   "email":"updated-test@email.com",
   "mobile":"5145145111",
   "phone":"5145145121"
}</con:request>
          
          
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Code returned"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="delete 2.2">
        <con:settings/>
        <con:config method="DELETE" xsi:type="con:HttpRequest" name="delete 2.2" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/${device-2-2.key}</con:endpoint>
          <con:request>{
   "id":"",
   "name":"updated contact",
   "address":"updated address",
   "gender":"F",
   "dob":"2001-04-16",
   "email":"updated-test@email.com",
   "mobile":"5145145111",
   "phone":"5145145121"
}</con:request>
          
          
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Code returned"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="delete 3.2">
        <con:settings/>
        <con:config method="DELETE" xsi:type="con:HttpRequest" name="delete 3.2" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/${device-3-2.key}</con:endpoint>
          <con:request>{
   "id":"",
   "name":"updated contact",
   "address":"updated address",
   "gender":"F",
   "dob":"2001-04-16",
   "email":"updated-test@email.com",
   "mobile":"5145145111",
   "phone":"5145145121"
}</con:request>
          
          
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Code returned"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="delete 3.1">
        <con:settings/>
        <con:config method="DELETE" xsi:type="con:HttpRequest" name="delete 3.1" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/${device-3-1.key}</con:endpoint>
          <con:request>{
   "id":"",
   "name":"updated contact",
   "address":"updated address",
   "gender":"F",
   "dob":"2001-04-16",
   "email":"updated-test@email.com",
   "mobile":"5145145111",
   "phone":"5145145121"
}</con:request>
          
          
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Code returned"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>16cf45a0-c1af-4c33-8819-0a4ea8276756</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>1342966e-515f-4ec0-9a4c-9d7c51c48542</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>1fb764e4-1840-4cf8-af80-00f7f2c2ece6</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3b800581-6387-44ff-b35b-945408787b7c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>edfd8dac-0104-4730-8cc6-0428d656d0ad</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>6a97c497-6e1b-4cef-b11d-07bf8213303c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f90e9cac-ab42-46ea-98df-be81bfe12c6a</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>0d0d0e4d-ae89-44ba-8a1f-a351325fb2ac</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>335a9d86-8bef-4093-94b6-f118d2b94d26</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>8cc6b576-1299-4a62-a3cb-02dba18d783c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3d446bb9-7f2d-437d-ba9d-538c8544ebca</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>887ed9bf-ef65-4cd6-8d63-fe63059b6114</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5e49a61f-6c85-495d-9b4a-4cb38df93a4c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>ff9f7042-ba4f-437e-a043-8021225671b8</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>d76aa335-29eb-4aa2-91cd-16d24dbca2ba</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>679e8216-4253-4db8-8c5d-14aaa0c542fd</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>71a6c31e-5f1d-4b27-b2a7-44b62806bf64</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5a75c453-48bd-46bc-b1f3-1987ee84ae9b</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5acde369-b009-4471-a36a-146d0396a252</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>fd95a9ee-7a42-47ac-acef-a96cb56e687c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3b97c817-b31a-4a3f-b8ff-409f243cff67</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>e2cdbfdb-8bb7-4def-9ab4-51a9f9aa9b35</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>a461e16f-8295-44f1-8150-5ac5d8413f25</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>8c722f3e-448b-48cb-9417-916e6c71f2a4</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>b5ffe9da-6232-45b2-8878-ff6d59663ebd</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f9f33afa-18df-4001-b902-af22172b09c9</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f41cff6a-ef96-412a-88b1-035cd578ec10</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>bf010173-19fa-4baf-b5f4-0aa02758a4ca</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>c9f13830-2d42-4ea7-afff-1a1c3960b124</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    <con:breakPoints><con:testStepId>18313ee5-9be5-461b-bbef-4ac16dc18a16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>629d7ffd-2eeb-46e3-bb04-778428631c99</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c1469165-8392-4ede-ae0c-08bc0ba0118c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ad757a15-193d-485b-b74a-1df88eea7360</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d338a591-8391-4eb3-8099-83a02e0e9fbc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>31d2ccef-575f-4b86-b391-ba937e3603b5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="true" maxResults="0" name="Load all by type (F, G, GM)" searchProperties="true" id="8d550b67-bf44-4adc-9c2d-231a3a0d5aa0">
      <con:settings/>
      
      
      
      
      <con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>app.username</con:name><con:value>adminuser</con:value></con:property><con:property><con:name>app.password</con:name><con:value>adminpass</con:value></con:property><con:property><con:name>---------------------------------------json</con:name><con:value/></con:property><con:property><con:name>device-1-1.key</con:name><con:value>55</con:value></con:property><con:property><con:name>device-1-2.key</con:name><con:value>56</con:value></con:property><con:property><con:name>device-2-1.key</con:name><con:value>57</con:value></con:property><con:property><con:name>device-2-2.key</con:name><con:value>58</con:value></con:property><con:property><con:name>device-3-1.key</con:name><con:value>59</con:value></con:property><con:property><con:name>device-3-2.key</con:name><con:value>60</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="create 1.1">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create 1.1" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"10.10.1.1",
   "devMac":"11:11:11:11:11:11",
   "devType":"TYPE_F",
   "devName":"test-1-1",
   "devDescription":"test-1-1 device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid device IP returned"><con:configuration><path>//*:Response/*:devIp</path><content>10.10.1.1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device MAC returned"><con:configuration><path>//*:Response/*:devMac</path><content>11:11:11:11:11:11</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device name returned"><con:configuration><path>//*:Response/*:devName</path><content>test-1-1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device type returned"><con:configuration><path>//*:Response/*:devType</path><content>TYPE_F</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      <con:testStep type="httprequest" name="create 1.2">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create 1.2" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"10.10.1.2",
   "devMac":"11:11:11:11:11:12",
   "devType":"TYPE_F",
   "devName":"test-1-2",
   "devDescription":"test-1-2 device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid device IP returned"><con:configuration><path>//*:Response/*:devIp</path><content>10.10.1.2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device MAC returned"><con:configuration><path>//*:Response/*:devMac</path><content>11:11:11:11:11:12</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device name returned"><con:configuration><path>//*:Response/*:devName</path><content>test-1-2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device type returned"><con:configuration><path>//*:Response/*:devType</path><content>TYPE_F</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="create 2.1">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create 2.1" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"10.10.2.1",
   "devMac":"11:11:11:11:11:21",
   "devType":"TYPE_G",
   "devName":"test-2-1",
   "devDescription":"test-2-1 device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid device IP returned"><con:configuration><path>//*:Response/*:devIp</path><content>10.10.2.1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device MAC returned"><con:configuration><path>//*:Response/*:devMac</path><content>11:11:11:11:11:21</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device name returned"><con:configuration><path>//*:Response/*:devName</path><content>test-2-1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device type returned"><con:configuration><path>//*:Response/*:devType</path><content>TYPE_G</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="create 2.2">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create 2.2" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"10.10.2.2",
   "devMac":"11:11:11:11:11:22",
   "devType":"TYPE_G",
   "devName":"test-2-2",
   "devDescription":"test-2-2 device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid device IP returned"><con:configuration><path>//*:Response/*:devIp</path><content>10.10.2.2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device MAC returned"><con:configuration><path>//*:Response/*:devMac</path><content>11:11:11:11:11:22</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device name returned"><con:configuration><path>//*:Response/*:devName</path><content>test-2-2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device type returned"><con:configuration><path>//*:Response/*:devType</path><content>TYPE_G</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="create 3.1">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create 3.1" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"10.10.3.1",
   "devMac":"11:11:11:11:11:31",
   "devType":"TYPE_GM",
   "devName":"test-3-1",
   "devDescription":"test-3-1 device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid device IP returned"><con:configuration><path>//*:Response/*:devIp</path><content>10.10.3.1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device MAC returned"><con:configuration><path>//*:Response/*:devMac</path><content>11:11:11:11:11:31</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device name returned"><con:configuration><path>//*:Response/*:devName</path><content>test-3-1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device type returned"><con:configuration><path>//*:Response/*:devType</path><content>TYPE_GM</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="create 3.2">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create 3.2" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device</con:endpoint>
          <con:request>{
   "primaryKey":"",
   "devIp":"10.10.3.2",
   "devMac":"11:11:11:11:11:32",
   "devType":"TYPE_GM",
   "devName":"test-3-2",
   "devDescription":"test-3-2 device"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid device IP returned"><con:configuration><path>//*:Response/*:devIp</path><content>10.10.3.2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device MAC returned"><con:configuration><path>//*:Response/*:devMac</path><content>11:11:11:11:11:32</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device name returned"><con:configuration><path>//*:Response/*:devName</path><content>test-3-2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device type returned"><con:configuration><path>//*:Response/*:devType</path><content>TYPE_GM</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="transfer" name="transfer keys"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>primaryKey11</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>create 1.1</con:sourceStep><con:sourcePath>//*:Response/*:primaryKey</con:sourcePath><con:targetType>device-1-1.key</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>primaryKey12</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>create 1.2</con:sourceStep><con:sourcePath>//*:Response/*:primaryKey</con:sourcePath><con:targetType>device-1-2.key</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>primaryKey21</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>create 2.1</con:sourceStep><con:sourcePath>//*:Response/*:primaryKey</con:sourcePath><con:targetType>device-2-1.key</con:targetType><con:targetStep>Properties</con:targetStep><con:targetPath xsi:nil="true"/></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>primaryKey22</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>create 2.2</con:sourceStep><con:sourcePath>//*:Response/*:primaryKey</con:sourcePath><con:targetType>device-2-2.key</con:targetType><con:targetStep>Properties</con:targetStep><con:targetPath xsi:nil="true"/></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>primaryKey31</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>create 3.1</con:sourceStep><con:sourcePath>//*:Response/*:primaryKey</con:sourcePath><con:targetType>device-3-1.key</con:targetType><con:targetStep>Properties</con:targetStep><con:targetPath xsi:nil="true"/></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>primaryKey32</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>create 3.2</con:sourceStep><con:sourcePath>//*:Response/*:primaryKey</con:sourcePath><con:targetType>device-3-2.key</con:targetType><con:targetStep>Properties</con:targetStep><con:targetPath xsi:nil="true"/></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="load all TYPE_F devices">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="load all TYPE_F devices" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/type/TYPE_F</con:endpoint>
          <con:request/>
          
          
          <con:assertion type="XPath Match" name="Expected number of devices returned"><con:configuration><path>count( //Response/e)</path><content>2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="TYPE_F device returned 2 times"><con:configuration><path>count(//Response/e[devType="TYPE_F"])</path><content>2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device 1 name returned"><con:configuration><path>count(//Response/e[devName="test-1-2"])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device 2 name returned"><con:configuration><path>count(//Response/e[devName="test-1-1"])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="load all TYPE_G devices">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="load all TYPE_G devices" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/type/TYPE_G</con:endpoint>
          <con:request/>
          
          
          <con:assertion type="XPath Match" name="Expected number of devices returned"><con:configuration><path>count( //Response/e)</path><content>2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="TYPE_G device returned 2 times"><con:configuration><path>count(//Response/e[devType="TYPE_G"])</path><content>2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device 1 name returned"><con:configuration><path>count(//Response/e[devName="test-2-1"])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device 2 name returned"><con:configuration><path>count(//Response/e[devName="test-2-2"])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="load all TYPE_GM devices">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="load all TYPE_GM devices" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/type/TYPE_GM</con:endpoint>
          <con:request/>
          
          
          <con:assertion type="XPath Match" name="Expected number of devices returned"><con:configuration><path>count( //Response/e)</path><content>2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="TYPE_GM device returned 2 times"><con:configuration><path>count(//Response/e[devType="TYPE_GM"])</path><content>2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device 1 name returned"><con:configuration><path>count(//Response/e[devName="test-3-1"])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid device 2 name returned"><con:configuration><path>count(//Response/e[devName="test-3-2"])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="load devices by wrong (TYPE_S) type">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="load devices by wrong (TYPE_S) type" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/type/TYPE_S</con:endpoint>
          <con:request/>
          
          
          <con:assertion type="XPath Match" name="valid error message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>No enum constant com.app.domain.model.enums.DeviceType.TYPE_S</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="load devices by type (missing type)">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="load devices by type (missing type)" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/type/</con:endpoint>
          <con:request/>
          
          
          <con:assertion type="XPath Match" name="valid error message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>For input string: "type"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="expected exception returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:extendedInfo</path><content>org.springframework.beans.TypeMismatchException</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="expected messageKey returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:messageKey</path><content>typeMismatch</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="delete 1.1">
        <con:settings/>
        <con:config method="DELETE" xsi:type="con:HttpRequest" name="delete 1.1" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/${device-1-1.key}</con:endpoint>
          <con:request>{
   "id":"",
   "name":"updated contact",
   "address":"updated address",
   "gender":"F",
   "dob":"2001-04-16",
   "email":"updated-test@email.com",
   "mobile":"5145145111",
   "phone":"5145145121"
}</con:request>
          
          
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Code returned"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="delete 1.2">
        <con:settings/>
        <con:config method="DELETE" xsi:type="con:HttpRequest" name="delete 1.2" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/${device-1-2.key}</con:endpoint>
          <con:request>{
   "id":"",
   "name":"updated contact",
   "address":"updated address",
   "gender":"F",
   "dob":"2001-04-16",
   "email":"updated-test@email.com",
   "mobile":"5145145111",
   "phone":"5145145121"
}</con:request>
          
          
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Code returned"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="delete 2.1">
        <con:settings/>
        <con:config method="DELETE" xsi:type="con:HttpRequest" name="delete 2.1" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/${device-2-1.key}</con:endpoint>
          <con:request>{
   "id":"",
   "name":"updated contact",
   "address":"updated address",
   "gender":"F",
   "dob":"2001-04-16",
   "email":"updated-test@email.com",
   "mobile":"5145145111",
   "phone":"5145145121"
}</con:request>
          
          
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Code returned"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="delete 2.2">
        <con:settings/>
        <con:config method="DELETE" xsi:type="con:HttpRequest" name="delete 2.2" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/${device-2-2.key}</con:endpoint>
          <con:request>{
   "id":"",
   "name":"updated contact",
   "address":"updated address",
   "gender":"F",
   "dob":"2001-04-16",
   "email":"updated-test@email.com",
   "mobile":"5145145111",
   "phone":"5145145121"
}</con:request>
          
          
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Code returned"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="delete 3.2">
        <con:settings/>
        <con:config method="DELETE" xsi:type="con:HttpRequest" name="delete 3.2" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/${device-3-2.key}</con:endpoint>
          <con:request>{
   "id":"",
   "name":"updated contact",
   "address":"updated address",
   "gender":"F",
   "dob":"2001-04-16",
   "email":"updated-test@email.com",
   "mobile":"5145145111",
   "phone":"5145145121"
}</con:request>
          
          
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Code returned"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="delete 3.1">
        <con:settings/>
        <con:config method="DELETE" xsi:type="con:HttpRequest" name="delete 3.1" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/device/${device-3-1.key}</con:endpoint>
          <con:request>{
   "id":"",
   "name":"updated contact",
   "address":"updated address",
   "gender":"F",
   "dob":"2001-04-16",
   "email":"updated-test@email.com",
   "mobile":"5145145111",
   "phone":"5145145121"
}</con:request>
          
          
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Code returned"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>16cf45a0-c1af-4c33-8819-0a4ea8276756</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>1342966e-515f-4ec0-9a4c-9d7c51c48542</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>1fb764e4-1840-4cf8-af80-00f7f2c2ece6</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3b800581-6387-44ff-b35b-945408787b7c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>edfd8dac-0104-4730-8cc6-0428d656d0ad</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>6a97c497-6e1b-4cef-b11d-07bf8213303c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f90e9cac-ab42-46ea-98df-be81bfe12c6a</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>0d0d0e4d-ae89-44ba-8a1f-a351325fb2ac</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>335a9d86-8bef-4093-94b6-f118d2b94d26</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>8cc6b576-1299-4a62-a3cb-02dba18d783c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3d446bb9-7f2d-437d-ba9d-538c8544ebca</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>887ed9bf-ef65-4cd6-8d63-fe63059b6114</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5e49a61f-6c85-495d-9b4a-4cb38df93a4c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>ff9f7042-ba4f-437e-a043-8021225671b8</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>d76aa335-29eb-4aa2-91cd-16d24dbca2ba</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>679e8216-4253-4db8-8c5d-14aaa0c542fd</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>71a6c31e-5f1d-4b27-b2a7-44b62806bf64</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5a75c453-48bd-46bc-b1f3-1987ee84ae9b</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5acde369-b009-4471-a36a-146d0396a252</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>fd95a9ee-7a42-47ac-acef-a96cb56e687c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3b97c817-b31a-4a3f-b8ff-409f243cff67</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>e2cdbfdb-8bb7-4def-9ab4-51a9f9aa9b35</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>a461e16f-8295-44f1-8150-5ac5d8413f25</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>8c722f3e-448b-48cb-9417-916e6c71f2a4</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>b5ffe9da-6232-45b2-8878-ff6d59663ebd</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f9f33afa-18df-4001-b902-af22172b09c9</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f41cff6a-ef96-412a-88b1-035cd578ec10</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>bf010173-19fa-4baf-b5f4-0aa02758a4ca</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>c9f13830-2d42-4ea7-afff-1a1c3960b124</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    <con:breakPoints><con:testStepId>18313ee5-9be5-461b-bbef-4ac16dc18a16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>629d7ffd-2eeb-46e3-bb04-778428631c99</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c1469165-8392-4ede-ae0c-08bc0ba0118c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ad757a15-193d-485b-b74a-1df88eea7360</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d338a591-8391-4eb3-8099-83a02e0e9fbc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>31d2ccef-575f-4b86-b391-ba937e3603b5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/>
    <con:reportParameters/>
  </con:testSuite><con:testSuite name="Contact">
    <con:settings>
      <con:setting id="IncludeOverview">true</con:setting>
      <con:setting id="IncludeResults">true</con:setting>
      <con:setting id="FlowLayout">false</con:setting>
      <con:setting id="ErrorDetails">true</con:setting>
      <con:setting id="IncludeCoverage">true</con:setting>
      <con:setting id="GeneratableJUnitReport@Style">Multiple Pages</con:setting>
      <con:setting id="GeneratableJUnitReport@Folder"/>
    </con:settings>
    <con:runType>SEQUENTIAL</con:runType>
    
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="true" maxResults="0" name="Contacts CRUD (json/xml)" searchProperties="true" id="2e5393dc-9b36-4d5e-91d0-f83f5dfcd62e">
      <con:settings/>
      
      
      
      
      <con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>newContact-json.id</con:name><con:value>8</con:value></con:property><con:property><con:name>newContact-xml-text.id</con:name><con:value>9</con:value></con:property><con:property><con:name>newContact-xml-app.id</con:name><con:value>10</con:value></con:property><con:property><con:name>app.username</con:name><con:value>adminuser</con:value></con:property><con:property><con:name>app.password</con:name><con:value>adminpass</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="create contact (json, json)">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create contact (json, json)" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/contacts</con:endpoint>
          <con:request>{
   "id":"",
   "name":"json contact",
   "address":"json address",
   "gender":"M",
   "dob":"2000-04-16",
   "email":"json-test@email.com",
   "mobile":"5145145111",
   "phone":"5145145121"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid address returned"><con:configuration><path>//*:Response/*:address</path><content>json address</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid name returned"><con:configuration><path>//*:Response/*:name</path><content>json contact</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      <con:testStep type="httprequest" name="create contact (text/xml, xml)">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create contact (text/xml, xml)" postQueryString="false" mediaType="text/xml" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/contacts.xml</con:endpoint>
          <con:request><![CDATA[<contact>
	<id></id>
	<name>xml-text contact</name>
	<address>xml-text address</address>
	<gender>M</gender>
	<dob>2000-04-16</dob>
	<email>xml-text-test@email.com</email>
	<mobile>5145145111</mobile>
	<phone>5145145121</phone>
</contact>]]></con:request>
          
          
          <con:assertion type="XPath Match" name="valid name returned"><con:configuration><path>//contact/name</path><content>xml-text contact</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid address returned"><con:configuration><path>//contact/address</path><content>xml-text address</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="create contact (application/xml, xml)">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create contact (application/xml, xml)" postQueryString="false" mediaType="application/xml" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/contacts.xml</con:endpoint>
          <con:request><![CDATA[<contact>
	<id></id>
	<name>xml-app contact</name>
	<address>xml-app address</address>
	<gender>M</gender>
	<dob>2000-04-16</dob>
	<email>xml-app-test@email.com</email>
	<mobile>5145145111</mobile>
	<phone>5145145121</phone>
</contact>]]></con:request>
          
          
          <con:assertion type="XPath Match" name="valid name returned"><con:configuration><path>//contact/name</path><content>xml-app contact</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid address returned"><con:configuration><path>//contact/address</path><content>xml-app address</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="transfer" name="transfer key"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>key-json</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>create contact (json, json)</con:sourceStep><con:sourcePath>//*:Response/*:id</con:sourcePath><con:targetType>newContact-json.id</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>key-xml-text</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>create contact (text/xml, xml)</con:sourceStep><con:sourcePath>//contact/id</con:sourcePath><con:targetType>newContact-xml-text.id</con:targetType><con:targetStep>Properties</con:targetStep><con:targetPath xsi:nil="true"/></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>key-xml-app</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>create contact (application/xml, xml)</con:sourceStep><con:sourcePath>//contact/id</con:sourcePath><con:targetType>newContact-xml-app.id</con:targetType><con:targetStep>Properties</con:targetStep><con:targetPath xsi:nil="true"/></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="validate 1st contact">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="validate 1st contact" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/contacts/${newContact-json.id}</con:endpoint>
          <con:request/>
          
          
          <con:assertion type="XPath Match" name="valid address returned"><con:configuration><path>//*:Response/*:address</path><content>json address</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid key returned"><con:configuration><path>//*:Response/*:id</path><content>${newContact-json.id}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid name returned"><con:configuration><path>//*:Response/*:name</path><content>json contact</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="update contact (json, json)">
        <con:settings/>
        <con:config method="PUT" xsi:type="con:HttpRequest" name="update contact (json, json)" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/contacts/${newContact-json.id}</con:endpoint>
          <con:request>{
   "id":"",
   "name":"updated json contact",
   "address":"updated json address",
   "gender":"F",
   "dob":"2001-04-16",
   "email":"updated-json-test@email.com",
   "mobile":"5145145111",
   "phone":"5145145121"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid name returned"><con:configuration><path>//*:Response/*:name</path><content>updated json contact</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid address returned"><con:configuration><path>//*:Response/*:address</path><content>updated json address</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid key returned"><con:configuration><path>//*:Response/*:id</path><content>${newContact-json.id}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="update contact (text/xml, xml)">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="update contact (text/xml, xml)" postQueryString="false" mediaType="text/xml" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/contacts.xml</con:endpoint>
          <con:request><![CDATA[<contact>
	<id></id>
	<name>xml-text updated contact</name>
	<address>xml-text updated address</address>
	<gender>M</gender>
	<dob>2000-04-16</dob>
	<email>xml-text-updated@email.com</email>
	<mobile>5145145111</mobile>
	<phone>5145145121</phone>
</contact>]]></con:request>
          
          
          <con:assertion type="XPath Match" name="valid name returned"><con:configuration><path>//contact/name</path><content>xml-text updated contact</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid address returned"><con:configuration><path>//contact/address</path><content>xml-text updated address</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="update contact (application/xml, xml)">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="update contact (application/xml, xml)" postQueryString="false" mediaType="application/xml" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/contacts.xml</con:endpoint>
          <con:request><![CDATA[<contact>
	<id></id>
	<name>xml-app updated contact</name>
	<address>xml-app updated address</address>
	<gender>M</gender>
	<dob>2000-04-16</dob>
	<email>xml-app-updated@email.com</email>
	<mobile>5145145111</mobile>
	<phone>5145145121</phone>
</contact>]]></con:request>
          
          
          <con:assertion type="XPath Match" name="valid name returned"><con:configuration><path>//contact/name</path><content>xml-app updated contact</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid address returned"><con:configuration><path>//contact/address</path><content>xml-app updated address</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="validate 2">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="validate 2" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/contacts/${newContact-json.id}</con:endpoint>
          <con:request/>
          
          
          <con:assertion type="XPath Match" name="valid name returned"><con:configuration><path>//*:Response/*:name</path><content>updated json contact</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid address returned"><con:configuration><path>//*:Response/*:address</path><content>updated json address</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid key returned"><con:configuration><path>//*:Response/*:id</path><content>${newContact-json.id}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="delete contact (json)">
        <con:settings/>
        <con:config method="DELETE" xsi:type="con:HttpRequest" name="delete contact (json)" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/contacts/${newContact-json.id}</con:endpoint>
          <con:request>{
   "id":"",
   "name":"updated contact",
   "address":"updated address",
   "gender":"F",
   "dob":"2001-04-16",
   "email":"updated-test@email.com",
   "mobile":"5145145111",
   "phone":"5145145121"
}</con:request>
          
          
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Code returned"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="delete contact (text/xml)">
        <con:settings/>
        <con:config method="DELETE" xsi:type="con:HttpRequest" name="delete contact (text/xml)" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/contacts/${newContact-xml-text.id}</con:endpoint>
          <con:request>{
   "id":"",
   "name":"updated contact",
   "address":"updated address",
   "gender":"F",
   "dob":"2001-04-16",
   "email":"updated-test@email.com",
   "mobile":"5145145111",
   "phone":"5145145121"
}</con:request>
          
          
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Code returned"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="delete contact (app/xml)">
        <con:settings/>
        <con:config method="DELETE" xsi:type="con:HttpRequest" name="delete contact (app/xml)" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/contacts/${newContact-xml-app.id}</con:endpoint>
          <con:request>{
   "id":"",
   "name":"updated contact",
   "address":"updated address",
   "gender":"F",
   "dob":"2001-04-16",
   "email":"updated-test@email.com",
   "mobile":"5145145111",
   "phone":"5145145121"
}</con:request>
          
          
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Code returned"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="validate 3">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="validate 3" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/contacts/${newContact-json.id}</con:endpoint>
          <con:request/>
          
          
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Code"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>16cf45a0-c1af-4c33-8819-0a4ea8276756</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>1342966e-515f-4ec0-9a4c-9d7c51c48542</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>1fb764e4-1840-4cf8-af80-00f7f2c2ece6</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3b800581-6387-44ff-b35b-945408787b7c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>edfd8dac-0104-4730-8cc6-0428d656d0ad</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>6a97c497-6e1b-4cef-b11d-07bf8213303c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f90e9cac-ab42-46ea-98df-be81bfe12c6a</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>0d0d0e4d-ae89-44ba-8a1f-a351325fb2ac</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>335a9d86-8bef-4093-94b6-f118d2b94d26</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>8cc6b576-1299-4a62-a3cb-02dba18d783c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3d446bb9-7f2d-437d-ba9d-538c8544ebca</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>887ed9bf-ef65-4cd6-8d63-fe63059b6114</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5e49a61f-6c85-495d-9b4a-4cb38df93a4c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>ff9f7042-ba4f-437e-a043-8021225671b8</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>d76aa335-29eb-4aa2-91cd-16d24dbca2ba</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>679e8216-4253-4db8-8c5d-14aaa0c542fd</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>71a6c31e-5f1d-4b27-b2a7-44b62806bf64</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5a75c453-48bd-46bc-b1f3-1987ee84ae9b</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5acde369-b009-4471-a36a-146d0396a252</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>fd95a9ee-7a42-47ac-acef-a96cb56e687c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3b97c817-b31a-4a3f-b8ff-409f243cff67</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>e2cdbfdb-8bb7-4def-9ab4-51a9f9aa9b35</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>a461e16f-8295-44f1-8150-5ac5d8413f25</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>8c722f3e-448b-48cb-9417-916e6c71f2a4</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>b5ffe9da-6232-45b2-8878-ff6d59663ebd</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f9f33afa-18df-4001-b902-af22172b09c9</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f41cff6a-ef96-412a-88b1-035cd578ec10</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>bf010173-19fa-4baf-b5f4-0aa02758a4ca</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>c9f13830-2d42-4ea7-afff-1a1c3960b124</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    <con:breakPoints><con:testStepId>18313ee5-9be5-461b-bbef-4ac16dc18a16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>629d7ffd-2eeb-46e3-bb04-778428631c99</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c1469165-8392-4ede-ae0c-08bc0ba0118c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cdf45857-eb4a-478d-9d4c-f8976845e076</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0e30e99c-2135-4e2b-9743-7159bd2293ca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>91197835-17a2-48f3-96e7-3d43f48cd125</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="true" maxResults="0" name="Contact xml attribute" searchProperties="true" id="711070c6-a557-4c7e-95c9-8f367eb77b68">
      <con:settings/>
      
      
      
      
      <con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>id</con:name><con:value>13</con:value></con:property><con:property><con:name>app.username</con:name><con:value>adminuser</con:value></con:property><con:property><con:name>app.password</con:name><con:value>adminpass</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="create contact (json, json)">
        <con:settings/>
        <con:config method="POST" xsi:type="con:HttpRequest" name="create contact (json, json)" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/contacts</con:endpoint>
          <con:request>{
   "id":"",
   "name":"json contact",
   "address":"json address",
   "gender":"M",
   "dob":"2000-04-16",
   "email":"json-test@email.com",
   "mobile":"5145145111",
   "phone":"5145145121"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="valid address returned"><con:configuration><path>//*:Response/*:address</path><content>json address</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid name returned"><con:configuration><path>//*:Response/*:name</path><content>json contact</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      <con:testStep type="transfer" name="transfer key"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>key-json</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>create contact (json, json)</con:sourceStep><con:sourcePath>//*:Response/*:id</con:sourcePath><con:targetType>id</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="validate 1st contact">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="validate 1st contact" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/contacts/person/${id}</con:endpoint>
          <con:request/>
          
          
          <con:assertion type="XPath Match" name="valid address returned"><con:configuration><path>//person/address</path><content>json address</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid name attribute returned"><con:configuration><path>//person/@name</path><content>json contact</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="delete contact">
        <con:settings/>
        <con:config method="DELETE" xsi:type="con:HttpRequest" name="delete contact" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/contacts/${id}</con:endpoint>
          <con:request>{
   "id":"",
   "name":"updated contact",
   "address":"updated address",
   "gender":"F",
   "dob":"2001-04-16",
   "email":"updated-test@email.com",
   "mobile":"5145145111",
   "phone":"5145145121"
}</con:request>
          
          
          <con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Code returned"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>16cf45a0-c1af-4c33-8819-0a4ea8276756</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>1342966e-515f-4ec0-9a4c-9d7c51c48542</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>1fb764e4-1840-4cf8-af80-00f7f2c2ece6</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3b800581-6387-44ff-b35b-945408787b7c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>edfd8dac-0104-4730-8cc6-0428d656d0ad</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>6a97c497-6e1b-4cef-b11d-07bf8213303c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f90e9cac-ab42-46ea-98df-be81bfe12c6a</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>0d0d0e4d-ae89-44ba-8a1f-a351325fb2ac</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>335a9d86-8bef-4093-94b6-f118d2b94d26</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>8cc6b576-1299-4a62-a3cb-02dba18d783c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3d446bb9-7f2d-437d-ba9d-538c8544ebca</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>887ed9bf-ef65-4cd6-8d63-fe63059b6114</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5e49a61f-6c85-495d-9b4a-4cb38df93a4c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>ff9f7042-ba4f-437e-a043-8021225671b8</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>d76aa335-29eb-4aa2-91cd-16d24dbca2ba</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>679e8216-4253-4db8-8c5d-14aaa0c542fd</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>71a6c31e-5f1d-4b27-b2a7-44b62806bf64</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5a75c453-48bd-46bc-b1f3-1987ee84ae9b</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5acde369-b009-4471-a36a-146d0396a252</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>fd95a9ee-7a42-47ac-acef-a96cb56e687c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3b97c817-b31a-4a3f-b8ff-409f243cff67</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>e2cdbfdb-8bb7-4def-9ab4-51a9f9aa9b35</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>a461e16f-8295-44f1-8150-5ac5d8413f25</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>8c722f3e-448b-48cb-9417-916e6c71f2a4</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>b5ffe9da-6232-45b2-8878-ff6d59663ebd</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f9f33afa-18df-4001-b902-af22172b09c9</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f41cff6a-ef96-412a-88b1-035cd578ec10</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>bf010173-19fa-4baf-b5f4-0aa02758a4ca</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>c9f13830-2d42-4ea7-afff-1a1c3960b124</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    <con:breakPoints><con:testStepId>18313ee5-9be5-461b-bbef-4ac16dc18a16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>629d7ffd-2eeb-46e3-bb04-778428631c99</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c1469165-8392-4ede-ae0c-08bc0ba0118c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cdf45857-eb4a-478d-9d4c-f8976845e076</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0e30e99c-2135-4e2b-9743-7159bd2293ca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/>
    <con:reportParameters/>
  </con:testSuite><con:testSuite name="Exceptions">
    <con:settings>
      <con:setting id="IncludeOverview">true</con:setting>
      <con:setting id="IncludeResults">true</con:setting>
      <con:setting id="FlowLayout">false</con:setting>
      <con:setting id="ErrorDetails">true</con:setting>
      <con:setting id="IncludeCoverage">true</con:setting>
      <con:setting id="GeneratableJUnitReport@Style">Multiple Pages</con:setting>
      <con:setting id="GeneratableJUnitReport@Folder"/>
    </con:settings>
    <con:runType>SEQUENTIAL</con:runType>
    
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="true" maxResults="0" name="User Exceptions" searchProperties="true" id="a7012bdd-c832-466c-92f0-121dedc999b7">
      <con:settings/>
      
      
      
      
      <con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>key.nonExisting</con:name><con:value>0</con:value></con:property><con:property><con:name>newUser.userName</con:name><con:value>username</con:value></con:property><con:property><con:name>newUser.password</con:name><con:value>userpass</con:value></con:property><con:property><con:name>app.username</con:name><con:value>adminuser</con:value></con:property><con:property><con:name>app.password</con:name><con:value>adminpass</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="load non-existing user">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="load non-existing user" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/user/${key.nonExisting}</con:endpoint>
          <con:request/>
          
          
          <con:assertion type="XPath Match" name="primaryKey = null"><con:configuration><path>//*:Fault/*:violations/*:e/*:primaryKey/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid error message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>User with primarykey '0' not found</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      <con:testStep type="httprequest" name="load by non-existing username">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" name="load by non-existing username" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/user/usr/non-existing-user</con:endpoint>
          <con:request/>
          
          
          <con:assertion type="XPath Match" name="primaryKey = null"><con:configuration><path>//*:Fault/*:violations/*:e/*:primaryKey/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid error message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>User with username 'non-existing-user' not found</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:testStep type="httprequest" name="delete non-existing user">
        <con:settings/>
        <con:config method="DELETE" xsi:type="con:HttpRequest" name="delete non-existing user" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>${test.http.host.rest}/user/${key.nonExisting}</con:endpoint>
          <con:request>{
   "id":"",
   "name":"updated contact",
   "address":"updated address",
   "gender":"F",
   "dob":"2001-04-16",
   "email":"updated-test@email.com",
   "mobile":"5145145111",
   "phone":"5145145121"
}</con:request>
          
          
          <con:assertion type="XPath Match" name="primaryKey = null"><con:configuration><path>//*:Fault/*:violations/*:e/*:primaryKey/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="valid error message returned"><con:configuration><path>//*:Fault/*:violations/*:e/*:message</path><content>entity with key '0' not found</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
            <con:username>${app.username}</con:username>
            <con:password>${app.password}</con:password>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:config>
      </con:testStep><con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>16cf45a0-c1af-4c33-8819-0a4ea8276756</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>1342966e-515f-4ec0-9a4c-9d7c51c48542</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>1fb764e4-1840-4cf8-af80-00f7f2c2ece6</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3b800581-6387-44ff-b35b-945408787b7c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>edfd8dac-0104-4730-8cc6-0428d656d0ad</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>6a97c497-6e1b-4cef-b11d-07bf8213303c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f90e9cac-ab42-46ea-98df-be81bfe12c6a</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>0d0d0e4d-ae89-44ba-8a1f-a351325fb2ac</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>335a9d86-8bef-4093-94b6-f118d2b94d26</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>8cc6b576-1299-4a62-a3cb-02dba18d783c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3d446bb9-7f2d-437d-ba9d-538c8544ebca</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>887ed9bf-ef65-4cd6-8d63-fe63059b6114</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5e49a61f-6c85-495d-9b4a-4cb38df93a4c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>ff9f7042-ba4f-437e-a043-8021225671b8</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>d76aa335-29eb-4aa2-91cd-16d24dbca2ba</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>679e8216-4253-4db8-8c5d-14aaa0c542fd</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>71a6c31e-5f1d-4b27-b2a7-44b62806bf64</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5a75c453-48bd-46bc-b1f3-1987ee84ae9b</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>5acde369-b009-4471-a36a-146d0396a252</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>fd95a9ee-7a42-47ac-acef-a96cb56e687c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3b97c817-b31a-4a3f-b8ff-409f243cff67</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>e2cdbfdb-8bb7-4def-9ab4-51a9f9aa9b35</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>a461e16f-8295-44f1-8150-5ac5d8413f25</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>8c722f3e-448b-48cb-9417-916e6c71f2a4</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>b5ffe9da-6232-45b2-8878-ff6d59663ebd</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f9f33afa-18df-4001-b902-af22172b09c9</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f41cff6a-ef96-412a-88b1-035cd578ec10</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>bf010173-19fa-4baf-b5f4-0aa02758a4ca</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>c9f13830-2d42-4ea7-afff-1a1c3960b124</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    <con:breakPoints><con:testStepId>18313ee5-9be5-461b-bbef-4ac16dc18a16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>629d7ffd-2eeb-46e3-bb04-778428631c99</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c1469165-8392-4ede-ae0c-08bc0ba0118c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>148dfbe7-7b0c-4b16-85d1-8e136ffc9157</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/>
    <con:reportParameters/>
  </con:testSuite><con:requirements/>
  <con:properties/>
  <con:wssContainer/>
  <con:databaseConnectionContainer>
    <con:databaseConnection>
      <con:name>assignKey</con:name>
      <con:driver>com.mysql.jdbc.Driver</con:driver>
      <con:connectionString>jdbc:mysql://ec2-107-21-140-55.compute-1.amazonaws.com:3306/naesta_cleanup?user=sbedb&amp;password=PASS_VALUE</con:connectionString>
      <con:password>admin@CONTROLGROUP</con:password>
    </con:databaseConnection>
  </con:databaseConnectionContainer>
  <con:reporting>
    <con:xmlTemplates/>
    <con:parameters/>
  </con:reporting>
  <con:sensitiveInformation/>
</con:soapui-project>