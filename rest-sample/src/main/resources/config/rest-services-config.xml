<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:oxm="http://www.springframework.org/schema/oxm"
		xmlns:util="http://www.springframework.org/schema/util"
		xmlns:mvc="http://www.springframework.org/schema/mvc"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:tx="http://www.springframework.org/schema/tx"
		xmlns:security="http://www.springframework.org/schema/security"
		xsi:schemaLocation="
			http://www.springframework.org/schema/security
			http://www.springframework.org/schema/security/spring-security-3.0.xsd
			http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/mvc
			http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/oxm
			http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd
			http://www.springframework.org/schema/util
  			http://www.springframework.org/schema/util/spring-util-3.0.xsd
  			http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<!-- Enables automatic bean discovery -->
	<context:annotation-config/>

	<!--
		Enables annotation-driven Spring MVC: allows binding request parameters to handler method parameters
		registers several features, including JSR-303 validation support, message conversion, field formatting
	-->
	<mvc:annotation-driven/>

	<!--
		 Setup spring to pull in @Controller, @RequestMapping, etc Configuration scans specified packages
		 for classes configured as Spring managed beans and automatically sets up objects annotated with
		 @Controller, @Service etc.
	-->
    <context:component-scan base-package="com.app*" />


	<!-- Message Converter Configuration -->
	<!--=======================================================================================================================-->

	<!-- Defines JSON message converter: converts POJOs to JSON and backwards -->
	<bean id="jsonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="prefixJson" value="false"/>
		<property name="supportedMediaTypes" value="application/json"/>
	</bean>

	<!-- Enables converters by registering them in the AnnotationMethodHandlerAdapter -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<util:list id="beanList">
				<ref bean="jsonHttpMessageConverter"/>
			</util:list>
		</property>
	</bean>



 	<!-- DataSource, Hibernate and Transaction Manager Configuration -->
 	<!--=======================================================================================================================-->

 	<!-- DataSource Configuration -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/test" />
		<property name="username" value="adminuser" />
		<property name="password" value="adminuser" />
	</bean>

 	<!-- Hibernate Session Factory Configuration -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="packagesToScan" value="com.app.domain"/>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="default_schema">test</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.use_sql_comments">true</prop>
				<prop key="hibernate.jdbc.batch_size">50</prop>
				<prop key="hibernate.max_fetch_depth">6</prop>
				<prop key="hibernate.connection.release_mode">after_transaction</prop>
			</props>
		</property>

	</bean>
 
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<!--
        Post-processor to perform exception translation on @Repository classes
        (from native exceptions to Spring DataAccessException hierarchy).
    -->
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
</beans>
