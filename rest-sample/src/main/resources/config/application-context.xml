<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:mvc="http://www.springframework.org/schema/mvc"
		xmlns:context="http://www.springframework.org/schema/context"
		xsi:schemaLocation="
			http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
			http://www.springframework.org/schema/mvc
			http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-3.2.xsd">


	<!-- Enables injection of ConstraintValidator instantiated by spring into custom JSR303 validation -->
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>


	<!--
		 Setup spring to pull in @Controller, @RequestMapping, etc Configuration scans specified packages
		 for classes configured as Spring managed beans and automatically sets up objects annotated with
		 @Controller, @Service etc.
	-->
    <context:component-scan base-package="com.app*" />


	<!--
		Enables annotation-driven Spring MVC: allows binding request parameters to handler method parameters
		registers several features, including JSR-303 validation support, message conversion, field formatting.
		Message converter beans define the precedence of converters. 
	-->
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="false">
			<bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />
			<bean class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter" />
		</mvc:message-converters>
	</mvc:annotation-driven>


	<!--
        Post-processor to perform exception translation on @Repository classes
        (from native exceptions to Spring DataAccessException hierarchy).
    -->
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

</beans>
